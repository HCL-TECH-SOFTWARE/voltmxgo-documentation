{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome","text":"<ul> <li> <p> Get started</p> <ul> <li> <p>System requirements</p> </li> <li> <p>Compatibility matrix</p> </li> <li> <p>Installation and upgrade</p> </li> <li> <p>Tutorials</p> </li> <li> <p>Trainings and webinars</p> </li> <li> <p>Video tutorials and demonstrations</p> </li> </ul> </li> <li> <p> What's New?</p> <p>Find out what's new in the latest HCL Volt MX Go release.</p> <p> Go to What's New</p> </li> <li> <p> Tutorials</p> <p>Hands-on introduction to Volt MX Go.</p> <p> Go to Tutorials</p> </li> <li> <p> How-to guides</p> <p>Practical step-by-step guides for performing tasks and operation.</p> <p> Go to How-to guides</p> </li> <li> <p> Topic guides</p> <p>High-level discussion and explanation of key topics and concepts to give background information.</p> <p> Go to Topic guides</p> </li> <li> <p> References</p> <p>Technical references and descriptions on using Volt MX Go.</p> <p> Go to References</p> </li> <li> <p> Quick links</p> <ul> <li> <p>Rosetta API reference documentation </p> </li> <li> <p>Known limitations</p> </li> <li> <p>Support</p> </li> <li> <p>Documentation references</p> </li> <li> <p>Additional considerations</p> </li> </ul> </li> <li> <p> Guide to documentation</p> <p>Provides information on how documentation is organized and on using the Volt MX Go documentation.</p> <p> Go to Guide to documentation</p> </li> </ul>"},{"location":"404.html","title":"404 - Not found","text":"<p>You can refer to the table for the new link to the topic you might be looking for.</p> Topic title Previous link Current link <p>Or, you can access the latest HCL Volt MX Go documentation by clicking here.</p>"},{"location":"howto/index.html","title":"How-to guides","text":"<p>How-to guides instruct users in completing key goals and tasks related to Volt MX Go.</p> <ul> <li> <p>Install</p> </li> <li> <p>Design Import</p> </li> <li> <p>VoltFormula</p> </li> <li> <p>First Touch</p> </li> <li> <p>Apache CouchDB</p> </li> <li> <p>Operation</p> </li> <li> <p>Uninstall</p> </li> </ul>"},{"location":"howto/couchdb/index.html","title":"Apache CouchDB","text":"<p>How-to guides for instructing users in completing key goals and tasks related to Apache CouchDB<sup>1</sup> adapter.</p> <ul> <li> <p>Import ViewSchema endpoint into Apache CouchDB data model</p> </li> <li> <p>Query and update the first document in a CouchDB view for schema management</p> </li> </ul> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"howto/couchdb/imprtschema.html","title":"Import ViewSchema endpoint into Apache CouchDB data model","text":""},{"location":"howto/couchdb/imprtschema.html#about-this-task","title":"About this task","text":"<p>Guides you through importing the ViewSchema endpoint under the SchemaManagement object of a CouchDB database to enable schema management within the imported data model of the configured Apache CouchDB<sup>1</sup> object service. The ViewSchema endpoint allows developers to query and update the first document in a CouchDB view to keep the inferred schema current.</p> <p>For more information, see Schema Management.</p>"},{"location":"howto/couchdb/imprtschema.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have an active CouchDB instance, and your Volt Foundry server is able to connect to the CouchDB host via HTTP/HTTPS.</li> <li>You have configured an object service for Apache CouchDB in Volt Foundry, and have generated the data model.</li> </ul>"},{"location":"howto/couchdb/imprtschema.html#procedure","title":"Procedure","text":"<ol> <li>Log in to Volt Foundry.</li> <li>In the left pane of the Volt MX Foundry Console, click API Management.</li> <li>On the APIs page, navigate to Objects, then select the object service configured for Apache CouchDB into which you want to import the ViewSchema endpoint.</li> <li> <p>On the Data Model tab, click Generate.</p> <p>The Import Objects from Backend dialog appears, displaying the CouchDB databases.</p> </li> <li> <p>Expand the target database, then expand SchemaManagement, and select the checkbox next to ViewSchema.</p> <p>In the example image, the population database is the target database.</p> <p></p> </li> <li> <p>Click Next, then click Generate. The ViewSchema endpoint is now added to the Data Model.</p> <p></p> </li> </ol>"},{"location":"howto/couchdb/imprtschema.html#additional-information","title":"Additional information","text":"<p>The ViewSchema endpoint includes the fields action, record, and viewName fields, and supports only the PUT method. The Request Payload for the PUT method follows the structure shown in the example image.</p> <p></p> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"howto/couchdb/viewupdate.html","title":"Query and update the first document in a CouchDB view for schema management","text":""},{"location":"howto/couchdb/viewupdate.html#about-this-task","title":"About this task","text":"<p>The Apache CouchDB<sup>1</sup> adapter infers a provisional schema by analyzing the first document returned from a CouchDB view. This task guides you through querying that first document to retrieve and review the schema, and then updating the document as needed to ensure the inferred schema accurately represents the expected data structure.</p>"},{"location":"howto/couchdb/viewupdate.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have an active CouchDB instance, and your Volt Foundry server is able to connect to the CouchDB host via HTTP/HTTPS.</li> <li>You have configured an object service for Apache CouchDB in Volt Foundry, and have generated the data model.</li> <li>You have imported the ViewSchema endpoint into the data model of a configured object service for Apache CouchDB in Volt Foundry.</li> </ul>"},{"location":"howto/couchdb/viewupdate.html#procedures","title":"Procedures","text":""},{"location":"howto/couchdb/viewupdate.html#query-the-first-document-in-the-couchdb-view","title":"Query the first document in the CouchDB view","text":"<p>Perform this procedure to query the first document returned from the CouchDb view, allowing you to retrieve and review the inferred schema.</p> <ol> <li>Log in to Volt Foundry.</li> <li>In the left pane of the Volt MX Foundry Console, click API Management.</li> <li>On the APIs page, navigate to Objects, then select the object service configured for Apache CouchDB where you want to retrieve and review the inferred schema.</li> <li>Click the Mapping tab, expand ViewSchema, and select the PUT method.</li> <li> <p>Expand the base mapper1, then click the Test tab.</p> <p>The Request Payload should follow the structure shown in the example image.</p> <p></p> </li> <li> <p>Enter the values for the fields.</p> <p>Example payload:</p> <pre><code>{\n    \"action\": \"getSchema\",\n    \"record\": \"\",\n    \"viewName\": \"afrian_cities\"\n}\n</code></pre> <p>Tip</p> <ul> <li>The <code>action</code> field accepts only two values: <code>getSchema</code> or <code>updateSchema</code>.</li> <li>The <code>viewName</code> field must match the name of the CouchDB view you want to query.</li> </ul> </li> <li> <p>Click Send.</p> </li> </ol> <p>You will receive a response containing the record of the first document from the specified CouchDB view.</p> <p>Example response:</p> <pre><code>{\n    \"continent\": \"AF\",\n    \"country\": \"Egypt\",\n    \"infants\": 80000,\n    \"phds\": 5000,\n    \"grads\": 150000,\n    \"_rev\": \"1-1676ce76eece9cfe72384b059628cf79\",\n    \"name\": \"Cairo\",\n    \"_id\": \"0b649f10-f5ec-4b81-bd97-dabb36d11a96\",\n    \"censusdate\": \"2023-12-31T00:00:00Z\",\n    \"population\": 9900000\n}\n</code></pre>"},{"location":"howto/couchdb/viewupdate.html#update-the-first-document-in-the-couchdb-view","title":"Update the first document in the CouchDB view","text":"<p>Follow this procedure to update the first document returned from the CouchDb view to ensure that the inferred schema accurately represents the expected data structure.</p> <p>Note</p> <p>The procedure assumes you have selected the PUT method of the ViewSchema endpoint and clicked the Test tab after expanding base mapper 1.</p> <ol> <li> <p>Enter the values for the fields in the Request Payload.</p> <p>For example, using the example response and assuming you want to add a new field called <code>postgrads</code> to capture the number of postgraduates in the city, the request payload should look like this:</p> <pre><code>{\n\"action\": \"updateSchema\",\n\"record\": \"{\\\"continent\\\": \\\"AF\\\", \\\"country\\\": \\\"Egypt\\\", \\\"infants\\\": 80000, \\\"phds\\\": 5000, \\\"grads\\\": 150000, \\\"_rev\\\": \\\"1-1676ce76eece9cfe72384b059628cf79\\\", \\\"name\\\": \\\"Cairo\\\", \\\"_id\\\": \\\"0b649f10-f5ec-4b81-bd97-dabb36d11a96\\\", \\\"censusdate\\\": \\\"2023-12-31T00:00:00Z\\\", \\\"population\\\": 9900000, \\\"postgrads\\\": 500}\",\n\"viewName\": \"african_cities\"\n}\n</code></pre> <p>Note</p> <p>The value of the <code>record</code> field must be a stringified JSON where all double quotes (\") are escaped with a backslash (\\) when the <code>action</code> is <code>updateSchema</code>.</p> </li> <li> <p>Click Send.</p> </li> </ol> <p>Important</p> <p>After executing the <code>updateSchema</code>, you must remove the existing data model with the old schema and reimport the CouchDB view with the same name. This ensures the new schema is applied and used going forward.</p>"},{"location":"howto/couchdb/viewupdate.html#additional-information","title":"Additional information","text":"<p>You can use the following client-side Javascript code to generate the properly escaped string required for the payload when executing <code>updateSchema</code>.  </p> <pre><code>const jsonText = `{\n  \"continent\": \"AF\",\n  \"country\": \"Egypt\",\n  \"infants\": 80000,\n  \"phds\": 5000,\n  \"grads\": 150000,\n  \"_rev\": \"1-1676ce76eece9cfe72384b059628cf79\",\n  \"name\": \"Cairo\",\n  \"_id\": \"0b649f10-f5ec-4b81-bd97-dabb36d11a96\",\n  \"censusdate\": \"2023-12-31T00:00:00Z\",\n  \"population\": 9900000\n}`;\n\n// Step 1: Parse the JSON text into a JS object\nconst obj = JSON.parse(jsonText);\n\n// Step 2: Stringify the object (produces compact JSON with quotes escaped)\nconst escapedJsonString = JSON.stringify(obj).replace(/\"/g, '\\\\\"');\n\nconsole.log(`\"${escapedJsonString}\"`);\n</code></pre> <p>Note</p> <p>The <code>jsonText</code> variable should contain the JSON response obtained from executing the <code>getSchema</code> action.</p> <p>You can also use the following Javascript function to generate the properly escaped string required for the payload when executing <code>updateSchema</code>.  </p> <pre><code>function toEscapedJsonString(obj) {\n  // Step 1: Stringify the object into normal JSON\n  const jsonString = JSON.stringify(obj);\n\n  // Step 2: Escape the double quotes\n  const escapedJsonString = jsonString.replace(/\"/g, '\\\\\"');\n\n  // Step 3: Wrap in quotes to match your example\n  return `\"${escapedJsonString}\"`;\n}\n\n// Example usage:\nconst record = {\n  continent: \"AF\",\n  country: \"Egypt\",\n  infants: 80000,\n  phds: 5000,\n  grads: 150000,\n  _rev: \"1-1676ce76eece9cfe72384b059628cf79\",\n  name: \"Cairo\",\n  _id: \"0b649f10-f5ec-4b81-bd97-dabb36d11a96\",\n  censusdate: \"2023-12-31T00:00:00Z\",\n  population: 9900000\n};\n\nconst anotherString = toEscapedJsonString(record);\nconsole.log(anotherString);\n</code></pre> <p>After running the preceding Javascript function, the variable <code>anotherString</code> contains:  </p> <pre><code>\"{\\\"continent\\\": \\\"AF\\\", \\\"country\\\": \\\"Egypt\\\", \\\"infants\\\": 80000, \\\"phds\\\": 5000, \\\"grads\\\": 150000, \\\"_rev\\\": \\\"1-1676ce76eece9cfe72384b059628cf79\\\", \\\"name\\\": \\\"Cairo\\\", \\\"_id\\\": \\\"0b649f10-f5ec-4b81-bd97-dabb36d11a96\\\", \\\"censusdate\\\": \\\"2023-12-31T00:00:00Z\\\", \\\"population\\\": 9900000}\"\n</code></pre> <p>Note</p> <p>The <code>record</code> variable in the above Javascript function should contain the JSON response obtained from executing the <code>getSchema</code> action.</p> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"howto/designimport/index.html","title":"Design Import","text":"<p>How-to guides for instructing users in completing key goals and tasks related to Design Import.</p> <ul> <li> <p>Import Domino application</p> </li> <li> <p>Create a native app project</p> </li> <li> <p>Configure mobile app browser</p> </li> <li> <p>Access imported agents in a published Domino app</p> </li> </ul>"},{"location":"howto/designimport/configmobile.html","title":"Configure mobile app browser","text":""},{"location":"howto/designimport/configmobile.html#about-this-task","title":"About this task","text":"<p>Shows you how to configure the mobile app browser before building and publishing the Native App.</p>"},{"location":"howto/designimport/configmobile.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have imported a Domino application into a native app project using Design Import.</li> <li>You have launched Volt Iris and opened your native app project.</li> </ul>"},{"location":"howto/designimport/configmobile.html#procedure","title":"Procedure","text":"<ol> <li>Click the Design tab.</li> <li> <p>Under Project, expand the Forms folder and then your start-up form, for example frmLogin, until you reach your login button, for example btnLOGIN.</p> <p></p> </li> <li> <p>Select your login button and then go to the right side of the work area to click Properties and select the Action tab.</p> </li> <li> <p>Click Edit corresponding to the onClick action.\u00a0The Action Editor opens.</p> <p></p> </li> <li> <p>On the Action Editor, click Invoke service in the diagram and then select Use Device Browser under Select Browser Widget.</p> <p></p> <p>Note</p> <p>The default view in the Action Editor is the Diagram View. In case you can't see the diagram to select the Invoke service, make sure to select the Diagram View tab.</p> </li> <li> <p>Click Save.</p> </li> </ol>"},{"location":"howto/designimport/deleteform.html","title":"Delete existing forms while using the Design Import wizard","text":"<p>Important</p> <p>The information in this document is based on the latest version of HCL Volt MX Go, HCL Domino REST API, and HCL Domino.</p>"},{"location":"howto/designimport/deleteform.html#about-this-task","title":"About this task","text":"<p>Guides you on how to delete forms when importing a Domino application into an existing project.</p>"},{"location":"howto/designimport/deleteform.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You must complete the Volt MX Go installation.</p> </li> <li> <p>You already imported a Domino application on your project.</p> </li> <li> <p>You must create a Domino application on your existing project.</p> </li> </ul>"},{"location":"howto/designimport/deleteform.html#procedure","title":"Procedure","text":"<ol> <li> <p>On the top menu, select Project \u2192 Import \u2192 Domino Application. The VoltMX Design Import Wizard opens. You may do the steps in importing a Domino application until you reach the  Summary page.</p> </li> <li> <p>Click the Build Iris Application. If existing Volt Iris forms are detected, a prompt will occur. This prompt will notify the user whether to overwrite the current forms.</p> <p></p> </li> <li> <p>Click Yes to delete the existing forms or click No\u00a0to keep the existing forms.</p> <p>This won't guarantee you that your imported application will generate and build successfully.</p> </li> <li> <p>Click Done on the Result page. </p> </li> </ol>"},{"location":"howto/designimport/diagents.html","title":"Access imported agents in a published Domino app","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go version 2.0.3 release. </p> <p>Agents are stand-alone programs that perform a specific task in one or more Domino databases. Agents are the most flexible type of automation you can add to most design elements in a\u00a0Domino\u00a0application. To learn more, see Agents  in the HCL Domino Designer documentation.</p> <p>Note</p> <p>As of Volt MX Go release v2.0.4, only agents meeting the following conditions can be imported using Design Import:</p> <ul> <li>The agent's trigger type configuration is action menu selection.</li> <li>The agent's document setting is configured to All.</li> </ul> <p>You can include agents in the import when importing a Domino application using Design Import. These agents are imported as\u00a0actions and are available in\u00a0all the views on the imported Domino application.</p>"},{"location":"howto/designimport/diagents.html#about-this-task","title":"About this task","text":"<p>Guides you on accessing and using imported agents in a published Domino app.</p>"},{"location":"howto/designimport/diagents.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have imported a Domino application, including agents, using Design Import to a Web App project in Volt Iris.</p> <p>Note</p> <p>Agents are currently not supported for Native App projects.</p> </li> <li> <p>You have published the imported Domino application using Volt Iris and opened the published application.</p> </li> </ul>"},{"location":"howto/designimport/diagents.html#procedure","title":"Procedure","text":"<p>For this procedure, the steps will be based on an example Domino application with agents capable of modifying the region assignment of customers. Although the example Domino application and its agents will differ from your imported Domino application and its agents, the process of accessing and executing the agents will be the same.\u00a0</p> <ol> <li> <p>Upon opening the published application in a browser, you will see the Dashboard. From the Dashboard, click a view. In the example image, we will click the Customer B ByRegion view.</p> <p></p> </li> <li> <p>On the Customer B ByRegion page, click Agents from the top header to open a context menu showing available agents. In the example image, you can see the available agents.</p> <p></p> </li> <li> <p>Select an agent. In the example image, the West to East agent is selected to move all customers from the West region to the East region.</p> <p></p> </li> <li> <p>On the dialog indicating that the task of the selected agent has been completed, click OK.</p> <p></p> </li> </ol> <p>In the example image, you can see that the task of the selected agent, which is to move all customers from the West region to the East region, has been completed.</p> <p></p>"},{"location":"howto/designimport/dicreatenativeapp.html","title":"Create a native app project","text":""},{"location":"howto/designimport/dicreatenativeapp.html#about-this-task","title":"About this task","text":"<p>Guides you through the process of creating a new project for a mobile or tablet platform.</p>"},{"location":"howto/designimport/dicreatenativeapp.html#before-you-begin","title":"Before you begin","text":"<p>You have launched Volt Iris.</p>"},{"location":"howto/designimport/dicreatenativeapp.html#procedure","title":"Procedure","text":"<ol> <li>In the top menu of Volt Iris, select Project \u2192 New Project.</li> <li> <p>In the What do you want to start with now? dialog, select Native App and click Next.</p> <p></p> </li> <li> <p>In the Which device size do you want to start building for first? dialog, select Mobile or Tablet and click Next.</p> </li> <li> <p>Enter your Project Name and click Create.  </p> <p></p> </li> </ol> <p>You have now created a new native app project. You can see your project name in the upper-left corner of the Volt Iris canvass.</p> <p></p> <p>Tip</p> <p>For more information on importing Domino applications, see the Design Import tutorial.</p>"},{"location":"howto/designimport/diimport.html","title":"Import a Domino application","text":"<p>Important</p> <p>The information in this document is based on the latest version of HCL Volt MX Go, HCL Domino REST API, and HCL Domino.</p>"},{"location":"howto/designimport/diimport.html#about-this-task","title":"About this task","text":"<p>Guides you through importing a Domino application to Volt Iris via Design Import using an existing Volt Foundry app and its identity service.</p>"},{"location":"howto/designimport/diimport.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have met all the Design Import process prerequisites.  </li> <li>You have launched Volt Iris and have created a new project.</li> </ul>"},{"location":"howto/designimport/diimport.html#procedure","title":"Procedure","text":"<ol> <li> <p>In the top menu, select Project \u2192 Import \u2192 Domino Application. The VoltMX Design Import Wizard opens.</p> </li> <li> <p>On Getting Started step, click Next.</p> <p></p> <p>Using Designer Profile</p> <p>The Designer Profile feature stores the information you enter in the Design Import Wizard when creating an Identity Service in a profile. This profile can be reused the next time you start Design Import to go directly to the Scope and Forms page, thus streamlining the import process.</p> <p>To save your entered information in a profile, you must reach at least the Scope and Forms page in the Design Import Wizard. The profile remains available only while Volt Iris is open. Closing or restarting Volt Iris will delete the profile.</p> <p>The information saved in the profile is based on the latest Identity Service configuration you did in the Design Import Wizard.</p> <p></p> <p>To use the stored profile, click Use Previous Profile and then you will be directed to the Scope and Forms page. </p> </li> <li> <p>On Associate Foundry App step, click Use Existing. The Volt MX Go Applications dialog opens.</p> <p></p> </li> <li> <p>Click Associate corresponding to the Volt Foundry app you want to use.</p> <p>In the example image, only one application is available. The number of applications you will see in the Volt MX Go Applications dialog will depend on the number of applications in the Volt Foundry.</p> <p></p> </li> <li> <p>After the name of the selected Volt Foundry app is displayed, click Next.</p> <p></p> </li> <li> <p>On Identity Service:</p> <ol> <li> <p>Select Use Existing.</p> <p></p> </li> <li> <p>Under Select Existing Identity Service, select an identity service from the drop-down list and then click Next.</p> <p></p> </li> <li> <p>In the HCL Domino Login dialog, log in with your Domino credentials.</p> <p></p> <p>In case a Permission Requested dialog appears, click Allow.</p> <p>Note</p> <p>In case of an error due to incorrect Scope, Client ID, or Client Secret, a dialog shows an error message and information on how to address the error. You must then update the existing identity service you selected in Volt Foundry.</p> </li> <li> <p>Choose the identity service related to your app on Volt Foundry in Foundry App Identity Service and click Next.</p> <p>Tip</p> <p>You should always select the Identity Service name that contains used for DRAPI.</p> <p></p> </li> </ol> </li> <li> <p>On Scope and Forms:</p> <p>Note</p> <ul> <li>Selectable forms, views, and agents are only those set to the active status when configuring the schema in the Domino REST API. Those in inactive status can still be seen but won't be selectable. Unsupported agents are also shown but won't be selectable. </li> <li>Actions are often active within the Domino database and can only be modified using Domino Designer. Imported actions might not function as expected. If this happens, you modify or update the actions to function as expected. For more information, see Modify or update imported actions using VoltFormula.</li> <li>If a dialog opens indicating that your Domino REST API schema has misconfigured settings, kindly see Troubleshooting for more information on addressing the issue.</li> <li>If you see a warning icon appear beside any form, form field, view, or agent, click the Reports folder icon and click a report to open a detailed report explaining the cause of the warning.</li> <li>You can click the Refresh icon to update the scope in case there are changes in the Domino REST API schema without exiting the wizard.</li> <li>You can use the All, Active, Inactive, and Unsupported buttons in each tab to filter what's displayed.</li> <li>You can use the Search box to find forms, fields, actions, views, and agents. The search results will automatically update as you type the letters of your keyword in the Search box. If you want to clear the search, simply click the clear icon.</li> </ul> <ol> <li> <p>Select the scope you want to use from the drop-down list.</p> <p>The available scopes are based on the scopes defined when creating the identity service.  </p> <p></p> </li> <li> <p>Click the Forms tab and select\u00a0the forms, fields, and actions you want to include in the import.</p> <p></p> </li> <li> <p>Click the Views tab and select\u00a0the views and actions you want to include in the import.</p> <p></p> </li> <li> <p>Click the Agents tab and select\u00a0the\u00a0agents you want to include in the import.</p> <p></p> </li> <li> <p>Click Next.</p> </li> </ol> </li> <li> <p>On Summary, review the selected <code>forms</code>, <code>fields</code>, <code>views</code>, and <code>agents</code> you want to import. Once you confirm your selection, click Build Iris Application.</p> <p></p> <p>Note</p> <ul> <li>It may take a while to complete the publishing of the imported Domino app.</li> <li> <p>If a dialog indicating that existing Volt Iris forms are detected appears, click Yes to overwrite the detected forms and build the application. The existing Volt Iris forms were automatically generated when you created the new project in Volt Iris. </p> <p></p> </li> </ul> </li> <li> <p>On Result, see the final <code>forms</code>, <code>views</code>, <code>actions</code>,<code>agents</code>, and then click Done.</p> <p>Tip</p> <ul> <li>A checkmark icon indicates a successful import.  </li> <li>A warning icon indicates a successful import, but the imported component might not work as expected due to, for example, its data type not being currently supported. </li> <li>An error icon indicates a failed import. </li> <li>Click the Show only with errors toggle in a specific tab to the on position to see all elements with the error icon in that specific tab. The Show failed imports toggle won't be visible in a specific tab when there are no failed imports in that particular tab.</li> <li>You can click view report to see a results report of imported forms, views, and agents in a new window.</li> </ul> <p></p> </li> </ol> <p>Once you click Done, you can see the imported forms and views in a storyboard view in Volt Iris.</p> <p></p> <p>To see the imported forms in a directory, click the DESIGN tab to show the Project tab. You then expand the Responsive Web / Desktop and the Form directory to show the imported forms, views, and actions.</p> <p></p>"},{"location":"howto/firsttouch/index.html","title":"First Touch","text":"<p>How-to guides for instructing users in completing key goals and tasks related to First Touch.</p> <ul> <li> <p>Import First Touch into Volt Iris</p> </li> <li> <p>Update FirstTouchRecipes.nsf</p> </li> </ul>"},{"location":"howto/firsttouch/FTnsfupdate.html","title":"Update FirstTouchRecipes.nsf","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul>"},{"location":"howto/firsttouch/FTnsfupdate.html#about-this-task","title":"About this task","text":"<p>Guides you in manually updating your Domino container if you obtain a new version of the Domino database FirstTouchRecipes.nsf.</p>"},{"location":"howto/firsttouch/FTnsfupdate.html#procedure","title":"Procedure","text":"<ol> <li> <p>Uninstall the First Touch app from Volt Foundry.</p> </li> <li> <p>Identify the name of the Domino container by running the following command:</p> <pre><code>kubectl get pods -n mxgo\n</code></pre> <p>You should see an output similar to the following:</p> <pre><code>NAME                                         READY   STATUS      RESTARTS   AGE\ndrapi-6949c45b8-wghbz                        3/3     Running     0          8d\nmysql-0                                      1/1     Running     0          8d\nfoundry-db-update-zn5vg                      0/1     Completed   0          7d23h\nvoltmx-foundry-apiportal-c874cb6d-l2k8h      1/1     Running     0          7d22h\nvoltmx-foundry-integration-76dc89b57-qmq2t   1/1     Running     0          7d22h\nvoltmx-foundry-identity-85f9854f8b-n6b2d     1/1     Running     0          7d22h\nvoltmx-foundry-console-664c75c6b5-8lm6v      1/1     Running     0          7d22h\n</code></pre> <p>From the example, the name of the Domino pod is <code>drapi-6949c45b8-wghbz</code>.</p> </li> <li> <p>Copy the new <code>FirstTouchRecipes.nsf</code> file into the Domino container by running the following:</p> <p>Command:</p> <pre><code>kubectl cp FirstTouchRecipes.nsf &lt;Domino pod name&gt;:/tmp/FirstTouchRecipes.nsf -c drapi\n</code></pre> <p>Example:</p> <pre><code>kubectl cp FirstTouchRecipes.nsf drapi-6949c45b8-wghbz:/tmp/FirstTouchRecipes.nsf -c drapi\n</code></pre> </li> <li> <p>Exec into the Domino container by running the following:</p> <p>Command:</p> <pre><code>kubectl exec -it &lt;Domino pod name&gt; -c drapi -- bash\n</code></pre> <p>Example:</p> <pre><code>kubectl exec -it drapi-6949c45b8-wghbz -c drapi -- bash\n</code></pre> <p>You should get a shell prompt similar to this:</p> <pre><code>[hcl@drapi-6949c45b8-wghbz ~]$\n</code></pre> <p>Important</p> <p>The succeeding steps involve executing commands from within this container shell. Make sure you run the commands at this new shell prompt. If you get disconnected, run the <code>kubectl exec -it</code> command again.</p> </li> <li> <p>Update your path environment variable by running the following command:</p> <pre><code>export PATH=$PATH:/opt/nashcom/startscript/\n</code></pre> </li> <li> <p>Issue a request to stop Domino by running the following command:</p> <pre><code>rc_domino_script stop\n</code></pre> <p>You should see something like this for output:</p> <pre><code>Using Domino config File [/etc/sysconfig/rc_domino_config]\n\nStopping Domino for xLinux (hcl)\nKEEP started in task mode, no pre_shutdown action required\n... waiting for shutdown to complete\n... waiting 10 seconds\n... waiting 20 seconds\nKEEP started in task mode, no post_shutdown action required\nDomino stopped (27 sec)\nDomino for xLinux (hcl) shutdown completed\n\n[hcl@drapi-6949c45b8-wghbz ~]$\n</code></pre> </li> <li> <p>Rename original First Touch database and copy in the new database file:</p> <p><pre><code>mv /local/notesdata/FirstTouchRecipes.nsf  /local/notesdata/FirstTouchRecipes.nsf.original\n</code></pre> <pre><code>mv /tmp/FirstTouchRecipes.nsf  /local/notesdata/FirstTouchRecipes.nsf\n</code></pre></p> </li> <li> <p>Restart Domino by running the following command:</p> <pre><code>rc_domino_script start\n</code></pre> <p>The output should indicate:</p> <pre><code>Using Domino config File [/etc/sysconfig/rc_domino_config]\n\n\nArchived log file to '/local/notesdata/hcl_231010_182050.log'\nRemoved LoadMon-Data '/local/notesdata/loadmon.ncf'\n\nStarting Domino for xLinux (hcl)\ndone PID is 742526\n\nKEEP starting in task mode, no post_startup action required\n\n[hcl@drapi-6949c45b8-wghbz ~]$\n</code></pre> </li> </ol> <p>You are now set to re-install the First Touch Recipe Catalog application in Volt Foundry by following the Log in to Volt Foundry instructions.</p>"},{"location":"howto/firsttouch/importft.html","title":"Import First Touch Recipes app into Volt Iris","text":""},{"location":"howto/firsttouch/importft.html#about-this-task","title":"About this task","text":"<p>Imports the First Touch Recipes app into Volt Iris so that you can try out the different development features of Volt Iris.</p>"},{"location":"howto/firsttouch/importft.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have installed the First Touch app in Volt Foundry. For more information, see First Touch tutorial.</p> </li> <li> <p>You have downloaded the First Touch Recipes project, FirstTouchRecipe.zip, from the HCL License &amp; Download Portal. For more information, see Download HCL Volt MX Go installers.</p> </li> </ul>"},{"location":"howto/firsttouch/importft.html#procedure","title":"Procedure","text":""},{"location":"howto/firsttouch/importft.html#to-import-the-first-touch-recipes-app-project","title":"To import the First Touch Recipes app project","text":"<ol> <li> <p>Open Volt Iris. When the Sign-in to your account page appears, close it by clicking the Volt Iris home icon.</p> <p></p> </li> <li> <p>Import the First Touch Recipes app project.</p> <ol> <li>On the top menu, select Projects \u2192 Import \u2192 Local Project \u2192 Open as New Project \u2192 From an Archive. A file selector dialog opens.</li> <li>Search and select the FirstTouchRecipe.zip file, and click Open.</li> </ol> </li> </ol> <p>The First Touch Recipes app is now imported into your workspace in Volt Iris and you can now try and experience the different development features of Volt Iris to edit and update the First Touch Recipes app.</p>"},{"location":"howto/firsttouch/importft.html#to-build-and-publish-the-first-touch-recipes-app","title":"To build and publish the First Touch Recipes app","text":"<p>If you want to build and publish the First Touch Recipes app to see how it looks or if you want to see the outcome of the edits and updates you have done:</p> <ol> <li> <p>Check Volt Foundry settings.</p> <ol> <li>Go to Preferences.<ul> <li>For Windows, select Edit \u2192 Preferences.</li> <li>For Mac, depending on your macOS, select Volt Iris \u2192 Preferences or Settings.</li> </ul> </li> <li>On the Volt Iris Preferences dialog, click Volt Foundry.</li> <li>On the Volt Foundry tab, enter your Volt Foundry URL in the Foundry URL text box, and then click Validate. You should see the \u201cValidation Successful\u201d message at the top of the dialog.</li> <li>Click Done.</li> </ol> </li> <li> <p>Log in to Volt Iris.</p> <ol> <li>Click Login in the upper right corner of the page.</li> <li>Enter your email and password for Volt Foundry on the Sign in to your account page.</li> <li>Click Sign In. Your username appears next to the profile icon.</li> </ol> </li> <li> <p>Connect to Volt Foundry.</p> <ol> <li> <p>Click the Data &amp; Services tab menu and select Link to Existing App.</p> <p></p> </li> <li> <p>Click Associate corresponding to a First Touch Recipes app.</p> <p></p> </li> <li> <p>Click Project Services and see the connections to the Volt Foundry data.</p> </li> </ol> </li> <li> <p>Build and publish.</p> <ol> <li>On top menu, select Build \u2192 Build and Publish Web.</li> <li>Select Responsive Web checkbox and Clean Build checkbox, and then click Build.</li> <li>Once the publish completion dialog appears, click OK.</li> <li> <p>Copy and open the link in your browser to open the First Touch Recipes app.</p> <p></p> </li> </ol> </li> </ol>"},{"location":"howto/install/index.html","title":"Install","text":"<p>How-to guides for instructing users in completing key goals and tasks related to Volt MX Go installation.</p> <ul> <li> <p>Create a Volt Foundry administrator account</p> </li> <li> <p>Access Domino REST API</p> </li> <li> <p>Connect to Domino server from Notes client</p> </li> <li> <p>Configure Kubernetes Ingress for Domino REST API</p> </li> <li> <p>Enable VoltScript in Volt Foundry</p> </li> </ul>"},{"location":"howto/install/accessdrapi.html","title":"Access Domino REST API","text":""},{"location":"howto/install/accessdrapi.html#about-this-task","title":"About this task","text":"<p>Access Domino REST API Admin UI so you can add and configure a schema, add a scope, and add an application.</p>"},{"location":"howto/install/accessdrapi.html#before-you-begin","title":"Before you begin","text":"<p>You must complete the Volt MX Go installation.</p>"},{"location":"howto/install/accessdrapi.html#procedure","title":"Procedure","text":"<ul> <li> <p>Check how to login to Domino REST API Admin UI  in the HCL Domino REST API documentation.</p> </li> <li> <p>Use your Domino server administrator username and password to log in.  </p> </li> </ul>"},{"location":"howto/install/accessdrapi.html#expected-result","title":"Expected result","text":"<p>A successful login leads you to the Domino REST API landing page. For details on adding and configuring a schema, adding a scope and an application, see Using Admin UI  in the HCL Domino REST API documentation.</p>"},{"location":"howto/install/connectdominofromnotes.html","title":"Connect to Domino server from your Notes client","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul>"},{"location":"howto/install/connectdominofromnotes.html#about-this-task","title":"About this task","text":"<p>Guides you in connecting to the Domino server from your Notes client. If you installed Domino using the MX Go Domino Helm chart, you should configure a Server Connection document to enable connecting to Domino from your Notes client. Follow the steps below.</p>"},{"location":"howto/install/connectdominofromnotes.html#before-you-begin","title":"Before you begin","text":"<p>Make sure that your <code>/etc/hosts</code> file has the preview hostnames. You will need these same entries on any machine you want to connect from, such as your dev laptop. </p>"},{"location":"howto/install/connectdominofromnotes.html#procedure","title":"Procedure","text":"<p>Note</p> <p>The procedure is based on using HCL Notes v12.</p> <ol> <li> <p>Run the following command to copy the <code>admin.id</code> from the domino-drapi pod:</p> <pre><code>kubectl cp -n mxgo -c restapi-log $POD_NAME:/local/notesdata/admin.id ./k8s-notes-admin.id\n</code></pre> <p>Tip</p> <p>The <code>$POD_NAME</code> in the command represents the name of the Domino pod. To get the name of the Domino pod, run the command <code>kubectl get pods -n mxgo</code>. In the following example result, the highlighted text corresponds to the Domino pod name.</p> <p></p> <p>So using the example result, the command above should look like:</p> <p><code>kubectl cp -n mxgo -c restapi-log domino-drapi-6989796bdc-nnmdg:/local/notesdata/admin.id ./k8s-notes-admin.id</code></p> <p>You may see a warning about \"Removing leading '/' from member names\" which is typical when specifying full paths in the copy command.  Ignore the warning.</p> <p>If necessary, copy the <code>k8s-notes-admin.id</code> file to your laptop.</p> </li> <li> <p>Switch your ID within the Notes client.</p> <ol> <li>On your Notes client, select File \u2192 Security \u2192 Switch ID.</li> <li> <p>On the Choose User ID to Switch To dialog, search and select the <code>k8s-notes-admin.id</code> file, and then click Open.</p> <p>Note</p> <p>The default password is <code>password</code>.</p> </li> </ol> </li> <li> <p>Specify your <code>names.nsf</code> file within the Notes client.</p> <ol> <li>On the Notes client, select File \u2192 Open \u2192 HCL Notes Application.</li> <li>On the Open Application dialog, search and select the <code>names.nsf</code> file, and then click Open.</li> </ol> </li> <li> <p>Create a new server connection.</p> <ol> <li>On the Notes client, select Advanced \u2192 New \u2192 Server Connection. The Server Connection page opens.</li> <li>On the Basics tab, enter <code>drapi</code> in the Server name text box and then select the TCPIP checkbox for Use LAN port.</li> <li> <p>Click the Advanced tab, and then enter <code>drapi.mymxgo.com</code> for your server in the Destination server address text box.</p> </li> <li> <p>(Optional) If you configured the value of the <code>exposeNRPC</code> parameter to be <code>HostPort</code> during the DRAPI Helm installation, no further configuration is required and you can proceed to Save &amp; Close. If instead you specified <code>NodePort</code>:</p> <ol> <li> <p>Run the following <code>kubectl</code> command to get the port number of the port picked by Kubernetes for the <code>NodePort</code>:</p> <pre><code>kubectl get services domino-drapi-nrpc-external -n mxgo\n</code></pre> <p>The output should be similar to the following:</p> <pre><code>kubectl get services domino-drapi-nrpc-external -n mxgo\nNAME                         TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)\ndomino-drapi-nrpc-external   NodePort   10.43.84.236   &lt;none&gt;        1352:31657/TCP\n</code></pre> </li> <li> <p>Get the port number from the output and append it to the host name in the Destination server address text box.</p> <p>Using the output example, the PORT(S) column show that port 1352 is being exposed on port 31657.  Append <code>:31657</code> to the host name in the Destination server address text box making a final value of <code>drapi.mymxgo.com:31657</code>.</p> </li> </ol> </li> <li> <p>Click Save &amp; Close.</p> </li> </ol> <p>Note</p> <p><code>drapi</code> is the abbreviation for Domino REST API.</p> </li> </ol>"},{"location":"howto/install/connectdominofromnotes.html#expected-result","title":"Expected result","text":"<p>In your Notes client, you should now be able to select File \u2192 Open \u2192 HCL Notes Application, specify <code>drapi</code> as the server name, and connect to your new Domino server.</p>"},{"location":"howto/install/drapiingress.html","title":"Configure Kubernetes Ingress for Domino REST API","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul>"},{"location":"howto/install/drapiingress.html#about-this-task","title":"About this task","text":"<p>Configures Kubernetes Ingress for Domino REST API. Ingress provides and manages external access to the services in your Kubernetes cluster. It's required to enable browsers to access the applications and back-end services to communicate with each other.</p>"},{"location":"howto/install/drapiingress.html#before-you-begin","title":"Before you begin","text":"<p>Take note of the following information regarding properties and parameters associated with Kubernetes Ingress. The recent improvements have led to variations in the properties and parameters for different versions of Volt MX Go. Refer to the Volt MX Go version for the relevant properties and parameters.</p> <p>Familiarize yourself with the following properties and parameters related to Kubernetes Ingress applicable for Volt MX Go v2.0.4 or earlier.</p> <ul> <li> <p>ingress.enabled: Set to <code>true</code> to enable Ingress. Ingress must be enabled for Domino REST API to function properly. Kindly note that there are certain conditions where you may want to temporarily disable Ingress.</p> </li> <li> <p>ingress.className: This property sets the class name on the Ingress object. The default is empty string, which enables the processing of Ingress objects by your cluster default Ingress controller. If your cluster does not have a default Ingress controller or if you want to override that, set the class name. Common values you might use include \"nginx\", \"traefik\", and \"openshift-default\". When utilizing Azure Application Gateway in AKS, specify \"azure/application-gateway\".</p> </li> <li> <p>ingress.drapiDnsName: The DNS host name that users will use to access the Domino REST API. The default setting is <code>drapi.mymxgo.com</code>.</p> </li> <li> <p>ingress.drapiManagementDnsName: The DNS host name that administrators will use to access the Domino REST API. The default setting is <code>drapi-management.mymxgo.com</code>.</p> </li> <li> <p>ingress.protocol: The communication protocol for accessing Volt Foundry. Its value can be either http or https. This should reflect the type of traffic you want the Ingress or Load Balancer to accept. If <code>ingress.tls</code> is enabled, this setting must be https.</p> </li> <li> <p>ingress.tls: Use this property to configure Ingress with either a Cluster or a Custom SSL certificate.</p> </li> <li> <p>ingress.tls.enabled: Set to <code>true</code> to configure Ingress to use the Cluster SSL Certificate or the specified Custom SSL certificate.</p> </li> <li> <p>ingress.tls.drapiCustomCert: Use to specify a Custom SSL certificate for Domino REST API. If <code>ingress.tls.drapiCustomCert.cert</code> and <code>ingress.tls.drapiCustomCert.key</code> are not set, the Cluster SSL certificate will be used for TLS.</p> </li> <li> <p>ingress.tls.drapiCustomCert.cert: The file name for the custom certificate. Place your SSL certificate file in the top level direct <code>drapi</code> directory (where <code>values.yaml</code> is located). The value of this property should be a file path of the form <code>my-drapi-custom-cert.cert</code> where my-drapi-custom-cert.cert is the name of your certificate file. This certificate must be in DER format as per Section 5.1 of RFC 7468 .</p> </li> <li> <p>ingress.tls.drapiCustomCert.key: The filename for the custom key. Place your SSL certificate key file in the top level direct 'drapi' directory (where values.yaml is located). The value of this property should be of the form <code>my-drapi-custom-cert.key</code> where my-drapi-custom-cert.key is the name of your private key file. The key file must be PKCS #8 in DER format Section 11 of RFC 7468 .</p> </li> <li> <p>ingress.tls.drapiManagementCustomCert: Use to specify a Custom SSL certificate for Domino REST API. If <code>ingress.tls.drapiCustomCert.cert</code> and <code>ingress.tls.drapiCustomCert.key</code> are not set, then the Cluster SSL certificate will be used for TLS.</p> </li> <li> <p>ingress.tls.drapiManagementCustomCert.cert: The file name for the custom certificate. Place your SSL certificate file in the top level direct <code>drapi</code> directory (where <code>values.yaml</code> is located). The value of this property should be a file path of the form <code>my-drapi-mgmt-custom-cert.cert</code> where my-drapi-mgmtcustom-cert.cert is the name of your certificate file. This certificate must be in DER format as per Section 5.1 of RFC 7468 .</p> </li> <li> <p>ingress.tls.drapiManagementCustomCert.key: The file name for the custom key. Place your SSL certificate key file in the top level direct 'drapi' directory (where values.yaml is located). The value of this property should be of the form <code>my-drapi-mgmt-custom-cert.key</code> where my-drapi-mgmt-custom-cert.key is the name of your private key file. The key file must be PKCS #8 in DER format Section 11 of RFC 7468 .</p> </li> <li> <p>ingress.annotations: Allows you to specify additional annotations that will be added to every ingress object. Add one annotation per line. Each annotation should be indented 2 spaces and of the format  <code>annotationName: value</code>. When rendered, your annotation value will automatically be quoted.</p> </li> </ul>"},{"location":"howto/install/drapiingress.html#additional-information","title":"Additional information","text":"<p>You can configure Kubernetes Ingress to accept connections over HTTP or HTTPS. HTTP isn't secure but works without any extra configuration. It's recommended to use HTTPS for most deployments.</p> <p>Note</p> <p>You can't easily change the deployment domain name once installed, this includes changing from HTTP to HTTPS. For more information, see How to change Hostname/IP address and port details of Volt Foundry Server? .</p> <p>One approach to enable HTTPS is to use a self-signed SSL certificate, which avoids purchasing your own certificate from a Certificate Authority (CA). However, since Volt Foundry makes back-end server to server requests between applications, there are more steps to enable Volt Foundry to trust the secured communication channel when utilizing a self-signed certificate.</p> <p>If you configure your Kubernetes Ingress to use a self-signed SSL certificate or an SSL certificate from your enterprise's own Certificate Authority that's not within a trusted root certification path, or if you use the cluster default cert created from a self-signed CA, you need to add the SSL certificate or CA certificate to the trust store used by Tomcat. Failure to do so results in runtime errors when Volt Foundry components need to communicate with each other. For more information, see Certification Authority Trust Model .</p>"},{"location":"howto/install/drapiingress.html#procedure","title":"Procedure","text":"<p>Note</p> <p>In general, perform the following procedure before installing Volt Foundry to enable secure HTTPS communication.</p> <ol> <li> <p>Obtain SSL Certificates. You can use any of the following options:</p> <ul> <li> <p>Purchase a certificate from a trusted Certificate Authority.</p> </li> <li> <p>Obtain a free certificate from Let's Encrypt  or ZeroSSL .</p> </li> <li> <p>Create a self-signed certificate.</p> To create a self-signed certificate <ol> <li> <p>Generate new self-signed certificates:</p> <pre><code>keytool -v -genkey -keyalg RSA -keystore drapi.keystore -alias drapi -ext SAN=dns:drapi.example.com -dname \"cn=drapi.example.com\" -storepass changeit -validity 365\n\nkeytool -v -genkey -keyalg RSA -keystore drapi-management.keystore -alias drapi-management -ext SAN=dns:drapi-management.example.com -dname \"cn=drapi-management.example.com\" -storepass changeit -validity 365\n</code></pre> <p>Note</p> <p>Make sure to replace <code>drapi.example.com</code> with your domain name. You can specify a wild card cert like <code>*.example.com</code> that would enable using a DNS name like <code>drapi.example.com</code> or <code>mydrapi.example.com</code> without changing the certificate. Likewise, do the same for <code>drapi-management.example.com</code>. These commands create new keystores called <code>drapi.keystore</code> and <code>drapi-management.com</code> with a single entry, each containing a new self-signed certificate.</p> </li> <li> <p>Get the private keys from the respective keystores:</p> <pre><code>openssl pkcs12 -in drapi.keystore -nodes -nocerts -out drapi-server.key\nopenssl pkcs12 -in drapi-management.keystore -nodes -nocerts -out drapi-management-server.key\n</code></pre> </li> <li> <p>Get the certificates from the respective keystores:</p> <pre><code>openssl pkcs12 -in drapi.keystore -nokeys -out drapi-server.crt\nopenssl pkcs12 -in drapi-management.keystore -nokeys -out drapi-management-server.crt\n</code></pre> </li> <li> <p>Get the PEM portion from the certificate for Domino REST API only:</p> <pre><code>cat drapi-server.crt | sed -ne '/-BEGIN CERTIFICATE/,/END CERTIFICATE/p' &gt; ./drapi-server.pem\n</code></pre> </li> <li> <p>Proceed to the Step 3. Import certificate into the truststore with keytool.</p> </li> </ol> </li> <li> <p>Use the Kubernetes default cluster certificate by pulling it from your cluster.</p> To obtain default Cluster Certificate <ol> <li> <p>Obtain the cluster's SSL certificate by running the <code>openssl</code> command:</p> <pre><code>openssl s_client -connect my-openshift-ingress:443 -servername drapi.example.com 2&gt;/dev/null &lt;/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; ~/drapi-server.pem\n</code></pre> <p>Note</p> <p>The parameter following <code>-connect</code> must be a DNS name or IP address that resolves to your OpenShift ingress. The <code>-servername</code> parameter specifies the DNS name you use to access your Volt Foundry deployment. This should match the value you specified for <code>serverDomainName</code> in <code>values.yaml</code>. The DNS names could be the same as long as they resolve to the IP address of your Kubernetes load balancer in front of Ingress or Ingress itself.</p> </li> <li> <p>Proceed to Step 3. Import certificate into the truststore with keytool.</p> </li> </ol> </li> </ul> </li> <li> <p>Copy your SSL certificates and keys into the Domino REST API top level directory.</p> <p>Tip</p> <p>Helm creates a Kubernetes secret with your SSL certificate details in it for use by Ingress.</p> <ol> <li> <p>Copy the SSL certificate and key files into the top level direct <code>drapi</code> directory where <code>values.yaml</code> is located by running the following commands. It's assumed that you will run the commands in the directory where you unzipped the Helm charts.</p> <pre><code>cp ~/drapi-server.crt   .\ncp ~/drapi-management-server.crt   .\ncp ~/drapi-server.key   .\ncp ~/drapi-management-server.key   .\n</code></pre> </li> <li> <p>Proceed to Step 4. Update the Helm <code>values.yaml</code> to update the parameters with these file names.</p> </li> </ol> </li> <li> <p>Import certificate into the truststore with keytool.</p> <p>Important</p> <p>If your SSL certificate is issued by a trusted root CA, you can skip this step. </p> <ul> <li>Use the Java utility <code>keytool</code> to import the certificate by running the following command. It's assumed that you will run the command from the root of the directory where you unzipped the Helm charts.</li> </ul> <pre><code># Make foundry aware of the drapi cert:\nkeytool -import -alias drapi2 -file ./drapi-server.pem -keypass changeit -storepass changeit -keystore ../foundry/voltmx-foundry/certs/cacerts\n</code></pre> <p>Note</p> <ul> <li><code>-alias drapi2</code> is the alias for the new certificate. You can use any alias but we recommend foundry.</li> <li><code>-file ./drapi-server.pem</code> is the file path to your certificate. Use the proper path for your circumstances.</li> <li><code>-keystore ../foundry/voltmx-foundry/certs/cacerts</code> is the location of the truststore your certificate will be imported to and later use by Tomcat. This file path shouldn't be changed.</li> <li><code>changeit</code> is the default password and shouldn't be changed.</li> </ul> <p>For more information about <code>keytool</code>, see Java Keytool documentation .</p> </li> <li> <p>Update the Helm <code>values.yaml</code>.</p> <p>Update your <code>values.yaml</code> with the following configuration details to configure SSL. Check the notes for specific use cases and refer to Kubernetes Ingress details in Before you begin for more details on each parameter.</p> <pre><code>ingress.enabled: true\ningress.drapiDnsName: drapi.example.com\ningress.drapiManagementDnsName: drapi-management.example.com\ningress.protocol: \"https\"\ningress.tls.enabled: true\ningress.tls.drapiCustomCert.cert: \u201cdrapi-server.crt\u201d\ningress.tls.drapiCustomCert.key: \u201cdrapi-server.key\u201d\ningress.tls.drapiManagementCustomCert.cert: \u201cdrapi-management-server.crt\u201d\ningress.tls.drapiManagementCustomCert.key: \u201cdrapi-management-server.key\u201d\n</code></pre> <p>Note</p> <ul> <li>The path for the customCert properties is relative to the <code>apps</code> directory. It should always be <code>certs/</code> followed by your certificate or key file name.</li> <li>The <code>drapiCustomCert.cert</code>, <code>drapiCustomCert.key</code>, <code>drapiManagementCustomCert.cert</code>, and <code>drapiManagementCustomCert.key</code> details can be omitted when using the default cluster certificate. If you go with this approach, make sure that the DNS hostname which you will access the deployment with matches the host name details in the certificate. Otherwise, the backend communication will fail because the host name doesn't match.</li> </ul> </li> </ol>"},{"location":"howto/install/foundryadminaccount.html","title":"Create a Volt Foundry administrator account","text":""},{"location":"howto/install/foundryadminaccount.html#about-this-task","title":"About this task","text":"<p>Guides you in creating an administrator account to log in to Volt Foundry.</p>"},{"location":"howto/install/foundryadminaccount.html#before-you-begin","title":"Before you begin","text":"<p>You must complete the Volt MX Go installation.</p>"},{"location":"howto/install/foundryadminaccount.html#procedure","title":"Procedure","text":"<p>Check the procedure on how to get started with Volt MX Foundry Console . You can also contact the Volt Foundry administrator to request for an administrator account.</p>"},{"location":"howto/install/foundryadminaccount.html#expected-result","title":"Expected result","text":"<p>Once the details are validated for one-time configuration, the system associates your credentials with Volt Foundry identity services and authorization services, and then opens the Sign in to your account page.</p>"},{"location":"howto/install/voltscript.html","title":"Enable VoltScript in Volt Foundry","text":"<p>VoltScript is a BASIC  scripting language that has been extended for use with Volt MX Go as a server-side scripting language running within the Volt Foundry middleware layer. It's now available as a custom code technology adapter for Volt Foundry Integration Service.</p> <p>Note</p> <p>The information in this topic applies starting with the Volt MX Go v10 release.</p>"},{"location":"howto/install/voltscript.html#about-this-task","title":"About this task","text":"<p>This guide explains how to install the VoltScript Plugin Installer using the VoltScript Installation Tool, and how to use the VoltScript Plugin Installer to add VoltScript plugins to Volt Foundry. It also covers enabling VoltScript in Volt Foundry, which is deployed through Helm charts on a supported Kubernetes platform.</p>"},{"location":"howto/install/voltscript.html#for-volt-foundry-installed-using-installers","title":"For Volt Foundry installed using installers","text":""},{"location":"howto/install/voltscript.html#before-your-begin","title":"Before your begin","text":"<ul> <li> <p>You have downloaded and installed the supported version of Volt Foundry that's licensed with a Volt MX Go entitlement. The minimum supported version of Volt Foundry is v10.0.1.</p> <p>Note</p> <p>VoltScript is only supported on Volt Foundry using a Tomcat non-clustered application server.</p> </li> <li> <p>You have downloaded the VoltScript Installation Tool.</p> </li> </ul> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"howto/install/voltscript.html#procedure","title":"Procedure","text":""},{"location":"howto/install/voltscript.html#install-voltscript-plugin-installer","title":"Install VoltScript Plugin Installer","text":"<p>The procedure guides your through the installation of the VoltScript Plugin Installer, installs the VoltScript plugins in Volt Foundry.</p> on Linuxon Windows <ol> <li>Open terminal, navigate to the directory containing the installer file, and extract the installer from the tar file. </li> <li>Navigate to the directory containing the <code>.bin</code> file to ensure that you are in the right location to execute the installation commands for the <code>.bin</code> file. </li> <li> <p>Enter the following command to grant executable permissions to the <code>.bin</code> file and press Enter. </p> <p>For example:</p> <p><code>sudo chmod +x &lt;installerfilename&gt;.bin</code></p> <p>Using the <code>chmod</code> command with <code>sudo</code> ensures administrative privileges.</p> </li> <li> <p>Run the <code>.bin</code> file to start the installation using the following command and press Enter.</p> <p>For example:</p> <p><code>./&lt;installerfilename&gt;</code></p> </li> <li> <p>Follow the installation instructions. The binary file will initiate the installation process and may prompt you with on-screen instructions. Follow these instructions carefully to complete the installation.</p> <p>Note</p> <p>If you have a graphical terminal associated with your Linux deployment, the VoltScript Installation Tool window opens. Otherwise, installation is via the command line.  </p> </li> </ol> <ol> <li>Navigate to the folder containing the downloaded installer file. </li> <li>Double-click the installer file. The VoltScript Installation Tool window opens. </li> <li> <p>On the Introduction, read the details and instructions, and then click Next.</p> <p></p> </li> <li> <p>On the License Agreement, read the agreement details, select the I accept the terms of the License agreement checkbox, and then click Next.</p> <p></p> </li> <li> <p>On the Choose Install Folder, click Next if you agree with the indicated default location.</p> <p> </p> <p>Tip</p> <ul> <li>If you want a different installation location, click Choose to select your preferred installation location or directly enter your preferred installation location in the text box, and then click Next.</li> <li>If you selected a different installation location and decided to revert to the default location, click Restore Default Folder and then click Next.</li> </ul> </li> <li> <p>On the Pre-Installation Summary, review the details and then click Install.</p> <p></p> </li> <li> <p>On the Installing, see the installation status.</p> <p></p> </li> <li> <p>On the Install Complete, click Done.</p> <p></p> </li> </ol>"},{"location":"howto/install/voltscript.html#install-voltscript-plugins","title":"Install VoltScript plugins","text":"<p>The procedure guides you in installing the VoltScript plugins in Volt Foundry.</p> on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the VoltScript Plugin Installer. </li> <li> <p>Run the VoltScript Plugin Installer by entering the following command and press Enter.</p> <p><code>./&lt;installerfilename&gt;</code></p> <p>The installation tool opens on the Terminal showing the available options as can be seen from the following example:</p> <p></p> </li> <li> <p>Enter 1 to install VoltScript plugins in Volt Foundry and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement that the plugins have been installed.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select VoltScript Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click VoltScript Plugin Installer.</p> <p>OR</p> <p>Double-click the VoltScript Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens showing the available options as can be seen from the following example:</p> <p></p> </li> <li> <p>Enter 1 to install VoltScript plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been installed. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/install/voltscript.html#install-voltscript-runtime","title":"Install VoltScript Runtime","text":"<p>The procedure guides you in installing the VoltScript Runtime. For more information on VoltScript Runtime, see the VoltScript documentation .</p> on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the VoltScript Plugin Installer. </li> <li> <p>Run the VoltScript Plugin Installer by entering the following command and press Enter.</p> <p><code>./&lt;installerfilename&gt;</code></p> <p>The installation tool opens on the Terminal showing the available options.</p> </li> <li> <p>Enter 4 to install VoltScript Runtime Zip and press Enter.</p> </li> </ol> <p>The VoltScript Runtime files are now saved in <code>/usr/local/voltscript</code>.</p> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select VoltScript Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click VoltScript Plugin Installer.</p> <p>OR</p> <p>Double-click the VoltScript Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens showing the available options.</p> </li> <li> <p>Enter 4 to install VoltScript Runtime Zip and press Enter.</p> </li> </ol> <p>The VoltScript Runtime files are now saved in <code>C:\\Program Files\\HCL\\voltscript</code>.</p> <p>Tip</p> <p>Make sure to restart Volt Foundry after completing the installation of the VoltScript plugins and VoltScript Runtime.</p>"},{"location":"howto/install/voltscript.html#expected-result","title":"Expected result","text":"<p>You have now installed the VoltScript plugins in Volt Foundry and the VoltScript Runtime. You can now configure a VoltScript Integration Service in Volt Foundry. For more information, see the VoltScript documentation .</p>"},{"location":"howto/install/voltscript.html#for-volt-foundry-installed-using-helm-charts","title":"For Volt Foundry installed using Helm charts","text":""},{"location":"howto/install/voltscript.html#before-you-begin","title":"Before you begin","text":"<p>Make sure you have downloaded the Volt Foundry Helm charts. The minimum supported version is v10.0.1. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"howto/install/voltscript.html#procedure_1","title":"Procedure","text":"<ol> <li>Extract the downloaded installer zip file.</li> <li> <p>Update the <code>voltmx-foundry-ingress.yaml</code> file in the <code>apps/templates</code> directory.</p> <ol> <li>Open the <code>voltmx-foundry-ingress.yaml</code> file with your preferred editor.</li> <li> <p>Locate the Ingress controller configuration for integration part in the <code>voltmx-foundry-ingress.yaml</code> file.</p> <p></p> </li> <li> <p>Add the following code snippet to be one of the Integration paths.</p> <pre><code>- path: /voltscript\n    pathType: Prefix\n    backend:\n      service:\n        name: voltmx-foundry-integration\n        port:\n          number: 8080\n</code></pre> <p>Make sure to follow the correct indentation when adding the code snippet. Refer to the folowing image showing the part of the <code>voltmx-foundry-ingress.yaml</code> file after adding the code snippet.</p> <p></p> </li> <li> <p>Save your changes and close the file.</p> </li> </ol> </li> <li> <p>Update the <code>values.yaml</code> file.</p> <ol> <li>Open the <code>values.yaml</code> file with your preferred editor.</li> <li>Locate the line containing the <code>imageRegistry:</code> key and make sure that its value is <code>\"hclcr.io/voltmxgo\"</code>.</li> <li>Locate the line containing the <code>foundryBuildVer:</code> key and update its value to <code>\"10.0.0_GA\"</code>.</li> <li>Save your changes and close the file.</li> </ol> </li> <li> <p>Proceed to installing Volt Foundry using Helm charts on a supported Kubernetes platform.</p> </li> </ol>"},{"location":"howto/install/voltscript.html#expected-result_1","title":"Expected result","text":"<p>After updating the <code>voltmx-foundry-ingress.yaml</code>, <code>values.yaml file</code>, and completing the Volt Foundry installation using Helm charts, you can now configure a VoltScript Integration Service in Volt Foundry installed using Helm charts. For more information, see the VoltScript documentation .</p>"},{"location":"howto/operation/index.html","title":"Operation","text":"<p>How-to guides for instructing users in completing key goals and tasks related to the general use and operation of Volt MX Go.</p> <ul> <li> <p>Obtain authentication token from HCL Container Repository</p> </li> <li> <p>Check installation status of Volt MX Go plugins</p> </li> <li> <p>Check installation status of VoltScript plugins</p> </li> <li> <p>Generate CRUD forms for Object Service</p> </li> <li> <p>Insert attachments via Summernote Editor</p> </li> <li> <p>Set logging level</p> </li> </ul>"},{"location":"howto/operation/checkstat.html","title":"Check installation status of Volt MX Go plugins","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go v2.1 up to v2.1.2 release.</p>"},{"location":"howto/operation/checkstat.html#about-this-task","title":"About this task","text":"<p>Guides you in checking the installation status of Volt MX Go plugins to Volt Foundry or Volt Iris.</p>"},{"location":"howto/operation/checkstat.html#before-your-begin","title":"Before your begin","text":"<p>You have installed the Volt MX Go Plugin Installer. For more information, see Install Volt MX Go Plugin Installer.</p>"},{"location":"howto/operation/checkstat.html#procedure","title":"Procedure","text":""},{"location":"howto/operation/checkstat.html#check-installation-status-of-volt-mx-go-plugins-in-volt-foundry","title":"Check installation status of Volt MX Go plugins in Volt Foundry","text":"on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the Volt MX Go Plugin Installer.</li> <li> <p>Run the Volt MX Go Plugin Installer by entering the following command and press Enter</p> <p><code>./VoltMXGoPluginInstaller</code></p> <p>The installation tool opens on the Terminal.</p> </li> <li> <p>Enter 3 to check installation status of Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified Tomcat WebApps directory.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 3 to check the installation status of Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified Tomcat WebApps directory. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/operation/checkstat.html#check-installation-status-of-volt-mx-go-plugins-in-volt-iris","title":"Check installation status of Volt MX Go plugins in Volt Iris","text":"on Macon Windows <ol> <li> <p>Click\u00a0Finder\u00a0in the Dock, click Applications in the sidebar of the Finder window, then double-click the Volt MX Go Plugin Installer app.</p> <p>Or</p> <p>Click Launchpad in the Dock, type Volt MX Go Plugin Installer in the search field at the top of Launchpad, and click the app to open it.</p> <p>A new terminal for installing the plugin opens. </p> </li> <li> <p>Enter 6 to check the installation status of Volt MX Go plugins and press return.</p> </li> <li> <p>Specify a Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press return.</p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified workspace.</p> </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press return. </p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified installation directory. </p> </li> <li> <p>Close the terminal.   </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 6 to check the installation status of Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify an Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press Enter. </p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified workspace.</p> </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press Enter. </p> <p>You get a confirmation statement on whether Volt MX Go is installed in the specified installation directory. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/operation/checkstat.html#expected-result","title":"Expected result","text":"<p>You have checked the installation status of the Volt MX Go plugins to Volt Foundry and Volt Iris.</p>"},{"location":"howto/operation/checkvs.html","title":"Check installation status of VoltScript plugins","text":"<p>Note</p> <p>The information in this topic applies starting with the VoltScript v10 release.</p>"},{"location":"howto/operation/checkvs.html#about-this-task","title":"About this task","text":"<p>Guides you in checking the installation status of VoltScript plugins to Volt Foundry.</p>"},{"location":"howto/operation/checkvs.html#before-your-begin","title":"Before your begin","text":"<p>You have installed the VoltScript Plugin Installer. For more information, see Install VoltScript Plugin Installer.</p>"},{"location":"howto/operation/checkvs.html#procedure","title":"Procedure","text":""},{"location":"howto/operation/checkvs.html#check-installation-status-of-voltscript-plugins-in-volt-foundry","title":"Check installation status of VoltScript plugins in Volt Foundry","text":"on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the VoltScript Plugin Installer.</li> <li> <p>Run the VoltScript Plugin Installer by entering the following command and press Enter</p> <p><code>./&lt;installerfilename&gt;</code></p> <p>The installation tool opens on the Terminal.</p> </li> <li> <p>Enter 3 to check installation status of VoltScript plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement on whether VoltScript plugins are installed in the specified Tomcat WebApps directory.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select VoltScript Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click VoltScript Plugin Installer.</p> <p>OR</p> <p>Double-click the VoltScript Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 3 to check the installation status of VoltScript plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement on whether VoltScript plugins are installed in the specified Tomcat WebApps directory. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/operation/checkvs.html#expected-result","title":"Expected result","text":"<p>You have checked the installation status of the VoltScript plugins in Volt Foundry.</p>"},{"location":"howto/operation/checkvs.html#additional-information","title":"Additional information","text":"<p>To check the installation status of VoltScript Runtime, use the Check the install status of the VoltScript Runtime Zip option and then press Enter. A confirmation statement is shown on whether VoltScript Runtime is installed or not.</p> <p>For more information on VoltScript Runtime, see the VoltScript documentation .</p>"},{"location":"howto/operation/codegen.html","title":"Generate CRUD forms for Object Service","text":""},{"location":"howto/operation/codegen.html#about-this-task","title":"About this task","text":"<p>The procedure guides you in generating CRUD forms and associated form-navigation links for an Object Service after linking your Volt Iris project to your Volt Foundry app with a defined Object Service data model.</p>"},{"location":"howto/operation/codegen.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have created an app in Volt Foundry.</p> </li> <li> <p>You have configured an Identity Service for your app in Volt Foundry.</p> </li> <li> <p>You have added an environment for your app.</p> </li> <li> <p>You have configured an Object Service for your app in Volt Foundry.</p> </li> <li> <p>You have generated the data model for the Object Service.</p> </li> <li> <p>You have created a project in Volt Iris.</p> </li> </ul>"},{"location":"howto/operation/codegen.html#procedure","title":"Procedure","text":"<ol> <li> <p>Open Volt Iris. When the Sign-in to your account page appears, close it by clicking the Volt Iris home icon.</p> <p></p> </li> <li> <p>Check Volt Foundry settings.</p> <ol> <li> <p>Go to Preferences.</p> <p>For Windows, select Edit \u2192 Preferences.</p> <p>For Mac, depending on your macOS, select Volt Iris \u2192 Preferences or Settings.</p> </li> <li> <p>On the Volt Iris Preferences dialog, click Volt Foundry.</p> </li> <li> <p>On the Volt Foundry tab, enter your Foundry URL in the Foundry URL text box, and then click Validate.</p> <p>You should see the \u201cValidation Successful\u201d message at the top of the dialog.</p> </li> <li> <p>Click Done.</p> </li> </ol> </li> <li> <p>Log in to Volt Iris.</p> <ol> <li>Click Login on the upper right corner of the Volt Iris screen.</li> <li>Enter your email and password for Volt Foundry on the Sign in to your account page.</li> <li>Click Sign In. Your username appears next to the profile icon.</li> </ol> </li> <li> <p>Connect to Volt Foundry.</p> <ol> <li> <p>Click the Data &amp; Services tab menu and select Link to Existing App. </p> <p></p> <p>The Volt MX Go Applications dialog opens.</p> </li> <li> <p>Click Associate corresponding to a Volt Foundry app that you want to link.</p> <p></p> <p>In this example, the associated Volt Foundry app is the First Touch Recipes app.</p> </li> <li> <p>Click Project Services on the Data &amp; Services tab and see the connections to the Volt Foundry data.</p> </li> </ol> </li> <li> <p>Generate forms.</p> <ol> <li>Go to the Data &amp; Services tab, and expand Project Services.  </li> <li>Right-click the Object Service, and then select Generate Forms \u2192 Responsive Web.</li> </ol> <p>Using the First Touch Recipes app as an example, right-click the FirstTouchRecipesObj and then select Generate Forms \u2192 Responsive Web.</p> <p></p> </li> </ol> <p>Note</p> <p>Summernote Editor is automatically applied on Rich Text fields when generating entry forms (CREATE/UPDATE) from the data panel. Summernote Editor is a simple WYSIWYG editor that allows a developer to enter or edit rich text content in a Rich Text field in a form in Volt Iris. For more information, see Summernote Editor.</p>"},{"location":"howto/operation/codegen.html#expected-result","title":"Expected result","text":"<p>Five types of forms (Dashboard, Grid, Details, Create, and Update) are generated for each object in the Object service with the respective navigation links among each other.</p> <p></p> <p>The Dashboard form displays all the objects of the selected Object service. Users can navigate to the respective Grid, Details, Create, and Update forms from the Dashboard screen. If you haven't defined the startup form of the app, the Dashboard form is made the startup form by default.</p> <p>If your Object Service has views, they're also generated. In the example, the Object Service DemoGAObjectService of the Volt Foundry app DemoGA has the view Main.</p> <p></p> <p>After the process, there are two types of forms (Grid and Details) for the view Main, and five types of forms for the object Recipe.   </p> <p></p>"},{"location":"howto/operation/insertattachments.html","title":"Insert attachments via Summernote Editor","text":""},{"location":"howto/operation/insertattachments.html#about-this-task","title":"About this task","text":"<p>Guides you on how to insert attachments via the Summernote Editor.</p>"},{"location":"howto/operation/insertattachments.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have generated CRUD forms for Object Service.</p> </li> <li> <p>You have built and published your app in Volt Iris .</p> </li> </ul> <p>Important</p> <p>Make sure that you included the virtual field <code>$FILES</code> in the form configured in Domino REST API. </p>"},{"location":"howto/operation/insertattachments.html#procedure","title":"Procedure","text":"<ol> <li> <p>On the Summernote Editor toolbar, click the paper clip icon to open the Insert File dialog.</p> <p></p> </li> <li> <p>Click Choose File to browse and select the file you want to attach or enter the file URL in the File URL box</p> <p></p> </li> <li> <p>Click Insert File.</p> </li> </ol> <p>The selected file is inserted as a link in the content field of Summernote Editor. The source link is shown as # and not the Base64 data since the Base64 data takes too much space. The link will have a class name of domino-attachment used as the flagging of attachments inserted on Summernote Editor.</p> <p></p> <p>The selected file also appears in the File List section of the form where you manage the document attachments.</p> <p>Tip</p> <p>The File List section of the form appears only when you include <code>$FILES</code> on the form configured on Domino REST API.</p> <p></p> <p>Note</p> <p>When inserting a new attachment with the same filename and file type as an existing attachment, you will be prompted that the attachment already exists and asked if you would like to overwrite the existing attachment with the new one.</p>"},{"location":"howto/operation/insertattachments.html#additional-information","title":"Additional information","text":""},{"location":"howto/operation/insertattachments.html#to-remove-an-attachment","title":"To remove an attachment","text":"<ol> <li>Go to the File List section of the form.</li> <li> <p>Select the attachment that you want to remove and click the corresponding delete icon.</p> <p></p> </li> <li> <p>In the confirmation dialog, click OK to confirm attachment removal.</p> </li> </ol> <p>Note</p> <p>Removing the attachment link in the content field of the Summernote Editor doesn't remove the attachment. You have to remove it from the File List section.</p>"},{"location":"howto/operation/insertattachments.html#to-download-an-attachment","title":"To download an attachment","text":"<p>You can download attachments from the Grid or Details form of a document.</p> <ul> <li>To download all attachments, click Download All Attachments.</li> <li>To download an individual attachment, click the attachment file link on the rich text field.</li> </ul> <p>To learn more about attachments, see Attachments.</p>"},{"location":"howto/operation/logginglevel.html","title":"Set logging level","text":""},{"location":"howto/operation/logginglevel.html#about-this-task","title":"About this task","text":"<p>Guides you on how to check and set the logging level, and access the log files. For more information, see Logging levels.</p> <p>Note</p> <p>The logging level in Volt Iris only affects the logs for importing a Domino application at the moment.</p>"},{"location":"howto/operation/logginglevel.html#before-you-begin","title":"Before you begin","text":"<p>You have launched Volt Iris.</p>"},{"location":"howto/operation/logginglevel.html#procedure","title":"Procedure","text":""},{"location":"howto/operation/logginglevel.html#to-check-the-logging-level","title":"To check the logging level","text":"<ul> <li> <p>In the top menu of Volt Iris, go to Help \u2192 Logging Level. The current logging level is indicated.</p> <p>Note</p> <p>The default level is Trace.</p> </li> </ul>"},{"location":"howto/operation/logginglevel.html#to-set-the-logging-level","title":"To set the logging level","text":"<ol> <li> <p>In the top menu of Volt Iris, go to Help \u2192 Logging Level, and then choose a logging level based on the level of details you want to find in the logs. To learn the description of each logging level, see Logging levels.</p> </li> <li> <p>Restart Volt Iris after setting a new logging level.</p> </li> </ol>"},{"location":"howto/operation/logginglevel.html#to-view-the-logs","title":"To view the logs","text":"<ol> <li> <p>From your user directory, go to Iris \u2192 irisdata \u2192 logs.</p> <ul> <li>For Windows:</li> </ul> <p></p> <ul> <li>For Mac:</li> </ul> <p></p> </li> <li> <p>Open the <code>iris_development.log</code> file to view the logs.</p> </li> </ol>"},{"location":"howto/operation/obtainauthenticationtoken.html","title":"Obtain authentication token from HCL Container Repository","text":""},{"location":"howto/operation/obtainauthenticationtoken.html#about-this-task","title":"About this task","text":"<p>The binary images and Helm charts for Volt MX Go server components are pulled from the HCL Container Repository. This requires you to get your authentication token from the HCL Container Repository. This task guides you on how to obtain your authentication token.</p>"},{"location":"howto/operation/obtainauthenticationtoken.html#procedure","title":"Procedure","text":"<ol> <li> <p>Go to the HCL Container Repository .</p> </li> <li> <p>On the login page, click LOGIN VIA OIDC Provider, and then login using your corporate email address.</p> </li> <li> <p>On the Projects page, click your username and select User Profile.</p> <p></p> </li> <li> <p>On the User Profile dialog, copy the value of the CLI secret by clicking the copy icon.</p> <p></p> </li> <li> <p>Save the CLI secret value as it's required in the next steps.</p> <p>Note</p> <p>Use the CLI secret value as your authentication token or password when using Docker or Helm CLI to access HCL Container Repository.</p> </li> <li> <p>Take note of exactly how your email address is written in the User Profile dialog as authentication is case sensitive on the user email.</p> </li> </ol>"},{"location":"howto/uninstall/index.html","title":"Uninstall","text":"<p>List of uninstall procedures for completing uninstall tasks related to Volt MX Go. </p> <ul> <li> <p>Uninstall K3s<sup>1</sup></p> </li> <li> <p>Uninstall Rancher Desktop on Windows<sup>1</sup></p> </li> <li> <p>Uninstall First Touch</p> </li> <li> <p>Uninstall Volt MX Go plugins<sup>2</sup></p> </li> <li> <p>Uninstall VoltScript plugins<sup>3</sup></p> </li> <li> <p>Uninstall Volt Foundry for Linux </p> </li> <li> <p>Uninstall Volt Foundry for Windows </p> </li> <li> <p>Uninstall Volt Foundry installed on supported Kubernetes platform </p> </li> <li> <p>Uninstall Volt Iris for Windows </p> </li> <li> <p>Uninstall Volt Iris for Mac </p> </li> </ul> <ol> <li> <p>Only applicable to Volt MX Go v2.0.4 or earlier.\u00a0\u21a9\u21a9</p> </li> <li> <p>Only applicable from Volt MX Go v2.1 up to v2.1.2.\u00a0\u21a9</p> </li> <li> <p>Only applicable starting Volt MX Go v10.\u00a0\u21a9</p> </li> </ol>"},{"location":"howto/uninstall/k3suninstall.html","title":"Uninstall K3s","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul>"},{"location":"howto/uninstall/k3suninstall.html#about-this-task","title":"About this task","text":"<p>Guides you in uninstalling K3s in case you want to start over with the K3s installation or you want to completely remove K3s.</p>"},{"location":"howto/uninstall/k3suninstall.html#procedure","title":"Procedure","text":"<ul> <li>Run the following command:</li> </ul> <pre><code>sudo k3s-uninstall.sh\n</code></pre> <p>For more information, see Uninstalling K3s .</p>"},{"location":"howto/uninstall/rancheruninstall.html","title":"Uninstall Rancher Desktop on Windows","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul>"},{"location":"howto/uninstall/rancheruninstall.html#about-this-task","title":"About this task","text":"<p>Guides you in uninstalling Rancher Desktop in case you want to start over with the installation or you want to completely remove Rancher Desktop.</p>"},{"location":"howto/uninstall/rancheruninstall.html#procedure","title":"Procedure","text":"<ol> <li>From the taskbar, click the Start menu.</li> <li>Go to Settings \u2192 Apps \u2192 Apps &amp; features.</li> <li>Find and select the Rancher Desktop entry.</li> <li>Click Uninstall and click it again when the confirmation appears.</li> <li>Follow the prompts on the Rancher Desktop uninstaller to proceed.</li> <li>Click Finish when complete.</li> </ol>"},{"location":"howto/uninstall/uninstallfirsttouch.html","title":"Uninstall First Touch","text":""},{"location":"howto/uninstall/uninstallfirsttouch.html#about-this-task","title":"About this task","text":"<p>Guides you in uninstalling First Touch in case you want to start over with the First Touch installation or you want to completely remove First Touch.</p>"},{"location":"howto/uninstall/uninstallfirsttouch.html#procedure","title":"Procedure","text":"<ol> <li> <p>On the Apps page of the Volt Foundry Console, click GET STARTED.  </p> <p>OR</p> <p>Select VOLT MX GO First Touch from the side panel.</p> </li> <li> <p>On the Welcome to Volt MX Go dialog, select Uninstall First Touch Recipes.</p> <p></p> </li> <li> <p>Click Next. An uninstall progress dialog shows the status of the uninstallation subprocesses.</p> <p>Note</p> <ul> <li>If the Domino REST API configuration can't be pulled from the object service or the object service has been unlinked or deleted, enter your Domino REST API details in the Uninstall First Touch dialog and click Next.</li> <li>If another app is published to the environment created when First Touch was installed, the Progress dialog indicates that the environment isn't deleted as it's used by another app. However, the First Touch app is removed from the environment.</li> </ul> </li> <li> <p>After the completion of each uninstallation subprocess as indicated by a check icon, click OK to close the dialog.</p> <p></p> </li> </ol>"},{"location":"howto/uninstall/uninstallfirsttouch.html#expected-result","title":"Expected result","text":"<ul> <li> <p>The First Touch app and the environment created when installing First Touch are deleted in Volt Foundry.</p> <p>Note</p> <p>The environment isn't deleted during the uninstallation if another app is published to the environment.</p> </li> <li> <p>The schema, scope, and app related to the First Touch app are deleted from the Domino REST API.</p> </li> </ul> <p>Important</p> <p>If you uninstall First Touch and reinstall it again, ensure you clear your browser cache before launching the app.</p>"},{"location":"howto/uninstall/uninstallplugin.html","title":"Uninstall Volt MX Go plugins","text":"<p>Note</p> <p>The information in this topic applies from Volt MX Go v2.1 up to v2.1.2.</p>"},{"location":"howto/uninstall/uninstallplugin.html#about-this-task","title":"About this task","text":"<p>Guides you in uninstalling Volt MX Go plugins from Volt Foundry or Volt Iris to deactivate Volt MX Go features.</p>"},{"location":"howto/uninstall/uninstallplugin.html#before-your-begin","title":"Before your begin","text":"<p>You have installed the Volt MX Go Plugin Installer. For more information, see Install Volt MX Go Plugin Installer.</p>"},{"location":"howto/uninstall/uninstallplugin.html#procedure","title":"Procedure","text":""},{"location":"howto/uninstall/uninstallplugin.html#uninstall-volt-mx-go-plugins-from-volt-foundry","title":"Uninstall Volt MX Go plugins from Volt Foundry","text":"on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the Volt MX Go Plugin Installer.</li> <li> <p>Run the Volt MX Go Plugin Installer by entering the following command and press Enter</p> <p><code>./VoltMXGoPluginInstaller</code></p> <p>The installation tool opens on the Terminal.</p> </li> <li> <p>Enter 2 to uninstall Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement that the plugins have been uninstalled.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 2 to uninstall Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been uninstalled. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/uninstall/uninstallplugin.html#uninstall-volt-mx-go-plugins-from-volt-iris","title":"Uninstall Volt MX Go plugins from Volt Iris","text":"on Macon Windows <ol> <li> <p>Click\u00a0Finder\u00a0in the Dock, click Applications in the sidebar of the Finder window, then double-click the Volt MX Go Plugin Installer app.</p> <p>Or</p> <p>Click Launchpad in the Dock, type Volt MX Go Plugin Installer in the search field at the top of Launchpad, and click the app to open it.</p> <p>A new terminal for installing the plugin opens. </p> </li> <li> <p>Enter 5 to uninstall Volt MX Go plugins and press return.</p> </li> <li>Specify a Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press return. </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press return. </p> <p>You get a confirmation statement that the plugins have been uninstalled. </p> </li> <li> <p>Close the terminal.   </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 5 to uninstall Volt MX Go plugins and press Enter.</p> </li> <li>Specify a Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press Enter. </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been uninstalled. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol>"},{"location":"howto/uninstall/uninstallplugin.html#expected-result","title":"Expected result","text":"<p>You have uninstalled Volt MX Go plugins from Volt Foundry and Volt Iris. You can still use Volt Foundry and Volt Iris, but you can't access and use the Volt MX Go features.</p>"},{"location":"howto/uninstall/uninstallvs.html","title":"Uninstall VoltScript plugins","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go v10 release.</p>"},{"location":"howto/uninstall/uninstallvs.html#about-this-task","title":"About this task","text":"<p>Guides you in uninstalling VoltScript plugins from Volt Foundry.</p>"},{"location":"howto/uninstall/uninstallvs.html#before-your-begin","title":"Before your begin","text":"<p>You have installed the VoltScript Plugin Installer. For more information, see Install VoltScript Plugin Installer.</p>"},{"location":"howto/uninstall/uninstallvs.html#procedure","title":"Procedure","text":""},{"location":"howto/uninstall/uninstallvs.html#uninstall-voltscript-plugins-from-volt-foundry","title":"Uninstall VoltScript plugins from Volt Foundry","text":"on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the VoltScript Plugin Installer.</li> <li> <p>Run the VoltScript Plugin Installer by entering the following command and press Enter</p> <p><code>./&lt;installerfilename&gt;</code></p> <p>The installation tool opens on the Terminal.</p> </li> <li> <p>Enter 2 to uninstall VoltScript plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement that the plugins have been uninstalled.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select VoltScript Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click VoltScript Plugin Installer.</p> <p>OR</p> <p>Double-click the VoltScript Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens.</p> </li> <li> <p>Enter 2 to uninstall VoltScript plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been uninstalled. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol> <p>Tip</p> <p>Make sure to restart Volt Foundry to completely implement the changes.</p>"},{"location":"howto/uninstall/uninstallvs.html#expected-result","title":"Expected result","text":"<p>You have uninstalled VoltScript plugins from Volt Foundry.</p>"},{"location":"howto/uninstall/uninstallvs.html#additional-information","title":"Additional information","text":"<p>If you have installed VoltScript Runtime and now wants it removed, use the Uninstall VoltScript Runtime Zip option in the VoltScript Plugin Installer and then press Enter.</p>"},{"location":"howto/voltformula/index.html","title":"VoltFormula","text":"<p>How-to guides for instructing users in completing key goals and tasks related to VoltFormula.</p> <ul> <li> <p>Configure VoltFormula</p> </li> <li> <p>Define widget properties using formula language</p> </li> <li> <p>Register and unregister custom Rosetta APIs</p> </li> <li> <p>Clear formulas in controller and Action Editor</p> </li> <li> <p>Modify or update imported actions using VoltFormula</p> </li> <li> <p>Access VoltFormula Hikes</p> </li> </ul>"},{"location":"howto/voltformula/VFHikes.html","title":"Access VoltFormula Hikes","text":"<p>Note</p> <p>The information in this topic applies starting with Volt MX Go version 2.1 release. </p>"},{"location":"howto/voltformula/VFHikes.html#about-this-task","title":"About this task","text":"<p>Guides you on how to access VoltFormula Hikes that provide step-by-step interactive walkthroughs helping you understand the basics of VoltFormula.  </p> <p>Info</p> <p>Hikes are organized into guided tours in a catalog, and in a sequence to take you through a learning path. You should go through the Hikes in the specified order.</p>"},{"location":"howto/voltformula/VFHikes.html#before-you-begin","title":"Before you begin","text":"<p>You have launched Volt Iris.</p>"},{"location":"howto/voltformula/VFHikes.html#procedure","title":"Procedure","text":"<ol> <li> <p>Click the Hikes icon from the left navigation panel in Volt Iris. A page opens containing the available Hikes.</p> <p></p> </li> <li> <p>Select a VoltFormula Hike on the page, and then click Start on the succeeding page to start the step-by-step interactive walkthrough.</p> <p>The image shows the Hikes landing page showing the VoltFormula Hikes.</p> <p></p> <p>The image shows the Introduction to VoltFormula Hike.</p> <p></p> </li> <li> <p>Follow the instructions in the displayed dialog, which is part of the Hike procedure to help you to navigate and perform the required steps.</p> <p>The image shows an example of an Introduction and an instruction for starting the Hike. </p> <p></p> </li> <li> <p>After completing the instructions, click Next in the dialog to move to the next step.</p> <p>Tip</p> <p>Arrows point to the area where you must focus to perform the action in a Hike step. For some Hike steps, after you successfully perform an action, you are automatically directed to the next step.</p> <p>The image shows the arrow pointing to the area where you must focus to perform the action in the Hike step, and the instruction for clicking Next to proceed to the next step. </p> <p></p> </li> <li> <p>Once you have completed a Hike, click Done. You can then move on to the other Hikes.</p> <p>The image shows the completion of a Hike and what you have achieved after completing the Hike.  </p> <p></p> </li> </ol>"},{"location":"howto/voltformula/clearfunction.html","title":"Clear formulas in controller and Action Editor","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go version 2.0.4 release. </p>"},{"location":"howto/voltformula/clearfunction.html#about-this-task","title":"About this task","text":"<p>Guides you on how to clear JavaScript code and formulas in controllers and Action Editor.</p>"},{"location":"howto/voltformula/clearfunction.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have launched Volt Iris and have opened the project containing the formulas and JavaScript codes you want to delete.</li> <li>You need to use controller and the Action Editor in your project to access this feature.</li> </ul>"},{"location":"howto/voltformula/clearfunction.html#procedure","title":"Procedure","text":""},{"location":"howto/voltformula/clearfunction.html#for-controllers","title":"For controllers","text":"<ol> <li>Under the Controllers directory, select the controller that contains the formula you want to delete. The Formula Editor opens.</li> <li> <p>In the Formula Editor, right-click in the JavaScript code and select Delete Formula from the context menu.</p> <p></p> </li> <li> <p>In the confirmation dialog, click Yes.</p> <p></p> </li> </ol> <p>The JavaScript code and its source formula have now been deleted.</p> <p>You can also click Clear, if the Formula Language section of the Formula Editor is open, to delete the formula and the corresponding JavaScript code.</p> <p></p>"},{"location":"howto/voltformula/clearfunction.html#for-action-editor","title":"For Action Editor","text":"<ol> <li>Under the Forms directory, expand the form that contains the widget with the formula you want to delete, and then select the widget, for example a button in your form.</li> <li>Go to the Properties tab and select Action tab.</li> <li> <p>Click Edit next to an event, for example onClick. The Action Editor opens.</p> <p></p> </li> <li> <p>In the Action Editor, click the Add Formula diagram component to open the Formula Editor.</p> </li> <li> <p>To delete the formula:</p> <ul> <li> <p>Right-click in the JavaScript code and select Delete Formula from the context menu.</p> <p></p> </li> </ul> <p>OR</p> <ul> <li> <p>Click Clear in the Formula Language section of the Formula Editor.</p> <p></p> </li> </ul> </li> <li> <p>On the confirmation dialog, click Yes.</p> </li> </ol> <p>The JavaScript code and the source formula have now been deleted.</p>"},{"location":"howto/voltformula/configrosetta.html","title":"Configure VoltFormula","text":""},{"location":"howto/voltformula/configrosetta.html#about-this-task","title":"About this task","text":"<p>Guides you in setting various configuration options for VoltFormula.</p> <ul> <li>API Configuration</li> <li>Intellisense Configuration</li> <li>Converter Configuration</li> </ul>"},{"location":"howto/voltformula/configrosetta.html#before-you-begin","title":"Before you begin","text":"<p>You have launched Volt Iris.</p>"},{"location":"howto/voltformula/configrosetta.html#procedure","title":"Procedure","text":"<ol> <li> <p>Click the Project Settings icon.</p> <p></p> </li> <li> <p>In the Project Setting window, select the VoltFormula tab.</p> <p>Tip</p> <p>Hover over the info tooltip icon beside the labels or text boxes for more information.</p> <p></p> </li> <li> <p>Enter values and select options as required. Refer to the following table for more information. </p> Rosetta area Rosetta area sections Description API Configuration Allows you to configure options specific to the APIs' implementation and execution. Register Custom API Allows you to upload a file with custom APIs. Refer to the Rosetta API reference documentation  under the rosetta-api module for method <code>registerAPI</code> for more details on expected file format and parameters. Preferred API Implementation Allows you to specify whether to execute the Notes Formula or the Open Formula implementation when calling an API method, which has an existing implementation in either formula language. Example, <code>@Abs()</code> and <code>=ABS()</code> are encapsulated by Rosettas <code>abs()</code> method. Selecting <code>Notes</code> option makes Rosetta call the Notes implementation. Usually, either implementation behaves the same. But in other cases, there may be differences in parameters, execution, or returned results. For example, most Notes formula functions allow lists to be passed in as arguments while OpenFormula allows lists as ranges for only a number of methods. Refer to the Rosetta API reference documentation  for details on each API. Intellisense Configuration Allows you to include or exclude names of formulas that won't be implemented and not yet implemented in the formula list IntelliSense. When Include no plans to implement items is selected, the names of the formulas that won't be implemented are shown as strikethrough text. If Include not yet implemented items is selected, the names of the formulas that aren't yet implemented are shown but appears dimmed. Converter Configuration Allows you to configure options related to how formulas are converted into their corresponding Rosetta-enabled JavaScript. Passthrough unrecognized formula language into JavasSript conversion results Allows you to specify whether the converter allows unrecognized formula code to be part of the JavaScript conversion results without any massaging, or if it should throw an error when encountering unrecognizable formula code. This allows greater flexibility but also exposes the API to injection of code. Use with care. Convert undefined variables in formula parameters into Rosetta API GetField function calls Allows you to specify whether to handle unknown or undefined variables in formula parameters as variable or to convert them into Rosetta API GetField function calls Convert as native JavaScript Allows you to specify whether the converter uses native JavaScript or API calls for methods where a native JavaScript function exists. For example, convert <code>@If( )</code> into JavaScript native <code>if( )</code> or call the API <code>rosettajs.Logical.if( )</code>.  Sometimes, it makes sense and produces cleaner code to select \"convert into native JavaScript\" than using the API. Other times, you may want to go through the API call itself to allow for additional checks and/or handle the parameters differently. Conversion Delay Allows you to specify the delay in millisecond before the converters are invoked for a formula conversion. The default is normally acceptable. If there is no delay, the converters are re-invoked on every keystroke when entering the formula (calling the converters this often isn't needed). A longer delay invokes the converters less often. Version Information Indicates the <code>SDK</code> plugin,<code>API</code>,<code>Converter</code>, and <code>Prettifier</code> versions. </li> <li> <p>Click Done.</p> </li> </ol>"},{"location":"howto/voltformula/importvoltformula.html","title":"Modify or update imported actions using VoltFormula","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go version 2.0.3 release. </p> <p>When importing a Domino application using Design Import, you have the option of selecting and including the actions from the Domino view in the import process. The imported actions from the Domino view are automatically converted with <code>voltmx.rosettajs</code> syntax, incorporating formula languages like Notes and OpenFormula.\u00a0 </p>"},{"location":"howto/voltformula/importvoltformula.html#about-this-task","title":"About this task","text":"<p>Guides you on how to modify or update the formula language of actions included in an imported Domino application using VoltFormula.</p>"},{"location":"howto/voltformula/importvoltformula.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have imported a Domino application, including actions from the Domino view, using Design Import.</li> <li>You have launched Volt Iris and opened the project with the imported Domino application that included actions.</li> </ul>"},{"location":"howto/voltformula/importvoltformula.html#procedure","title":"Procedure","text":"<ol> <li>Click the Design tab.</li> <li>Under Project, expand the Forms folder and then the view that contains the action that you want to modify.</li> <li> <p>Click the action, and then go to the right side of the work area to click Properties and select the Action tab.</p> <p>Note</p> <p>An imported action is always under <code>flexActionBar</code>.</p> <p></p> </li> <li> <p>Click Edit next to the onClick event. The Action Editor opens.</p> </li> <li> <p>In the Action Editor, click the Add Formula in the diagram to open the Formula Editor.</p> <p></p> </li> <li> <p>Modify or update the formula in the Formula Language section of the Formula Editor based on your requirements.</p> </li> <li>Click Save.</li> </ol>"},{"location":"howto/voltformula/regunregconfig.html","title":"Register and unregister custom Rosetta APIs","text":""},{"location":"howto/voltformula/regunregconfig.html#about-this-task","title":"About this task","text":"<p>Describes how to register and unregister custom Rosetta APIs in the API Configuration section of the VoltFormula tab in the Project Settings.</p>"},{"location":"howto/voltformula/regunregconfig.html#before-you-begin","title":"Before you begin","text":"<p>You have launched Volt Iris.  </p>"},{"location":"howto/voltformula/regunregconfig.html#procedure","title":"Procedure","text":""},{"location":"howto/voltformula/regunregconfig.html#register-custom-api","title":"Register custom API","text":"<ol> <li>Go to Project Settings, and select VoltFormula.</li> <li> <p>On the Register Custom API text box, click the plus icon.</p> <p></p> </li> <li> <p>Select your custom API JSON file.</p> </li> <li>Click Done.</li> </ol>"},{"location":"howto/voltformula/regunregconfig.html#unregister-custom-api","title":"Unregister custom API","text":"<ol> <li>Go to the Project Settings, and select VoltFormula.</li> <li> <p>On the Register Custom API text box, click delete icon to remove the custom API.</p> </li> <li> <p>Click Done.</p> </li> </ol> <p>Once you have unregistered your custom API, VoltFormula will no longer provide results for your custom API.</p>"},{"location":"howto/voltformula/widgetprop.html","title":"Define widget properties using formula language","text":""},{"location":"howto/voltformula/widgetprop.html#about-this-task","title":"About this task","text":"<p>Guides you on using formula language to define properties of Volt Iris widgets. The following widget properties are supported:</p> <ul> <li>Visible</li> <li>Text</li> <li>ToolTip</li> <li>Enable Blur</li> <li>Mask Text</li> <li>Max Characters</li> <li>Sensitive Text</li> </ul> <p>Info</p> <p>To learn more about widgets, see the Iris Widget Programmer Guide  in the HCL Volt MX documentation.</p>"},{"location":"howto/voltformula/widgetprop.html#before-you-begin","title":"Before you begin","text":"<p>You have added a widget with properties that support formulas to a form in your project in Volt Iris.</p> <p>Note</p> <p>Volt Iris widget properties that support formulas are identifiable by the formula button . </p>"},{"location":"howto/voltformula/widgetprop.html#procedure","title":"Procedure","text":"<ol> <li>Select the widget and then go to Properties.</li> <li>Select the supported property that you want to define from the tabs under Properties.</li> <li>Define the widget property.</li> </ol> For VisibleFor TextFor Tool TipFor Enable BlurFor Mask TextFor Max CharactersFor Sensitive Text <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> </li> </ol> <p>Note</p> <p>When the formula is set for the Visible property, it may not be possible to determine the formula value until application runtime. This means that the toggle is set to the off position even after setting the formula. </p> <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> </li> </ol> <p>The Text property is now defined using formula language as indicated by [FORMULA] in the text field.</p> <p></p> <ol> <li> <p>Click the Edit icon. The Tool Tip dialog opens.</p> <p></p> </li> <li> <p>Click the formula button corresponding to the desired platform. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> <p>The tool tip for the selected platform is now defined using formula language as indicated by [FORMULA] in the text field </p> <p></p> </li> <li> <p>Click OK to close the Tool Tip dialog.</p> </li> </ol> <p>The Tool Tip property is now defined using formula language as indicated by [FORMULA] in the text field.</p> <p></p> <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p> </p> </li> </ol> <p>When the formula is set for the Enable Blur property, it may not be possible to determine the formula value until application runtime. This means that the toggle is set to the off position even after setting the formula.</p> <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> </li> </ol> <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> </li> </ol> <p>The Max Characters property is now defined using formula language as indicated by [FORMULA] in the text field.</p> <p></p> <ol> <li> <p>Click the formula button. The Enter Formula dialog opens.</p> <p></p> </li> <li> <p>Enter the formula in the Formula Language section and then click Apply.</p> <p></p> </li> </ol>"},{"location":"howto/voltformula/widgetprop.html#additional-information","title":"Additional information","text":""},{"location":"howto/voltformula/widgetprop.html#widgetformulajs","title":"<code>WidgetFormula.js</code>","text":"<p>When a form containing any widget property with a set formula is saved, the converted JavaScript code for that formula is stored in a read-only file named <code>WidgetFormula.js</code> under Modules.</p> <p></p> <p>This enables the formula code to be used in other areas of the application, such as from a Controller or Action. Additionally, it allows the formula code to be shared across different properties, ensuring there is only one copy of the formula code and providing a single location for updates or changes to the formula.</p>"},{"location":"howto/voltformula/widgetprop.html#functions-button","title":"Functions button","text":"<p>The Enter Formula dialog features a Functions button. When clicked, the Formula Functions dialog opens, allowing you to select existing functions from the <code>WidgetFormulas.js</code> file.</p> <p></p> <p>When you choose a function from the Formula Functions dialog and click Use, the dialog will close, and the selected function will be inserted into the Formula Language section of the Enter Formula dialog. A message will appear in the Formula Language section, indicating that the formula is linked to the formula set on a different widget property.</p> <p>The following image shows an example of the message indicating that the formula is linked to the formula set on a different widget property.</p> <p></p> <p>Note</p> <p>When a user attempts to change a linked formula, a warning dialog is shown indicating that the formula is shared with another property and modifying it will create a separate formula. The following is an example of the warning dialog.</p> <p></p> <p>Clicking Yes allows the user to change the linked formula.</p>"},{"location":"references/index.html","title":"References","text":"<p>Provides technical references and descriptions for using Volt MX Go.</p>"},{"location":"references/index.html#system-requirements","title":"System requirements","text":"<p>Check the minimum System requirements for deploying Volt MX Go.</p>"},{"location":"references/index.html#rosetta-api-reference-documentation","title":"Rosetta API reference documentation","text":"<p>The full specification of the API is available in a structured format in the Rosetta API reference documentation .</p> <p>For the implementation status, see Rosetta API implementation status.</p>"},{"location":"references/index.html#compatibility-matrix","title":"Compatibility matrix","text":"<p>Check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"references/index.html#additional-considerations","title":"Additional considerations","text":"<p>Lists additional considerations you must be aware of when using Volt MX Go and related actions you must take.</p>"},{"location":"references/index.html#known-limitations","title":"Known limitations","text":"<p>List of known limitations of Volt MX Go.</p>"},{"location":"references/index.html#troubleshooting","title":"Troubleshooting","text":"<p>To learn about identified issues and their corresponding workarounds and resolutions, see Troubleshooting.</p>"},{"location":"references/index.html#voltformula-coding-practices","title":"VoltFormula coding practices","text":"<p>Recommended VoltFormula coding practices in Volt Iris.</p>"},{"location":"references/index.html#documentation-references","title":"Documentation references","text":"<p>HCL Volt MX Documentation </p> <ul> <li>Provides documentation and more information about Volt Iris and Volt Foundry.</li> </ul> <p>HCL Domino REST API Documentation </p> <ul> <li>Provides documentation and more information about Domino REST API.</li> </ul> <p>HCL Domino Documentation </p> <ul> <li>Provides documentation and more information on how to install, configure, and manage Domino servers and related components.</li> </ul> <p>HCL Software Product Documentation </p> <ul> <li>Provides a complete list of links to the documentation of different HCL Software products.</li> </ul> <p>VoltScript </p> <ul> <li>Provides documentation and more information about VoltScript and related components.</li> </ul>"},{"location":"references/index.html#support","title":"Support","text":"<ul> <li> <p>To open support tickets, go to the Customer Support  portal.  </p> </li> <li> <p>To share information, ask questions, and learn about Volt MX Go, go to the HCLSoftware Digital Solutions Community Forum .</p> </li> </ul>"},{"location":"references/index.html#helm-and-kubectl-commands","title":"Helm and Kubectl commands","text":"<p>Useful Helm and Kubectl commands related to Volt MX Go installation.</p>"},{"location":"references/index.html#logging-levels","title":"Logging levels","text":"<p>Describes different logging levels for better monitoring and evaluation of activities and events.</p>"},{"location":"references/index.html#guide-to-documentation","title":"Guide to documentation","text":"<p>Provides a guide on using the Volt MX Go documentation.</p>"},{"location":"references/addconsideration.html","title":"Additional considerations","text":"<p>Lists additional considerations you must be aware of when using Volt MX Go and related actions you must take.</p>"},{"location":"references/addconsideration.html#domino-server-and-notes-database-names-used-within-apis","title":"Domino server and Notes database names used within APIs","text":"<p>When importing a Domino application into Volt Iris, Design Import converts formulas as defined in Domino. The formula functions that refer to Domino databases use a server name and a Notes <code>.nsf</code> database name. These server and database references must be replaced with the Volt MX Object Service name created by Design Import.</p> <p>Example 1:</p> <p>In Domino: <code>@Command([FileOpenDatabase]; server : database ; view; key )</code></p> <p>In Volt Iris: <code>@Command([FileOpenDatabase]; object-service-name ; view; key )</code></p> <p>Example 2:</p> <p>In Domino: <code>@Command([Compose]; server : database ; form )</code></p> <p>In Volt Iris: <code>@Command([Compose]; object-service-name ; form )</code></p> <p>Important</p> <p>Anywhere the server name and Notes <code>.nsf</code> database name appear in a formula must be replaced with the Object Service name.</p>"},{"location":"references/addconsideration.html#differences-in-the-behavior-of-command-formulas-that-access-data-in-notes-and-volt-iris","title":"Differences in the behavior of <code>@Command</code> formulas that access data in Notes and Volt Iris","text":"<ul> <li> <p>In Notes, the <code>@Commands</code> to access data provide UI support when invoked. In Volt Iris, these <code>@Commands</code> are implemented as commands without UI support.</p> </li> <li> <p>In Notes, you can call <code>@Compose</code> without explicitly calling <code>@FileOpenDatabase</code>. In Volt Iris, you are required to call <code>@FileOpenDatabase</code> before calling <code>@Compose</code> or before calling any other DB-related function.</p> </li> <li> <p>In Volt Iris, many DB <code>@Functions</code> depend on the currently selected document. So not only does the database need to be open, but a document needs to be selected. This can be done as part of the call to <code>@FileOpenDatabase</code> using the key field or by using specific VoltFormula APIs that set the current document.</p> </li> </ul> <p>After Design Import completes the import of the Domino application that includes formulas, update the code to include calls to <code>@FileOpenDatabase</code> where needed and set the currently selected document.</p>"},{"location":"references/compatibilitymatrix.html","title":"Compatibility matrix","text":"<p>This section provides compatibility information between different versions of Volt MX Go and Domino REST API. The section also provides version compatibility information between Volt MX Go version and Helm chart versions.</p> <p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p>"},{"location":"references/compatibilitymatrix.html#volt-mx-go-and-domino-rest-api-version-compatibility","title":"Volt MX Go and Domino REST API version compatibility","text":"<p>Note</p> <p>Using non-compatible versions of Volt MX Go and Domino REST API may result in operation issues.</p> Volt MX Go version Domino REST API version version 10.0 version 1.1.5 version 2.1.2 version 1.1.4 version 2.1.1 version 1.1.3.1 version 2.1 version 1.1.1 version 2.0.4 EOS version 1.0.14 version 2.0.3 EOS version 1.0.12 version 2.0.2 EOS version 1.0.8 version 2.0.1 EOS version 1.0.7 version 2.0 EOS version 1.0.6"},{"location":"references/compatibilitymatrix.html#volt-mx-go-and-helm-chart-version-compatibility","title":"Volt MX Go and Helm chart version compatibility","text":"<p>Note</p> <p>Starting with the Volt MX GO version 2.1 release, there are no Volt MX Go helm charts. Users must use the Volt Foundry install mechanisms, including their helm charts.</p> Helm chart component Volt MX Go version Helm chart version Foundry DB Update 2.0.4 1.2.12 Foundry apps 2.0.4 1.2.12 Foundry DB Update 2.0.3 1.2.12 Foundry apps 2.0.3 1.2.12 Foundry DB Update 2.0.2 1.2.8 Foundry apps 2.0.2 1.2.8 Foundry DB Update 2.0.1 1.2.7 Foundry apps 2.0.1 1.2.7 Foundry DB Update 2.0.0 1.2.5 Foundry apps 2.0.0 1.2.5"},{"location":"references/docguide.html","title":"Guide to documentation","text":""},{"location":"references/docguide.html#about-this-guide","title":"About this guide","text":"<p>This guide provides information on using the Volt MX Go documentation.</p>"},{"location":"references/docguide.html#documentation-sections","title":"Documentation sections","text":"<p>The Volt MX Go documentation is based on the Di\u00e1taxis framework , which organizes documentation into the following main sections:</p> <ul> <li>Tutorials</li> <li>How-to guides</li> <li>Topic guides</li> <li>References</li> </ul> <p>The sections address different user needs and fulfill different purposes. Below is an overview that guides you on where to look for needed information:</p> <p>Tutorials help new users achieve basic competence to use the product. Completing a tutorial enables the user to make sense of the rest of the documentation and the product itself.</p> <p>How-to guides give directions for a user to achieve a specific outcome. It also helps frame the capabilities of the product.</p> <p>Topic guides gives explanations, background, and context to clarify and broaden the user's understanding of a topic. It's not concerned with what the user might be doing as it approaches a topic from a higher perspective and different angles.</p> <p>References give exact and up-to-date product descriptions and how to use the product. It enables users to do their work with confidence by providing factual information.</p>"},{"location":"references/docguide.html#navigating-through-the-documentation","title":"Navigating through the documentation","text":"<p>The Volt MX Go documentation has a top menu bar that includes the main document sections. You can select any section from the top menu bar to open the index page of that section and display all the main topics. You can also open a topic from the right sidebar by choosing it.  </p> <p>Each topic page has a main body, containing the content, and sidebars. The left sidebar shows all the topics under the selected main document section. The right sidebar shows all the sections in the topic page.</p> <p>A topic page may include links to other topics within the documentation and links to external references. The links are distinguishable by a different font color. The links that open a new tab are distinguishable by the\u00a0 icon.</p>"},{"location":"references/docguide.html#searching-for-information","title":"Searching for information","text":"<p>The Volt MX Go documentation includes a search feature allowing you to enter search keywords in a search box. While entering the keywords, the search displays the likeliest completion for the last word.</p> <p>The search result shows the number of documents with content matching all or any of the entered keywords and the title of the documents or document sections containing the keywords. You would need to move through the search results to see all the documents with matching content. You can select the document title or document section title to open the document page.</p>"},{"location":"references/docguide.html#support-and-community","title":"Support and community","text":"<p>To open support tickets, go to the Customer Support  portal.  </p> <p>To share information, ask questions, and learn about Volt MX Go, go to the HCLSoftware Digital Solutions Community Forum .</p>"},{"location":"references/knownlimitation.html","title":"Known limitations","text":""},{"location":"references/knownlimitation.html#apache-couchdb-adapter","title":"Apache CouchDB Adapter","text":"<p>The current implementation of the Apache CouchDB<sup>1</sup> adapter doesn't support nested fields, including JSON objects and JSON arrays.</p>"},{"location":"references/knownlimitation.html#data-conversion","title":"Data conversion","text":"<p>As Domino REST API and Volt Foundry administrators can redefine field data types, it can cause data conversion issues as they can redefine a field in Domino differently. For example, a Domino REST API administrator can indicate a date field in Domino as a boolean, while a Volt Foundry administrator can indicate the same date field as a string. This causes conversion issues. As not all possible conversion points have been tested, data conversion isn't yet supported.</p>"},{"location":"references/knownlimitation.html#deleting-offline-documents","title":"Deleting offline documents","text":""},{"location":"references/knownlimitation.html#hard-delete","title":"Hard delete","text":"<p>If a document is hard deleted in the Domino DB by another app, the devices using the offline sync DB won't know about this deletion, and any subsequent sync calls won't remove the document from the sync DB. This results in a stranded document on the device, but not in the back end.</p> <p>To resolve stranded documents in an offline app, use the <code>clearOfflineData</code>  function provided by the Volt MX SDK in Volt Iris. The function clears out the device's sync DB at the level you choose (app level, object service level, object level) so that syncing the app with the back end fully syncs all data without sending any hard deleted documents and allows the device's sync DB to match up with what's in the back end.</p>"},{"location":"references/knownlimitation.html#soft-delete","title":"Soft delete","text":"<p>Offline-enabled apps use soft delete to remove deleted documents from a device's sync DB. Add the <code>IsDeleted</code> property to the Domino REST API schema to enable soft delete. The property will contain the value deleted when the document has been soft deleted and removed entirely from the device\u2019s sync DB upon a sync with the DB.</p> <p>Disabling document deletion on the Domino DB if using it with an offline-enabled app combined with an agent script on the Domino REST API, which periodically clears soft-deleted documents, enforces soft delete on the Domino DB. These keep the soft-deleted documents long enough for the user devices to sync before pruning the deleted documents and ensure that the Domino DB doesn't have too many soft-deleted documents.</p>"},{"location":"references/knownlimitation.html#design-import","title":"Design Import","text":"<ul> <li> <p>Import of forms and views with DBCS character names aren't supported. These forms and views will be listed under Unsupported Forms in the Forms tab and Unsupported Views on the Views tab on the Scope and Forms page of the Design Import Wizard during the import process.</p> </li> <li> <p>If forms with the same name are detected during the import process, one of the forms will be renamed by adding a string of random alphanumeric characters to the end of the original form name. The same procedure applies to views with identical names. One view will be renamed by adding random alphanumeric characters to the end of the view name. You are informed of the changes via a notification dialog such as shown in the following image.  </p> <p></p> </li> <li> <p>Custom forms created in Domino REST API aren't supported.</p> </li> </ul>"},{"location":"references/knownlimitation.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li>Supports only Volt Foundry Object services.</li> <li>Domino object services in Volt Foundry are only usable by authenticated app users. You must have a valid Domino REST API token for all Domino REST API calls. Customers requiring access to Domino object services as unauthenticated users may be able to implement a Foundry pre-processor to obtain valid Domino REST API tokens and inject Authorization headers in each request.</li> </ul>"},{"location":"references/knownlimitation.html#special-characters","title":"Special characters","text":"<ul> <li> <p>The following special characters can't be used as string values of fields in a request payload when executing POST, PUT, PATCH, or BULK UPDATE method in a Domino Adapter Object Service as they cause an error.</p> <ul> <li>Slash (/)</li> <li>Double quote (\")</li> <li>Semicolon (;)</li> <li>Less than (&lt;)</li> </ul> <p>For example, the following request payload will cause an error since the string value of the field Subject includes a slash.</p> <pre><code>{\n\"Body\": \"test\",\n\"Subject\": \"test/update\",\n\"x_004unit\": \"A65F75ABGDHSGFDTJ\"\n}\n</code></pre> </li> <li> <p>The special character apostrophe (') can't be used as part of a string, which is used as part of the search parameter for the <code>$filter</code>, even when encoded using <code>x_00</code> concatenated with its corresponding hex code. The query will proceed, but there will be no results.</p> <p>For example, the query <code>$filter=Type eq 'Dessert's'</code> will return no results. The same goes for the query <code>$filter=Type eq 'Dessertx_0027s'</code>, where the apostrophe was encoded.</p> </li> </ul>"},{"location":"references/knownlimitation.html#domino-database-view-with-duplicate-column-names","title":"Domino database view with duplicate column names","text":"<p>Design Import</p> <p>Design Import doesn't support Domino database views with columns having the same name if those columns have different fields. During the import process, you can see these views listed under Unsupported Views on the View tab on the Scope and Forms page of the Design Import Wizard.</p> <p>Domino Adapter</p> <p>The Domino Adapter handles the Domino database view with columns having the same name in the following ways:</p> <ul> <li>The Domino Adapter allows Foundry mapping and disregards one of the columns if the data of both columns with the same name are derived from the same field.</li> <li>The Domino Adapter throws an error during data model generation if the data of one column is derived from a field while the data of the other column is derived through a formula. You need to update the view columns to have different names.</li> </ul>"},{"location":"references/knownlimitation.html#installing-volt-mx-go-plugins-to-volt-iris","title":"Installing Volt MX Go plugins to Volt Iris","text":"<p>Note</p> <p>The information in this topic applies starting with the Volt MX Go v2.1 up to v2.1.2 release.</p> <p>Installing the MX Go plugins to Volt Iris requires the Volt Iris workspace to contain a\u00a0<code>pluginsInfo.json</code>\u00a0file in the\u00a0<code>.plugins</code>\u00a0directory. An installation error occurs if the <code>pluginsInfo.json</code>\u00a0file isn't in the\u00a0<code>.plugins</code>\u00a0directory. To create the\u00a0<code>pluginsInfo.json</code>\u00a0file in the\u00a0<code>.plugins\u00a0directory</code>,\u00a0create a Desktop Web App project  with Volt Iris in your workspace, and then run Live Preview . Running the Live Preview creates the <code>pluginsInfo.json</code> file.</p>"},{"location":"references/knownlimitation.html#naming","title":"Naming","text":"<ul> <li>Volt Foundry only allows \"letters\" (A-Z and a-z) as the first characters in names. For example, <code>@unid</code> and <code>$files</code>, included in Domino field names, aren't supported. As a workaround, Domino Adapter encodes the problematic characters, for example <code>@unid</code> becomes <code>x_0040unid</code>.</li> <li>Volt Foundry restricts the length of names, such as field names, to be shorter than the name length supported in Domino.</li> </ul>"},{"location":"references/knownlimitation.html#using-open-api-adapter","title":"Using Open API Adapter","text":"<p>Volt MX Go doesn't support the use of the Open API Adapter in the Volt Foundry Integration Services to connect to Domino via Domino REST API.</p>"},{"location":"references/knownlimitation.html#using-helm-charts-on-supported-kubernetes-platform","title":"Using helm charts on supported Kubernetes platform","text":"<p>When using helm charts on a supported Kubernetes platform, you must run the <code>kubectl config set-context --current --namespace=mxgo</code> command in your Ubuntu terminal session to set the current namespace context after restarting Windows or Rancher Desktop. If you don't run the command after restarting Windows or Rancher Desktop, your kubectl commands might fail.</p>"},{"location":"references/knownlimitation.html#verb-mapping","title":"Verb mapping","text":"<p>Verb mapping isn't supported for binary verbs in the Volt Foundry Console.</p>"},{"location":"references/knownlimitation.html#voltformula","title":"VoltFormula","text":"<ul> <li> <p>Prompt <code>[LocalBrowse]</code> and <code>[ChooseDatabase]</code> for Volt Iris application don't have a filter setting for file type since only\u00a0registered file types \u00a0are allowed in\u00a0voltmx.io.FileSystem. For more information about voltmx.io.FileSystem, see the Volt MX documentation .</p> </li> <li> <p>Date APIs for Notes implementations return JavaScript Date Objects, which differ from Notes Date Objects.</p> </li> </ul> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"references/kubecheatsheet.html","title":"Helm and Kubectl commands","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul> <ul> <li> <p>Show the notes that were displayed initially after deploying Domino</p> <pre><code>helm get notes domino\n</code></pre> </li> <li> <p>View the Domino REST API startup / initialization logs:</p> <pre><code>kubectl logs domino-drapi-784d86bf6b-v6dzt -c drapi | less\n</code></pre> </li> <li> <p>View the Domino server logs</p> <pre><code>kubectl logs domino-drapi-784d86bf6b-v6dzt -c domino-log | less\n</code></pre> </li> <li> <p>View the Domino REST API logs</p> <pre><code>kubectl logs domino-drapi-784d86bf6b-v6dzt -c restapi-log | less\n</code></pre> </li> <li> <p>View all the logs</p> <pre><code>kubectl logs domino-drapi-784d86bf6b-v6dzt --all-containers=true | less\n</code></pre> </li> <li> <p>Copy a file out of the pod</p> <pre><code>kubectl cp -n mxgo -c restapi-log $POD_NAME:/local/notesdata/admin.id ./admin.id\n</code></pre> </li> <li> <p>Copy a directory out of the pod</p> <pre><code>kubectl cp -n mxgo -c restapi-log $POD_NAME:/local/notesdata/IBM_TECHNICAL_SUPPORT support/\n</code></pre> </li> </ul>"},{"location":"references/reflogginglevels.html","title":"Logging levels","text":"<p>Logging levels are essential for monitoring and evaluating activities that take place throughout the execution of Volt Iris. Log files contain information about the events happening in Volt Iris, especially during Design Import use. Users can select the appropriate logging level based on the level of log details they wish to capture.</p> Logging Level Description Info Logs informational messages highlighting the estimated progress of the application. Failing to review the logs in this logging level doesn't result in missing important data. Trace Logs all the information about the application to give full visibility of what's happening to the application. Error Logs error events, such as stopping one or more features from correctly functioning, that might still allow the application to continue running. Debug Logs detailed information about events useful to debug the application. Warn Logs harmful situations, such as process interruption, that don't affect the whole application. Fatal Logs severe error events that might lead the application to abort."},{"location":"references/troubleshoot.html","title":"Troubleshooting","text":"<p>List of issues and corresponding resolutions.</p>"},{"location":"references/troubleshoot.html#design-import","title":"Design Import","text":"<ul> <li> <p>403 Insufficient access error in Volt Iris while using Design Import</p> <ul> <li> <p>403 Insufficient access error due to incorrect Maximum Access Level<sup>1</sup> of scope:</p> <p></p> <p>You should contact your Domino REST API administrator to update your scope's Maximum Access Level to Designer.</p> </li> <li> <p>403 Insufficient access error due to incorrect database access level:</p> <p></p> <p>You should contact your Domino administrator to update your assigned access level to the Domino database to Designer.</p> </li> </ul> </li> <li> <p>Domino REST API schema misconfigured settings</p> <p>You might encounter the following issues when importing Domino applications using Design Import. While you may proceed with the import, there is no guarantee that the resulting application will function correctly.</p> <p></p> <ul> <li> <p>Field value mismatch between modes</p> <p>The issue occurs when the\u00a0dql\u00a0mode and\u00a0default\u00a0mode have different property values, such as fields, type, and field access. Make sure they have similar property values.</p> </li> <li> <p>Form missing Default mode Fields and DQL mode</p> <p>The issue occurs when you haven't declared the same property values in the dql mode and default mode. Make sure to declare the same property values in\u00a0dql\u00a0mode and\u00a0default\u00a0mode.</p> </li> <li> <p>Form missing Fields on Default mode</p> <p>The issue occurs when you save the\u00a0form\u00a0without declaring any property values or\u00a0fail to declare\u00a0property values in the default mode that are in the dql mode. Make sure to declare all the fields in the\u00a0default\u00a0mode.</p> </li> <li> <p>Form missing DQL mode</p> <p>The issue occurs when only\u00a0the default mode\u00a0is declared. Make sure to add the dql\u00a0mode before importing the schema.</p> </li> </ul> </li> </ul> <p>Contact your Domino Rest API administrator for assistance in complying with the Domino Rest API related prerequisites for importing Domino Application.</p>"},{"location":"references/troubleshoot.html#first-touch","title":"First Touch","text":"<ul> <li>First Touch or Custom Application Fails to Install on Volt Foundry </li> </ul>"},{"location":"references/troubleshoot.html#general-issues","title":"General issues","text":"<ul> <li> <p>The kubectl commands fail after restarting Windows or Rancher Desktop</p> <p>When your kubectl commands fail after restarting Windows or Rancher Desktop, you must run the <code>kubectl config set-context --current --namespace=mxgo</code> command in your Ubuntu terminal session to set the current namespace context.</p> </li> </ul> <ol> <li> <p>The Maximum Access Level refers to access through the Domino REST API and doesn't override the database's ACL. The access level granted to the user in the Domino database ACL won't be exceeded. For example, if a user has Reader access in the Domino database ACL and the maximum access level for the scope in the Domino REST API is Editor, the user still won't be able to create or edit documents.\u00a0\u21a9</p> </li> </ol>"},{"location":"topicguides/index.html","title":"Topic guides","text":"<p>This section discusses and explains topics and concepts about Volt MX Go to help you gain a better understanding of how Volt MX Go works.</p> <ul> <li> <p>Introducing Volt MX Go</p> </li> <li> <p>VoltFormula</p> </li> <li> <p>Domino Adapter</p> </li> <li> <p>Design Import</p> </li> <li> <p>First Touch app</p> </li> <li> <p>Apache CouchDB Adapter</p> </li> <li> <p>Interacting with Domino server process within Domino container</p> </li> <li> <p>Summernote Editor</p> </li> </ul>"},{"location":"topicguides/couchtopicguide.html","title":"Apache CouchDB Adapter","text":"<p>The Apache CouchDB<sup>1</sup> adapter in Volt Foundry is a business adapter that facilitates seamless integration between Volt Foundry applications and Apache CouchDB databases. It utilizes CouchDB's native RESTful HTTP/HTTPS API to perform essential data operations within CouchDB. This adapter enables Volt MX applications to efficiently connect to CouchDB back-end data, supporting standard CRUD operations and queries through CouchDB views. By leveraging the native REST API, the adapter ensures robust and reliable communication with CouchDB databases.</p>"},{"location":"topicguides/couchtopicguide.html#odata-filter-support","title":"OData filter support","text":"<p>The CouchDB adapter supports basic OData composite filters along with support for select fields. These apply to the GET method.</p> <p>Basic OData composite filters are filter expressions that combine multiple filter conditions using logical operators, such as <code>and</code> and <code>or</code>, and grouping by parentheses to refine query results. These filters operate on resource properties using comparison operators, such as <code>eq</code> or equals and <code>ne</code> or not equals.</p> <p>Important</p> <p>CouchDB does not natively support OData filters, so the Apache CouchDB adapter retrieves records from CouchDB and applies the OData filters to these records. This approach may introduce performance overhead when processing large numbers of documents. It is recommended to thoroughly test your use cases to identify and mitigate any potential performance issues.</p> <p>Examples</p> <ul> <li><code>country eq 'India' or country eq 'China' or country eq 'Singapore'</code></li> <li><code>(country eq 'India' and name eq 'Chennai') or country eq 'China' or country eq 'Singapore'</code></li> <li><code>country eq 'India' or (country eq 'China' and name eq 'Shanghai') or country eq 'Singapore'</code></li> <li><code>(country eq 'India' and name ne 'Chennai') or (country eq 'China' and name eq 'Shanghai') or country eq 'Singapore'</code></li> <li><code>((country eq 'India' and name ne 'Chennai') or (country eq 'China' and name eq 'Shanghai'))</code></li> <li><code>(country eq 'India' and population eq 50000) or (country eq 'China' and population ge 10000)</code></li> <li><code>(country eq 'India' and population eq 50000) or (country eq 'China' and population ge 100)</code></li> <li><code>(continent eq 'AS' or continent eq 'NA') and (population ge 50000)</code></li> <li><code>(continent eq 'EU' or continent eq 'NA') and (population le 50000)</code></li> <li><code>(continent eq 'EU' and population ge 10000 and censusdate gt '2022-10-15')</code></li> <li><code>(continent eq 'EU' and population ge 10000 and censusdate gt '2024-10-15')</code></li> <li><code>(continent eq 'EU' and population ge 10000) and (censusdate ge '2023-01-01' and censusdate le '2023-12-31')</code></li> </ul>"},{"location":"topicguides/couchtopicguide.html#schema-management","title":"Schema management","text":"<p>Although CouchDB is schema-less, in most use cases, the documents stored in them invariably have some schema with integrity enforced via applications that consume the data.</p> <p>The Apache CouchDB adapter infers the schema based on the first document returned in a view and displays this inferred schema in the configuration tab for user confirmation. Using the first document for schema inference is a deliberate design choice aimed at simplifying maintenance and improving efficiency. This inferred schema enhances the developer experience by enabling richer OData filtering capabilities.</p> <p>Additionally, the adapter provides an API endpoint that enables developers to query and modify the first document in a view to keep the inferred schema up to date. Common scenarios for this include:</p> <ul> <li>Introducing new fields in newer documents, which are absent in older documents and impractical to retroactively add.</li> <li>Removing obsolete fields that are no longer relevant.</li> </ul> <p>For more information on importing the API endpoint, see Import ViewSchema endpoint into Apache CouchDB data model.</p> <p>For more information on how to keep the inferred schema current, see Query and update the first document in a CouchDB view for schema management.</p> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"topicguides/designimportintro.html","title":"Design Import","text":"<p>Design Import reads a Domino application through the Domino REST API, retrieves design elements from the application, including forms, views, and agents, and presents them to the user. The user can then decide which forms and fields to import.</p> <p>Design Import builds the forms and views within Volt Iris and makes them actionable against object services in the Domino Adapter (CRUD operations). The forms and views are presented as a simplified list for better navigation.</p>"},{"location":"topicguides/dominoserver.html","title":"Interacting with Domino server process within Domino container","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul> <p>The Volt MX Go installation in a development or test only environment, which was only available until Volt MX Go v2.0.4 release, offered a Helm chart to run a Domino server enabled with the Domino REST API (DRAPI) in a Kubernetes environment. This topic offers guidance and tips on working with the Domino container.</p>"},{"location":"topicguides/dominoserver.html#container-basics","title":"Container basics","text":"<p>When you deploy the Volt MX Go Domino REST API Helm chart, you instruct Kubernetes to create a pod . The Helm chart provides the specifics for what program (Image) will run when the pod starts, the details around what ports to expose, such as port 80 for Domino HTTP server, port 8880 for Domino REST API, and the memory and CPU allocations among other things.</p> <p>The chart also tells Kubernetes about liveness and readiness probes . Kubernetes runs these probes periodically to determine container health. If a readiness probe fails more than a specified threshold, the container is marked as unready and won't receive any HTTP traffic. If a liveness probe fails many times, Kubernetes assumes the container has unrecoverable errors and then kills and restarts the container. </p> <p>These probes are important to understand as some operations require you to stop and restart Domino. If Domino fails to answer liveness probes more than the specified threshold, such as when Domino is stopped, Kubernetes may remove the container and start a new one. By default, this period is 10 minutes for the Domino container.</p> <p>The Domino data directory resides in <code>/local/notesdata</code> within the Domino container. This directory is actually a mount point for a persistent, initially empty file system created by Kubernetes.</p> <p>For more information, see Persistent Volumes  in the Kubernetes documentation.</p> <p>The directory is used to store the Domino server configuration, Notes databases, templates, and other details specific to the Domino server instance. During initial startup, Domino sees the empty directory and triggers the Domino One Touch setup process to populate the directory with databases, templates, and configuration files. Logs are in <code>/local/notesdata/IBM_TECHNICAL_SUPPORT/</code>.</p> <p>Domino runs under the Unix user ID of <code>hcl</code> with primary group of <code>root</code>.</p>"},{"location":"topicguides/dominoserver.html#pod-vs-container","title":"Pod vs Container","text":"<p>A pod and a container are related concepts, but serve different purposes and have distinct characteristics.</p> <p>Container:</p> <ul> <li>Lightweight, standalone, and executable software package that includes everything needed to run a piece of software, including the code, runtime, system tools, and libraries.</li> <li>Provide a consistent and isolated environment for running applications. They're designed to be portable and can run consistently across different environments, such as development, testing, and production.</li> <li>Typically, created using containerization technologies like Docker, and they encapsulate individual applications or services.</li> </ul> <p>Pod:</p> <ul> <li>Smallest deployable unit in Kubernetes, which is a container orchestration platform.</li> <li> <p>Contains one or more containers that are coupled and share the same network namespace, IPC namespace, and storage volumes.</p> <p>Note</p> <p>Containers within the same pod share the same resources and can communicate with each other using localhost, making them suitable for co-locating integrated services.</p> </li> <li> <p>Often used to group containers that need to work together, such as a web server and a sidecar for logging.</p> </li> </ul> <p>Key differences:</p> <ul> <li>A container is a single lightweight unit that encapsulates an application and its dependencies.</li> <li>A pod is a higher-level concept in Kubernetes and can contain one or more coupled containers scheduled together on the same host.</li> <li>Containers package and run individual applications or services, while pods group containers that need to work together and share certain resources.</li> </ul> <p>Kubernetes uses pods as its fundamental scheduling unit because they provide a way to manage co-located containers and offer flexibility for deploying complex applications with multiple services.</p>"},{"location":"topicguides/dominoserver.html#pod-names","title":"Pod names","text":"<p>Pods have names that usually consist of developer defined prefix and runtime defined unique suffix. Together, they make each pod name unique. Because of this, you often have to get a list of the running pods to determine the exact name before taking action on the pod. Use the kubectl command <code>get pods</code>  as shown here:</p> <pre><code>kubectl get pods -n mxgo\n</code></pre> <p>You should see output similar to this:</p> <p><pre><code>NAME                                         READY   STATUS      RESTARTS   AGE\ndrapi-6949c45b8-wghbz                        3/3     Running     0          8d\nmysql-0                                      1/1     Running     0          8d\nfoundry-db-update-zn5vg                      0/1     Completed   0          7d23h\nvoltmx-foundry-apiportal-c874cb6d-l2k8h      1/1     Running     0          7d22h\nvoltmx-foundry-integration-76dc89b57-qmq2t   1/1     Running     0          7d22h\nvoltmx-foundry-identity-85f9854f8b-n6b2d     1/1     Running     0          7d22h\nvoltmx-foundry-console-664c75c6b5-8lm6v      1/1     Running     0          7d22h\n</code></pre> Locate the entry that starts with \"drapi\" and you can see the full pod name is drapi-6949c45b8-wghbz.</p> <p>Note</p> <p>If the pod is restarted for any reason, the pod will have a new name, so you need to get the list of running pods to know the exact name.</p>"},{"location":"topicguides/dominoserver.html#copy-files-into-and-out-of-domino-container","title":"Copy files into and out of Domino container","text":"<p>Using the kubectl cp  command, you can copy files into and out of the container. For example, if you want to copy the domino administrative ID out of the Domino data directory, you use a command like this:</p> <pre><code>kubectl cp domino-drapi-6fc766ccd4-55d9n:/local/notesdata/admin.id domino-id.id -n mxgo -c drapi\n</code></pre> <p>Here, the <code>cp</code> command copies the file <code>/local/notesdata/admin.id</code> out of the container <code>domino-drapi-6fc766ccd4-55d9n</code> to the file <code>domino-id.id</code> in the current working directory. The flag <code>-n mxgo</code> indicates that the Kubernetes namespace is <code>mxgo</code> and the flag <code>-c drapi</code> indicates using the drapi container within the Domino DRAPI pod.</p> <p>Similarly, you could copy the local file <code>foo.bar</code> into the container's <code>/tmp</code> directory like this:</p> <pre><code>kubectl cp foo.bar  domino-drapi-6fc766ccd4-55d9n:/tmp/foo.bar -n mxgo -c drapi\n</code></pre> <p>Refer to Kubernetes documentation  for more details on <code>cp</code>.</p>"},{"location":"topicguides/dominoserver.html#interactive-command-line-access-with-domino","title":"Interactive command line access with Domino","text":"<p>You can get a bash prompt within the Domino container much like when you SSH into a remote Linux host. You do this with the <code>kubectl exec</code> command. You may start a bash command session like this:</p> <pre><code>kubectl exec -it domino-drapi-6fc766ccd4-55d9n  -n mxgo -c drapi -- bash\n</code></pre> <p>The response should look like the following, which indicates you are now in a bash shell command prompt within the Domino REST API container:</p> <pre><code>[notes@domino-drapi-6fc766ccd4-55d9n /]$\n</code></pre> <p>You can use the nashcom Domino Start Script  to interact with the Domino server. This script is already installed and available for use.</p> <p>You can show the status of the Domino server by using this command:</p> <pre><code>domino status\n</code></pre> <p>You should see:</p> <pre><code>Domino Server is running (notes)\n</code></pre> <p>You can attach to the Domino console with the <code>live</code> command and see something like this:</p> <pre><code>[notes@domino-drapi-6fc766ccd4-55d9n /]$ domino live\nUsing Domino config File [/etc/sysconfig/rc_domino_config]\n\n\n--- Live Console for notes ---\n\nTo close console, always type 'close' or 'stop'.\n\n\n[000582:000002-00007FBF5156C740] 10/09/2023 04:39:48 PM  Directory Catalog entitlements.nsf needs rebuilding (Replication to all mobile clients will take longer): Rebuilding due to no replication history\n[006013:000002-00007FA7624F1740] 10/09/2023 04:39:48 PM  Chronos: Performing hourly full text indexing\n[006013:000002-00007FA7624F1740] 10/09/2023 04:39:55 PM  Chronos: Full text indexer terminating\n[000588:000002-00007FF2B92FC740] 10/09/2023 04:45:42 PM  Admin Process: Searching Administration Requests database\n[009792:000002-00007F0024E1A740] 10/09/2023 05:39:53 PM  Chronos: Performing hourly full text indexing\n[009792:000002-00007F0024E1A740] 10/09/2023 05:39:59 PM  Chronos: Full text indexer terminating\n[000588:000002-00007FF2B92FC740] 10/09/2023 05:45:41 PM  Admin Process: Searching Administration Requests database\n[013563:000002-00007FF34BA4B740] 10/09/2023 06:39:53 PM  Chronos: Performing hourly full text indexing\n[013563:000002-00007FF34BA4B740] 10/09/2023 06:39:59 PM  Chronos: Full text indexer terminating\n[000588:000002-00007FF2B92FC740] 10/09/2023 06:45:42 PM  Admin Process: Searching Administration Requests database\n</code></pre> <p>Once in the console, you can run other Domino console commands such as <code>show tasks</code>:</p> <pre><code>show tasks\n\n\n[000191:000015-00007FEDB3E7C700]       Task                 Description\n[000191:000015-00007FEDB3E7C700]  Database Server      Perform console commands\n[000191:000015-00007FEDB3E7C700]  Database Server      Listen for connect requests on TCPIP\n[000191:000015-00007FEDB3E7C700]  Database Server      Load Monitor is idle\n[000191:000015-00007FEDB3E7C700]  Database Server      Database Directory Manager Cache Refresher is idle\n[000191:000015-00007FEDB3E7C700]  Database Server      Organization Name Cache Refresher is idle\n[000191:000015-00007FEDB3E7C700]  Database Server      Log Purge Task is idle\n[000191:000015-00007FEDB3E7C700]  Database Server      Idle task\n[000191:000015-00007FEDB3E7C700]  Database Server      Idle task\n[000191:000015-00007FEDB3E7C700]  Database Server      log.nsf Commit Thread\n[000191:000015-00007FEDB3E7C700]  Database Server      Perform Database Cache maintenance\n[000191:000015-00007FEDB3E7C700]  Database Server      Idle task\n[000191:000015-00007FEDB3E7C700]  Database Server      Platform Stats is idle\n[000191:000015-00007FEDB3E7C700]  Database Server      Metric Task\n[000191:000015-00007FEDB3E7C700]  Database Server      Shutdown Monitor\n[000191:000015-00007FEDB3E7C700]  Database Server      Process Monitor\n[000191:000015-00007FEDB3E7C700]  LDAP Server          Listen for connect requests on TCP Port:389\n[000191:000015-00007FEDB3E7C700]  LDAP Server          Utility task\n[000191:000015-00007FEDB3E7C700]  Router               Utility: Idle\n[000191:000015-00007FEDB3E7C700]  Router               MailEvent: Idle\n[000191:000015-00007FEDB3E7C700]  Router               Dispatch: Idle\n[000191:000015-00007FEDB3E7C700]  Router               Dispatch: Idle\n[000191:000015-00007FEDB3E7C700]  Agent Manager        Executive '1': Idle\n</code></pre> <p>Experienced Domino administrators know that sometimes you must run a process called <code>fixup</code> to fix a corrupt database. You can do this from here using the following command:</p> <pre><code>Load fixup &lt;databasepath&gt; &lt;options&gt;\n</code></pre> <p>You may disconnect from the console, and leave the Domino Server running, using the command <code>close</code>.</p> <p>For the full set of server commands and syntax, see the HCL Domino Documentation .</p>"},{"location":"topicguides/dominoserver.html#stop-and-start-domino-server-process","title":"Stop and start Domino server process","text":"<p>If you need to stop and restart the Domino server without killing the entire pod, you may exec into the Domino pod and issue the command to stop and then restart Domino. Here is an example with a typical output:</p> <pre><code>kubectl exec -it domino-drapi-6fc766ccd4-55d9n  -n voltmxgo -c drapi -- bash\n[notes@domino-drapi-6fc766ccd4-55d9n /]$ export PATH=$PATH:/opt/nashcom/startscript/\n[notes@domino-drapi-6fc766ccd4-55d9n /]$ domino stop\nUsing Domino config File [/etc/sysconfig/rc_domino_config]\n\nStopping Domino for xLinux (notes)\nKEEP started in task mode, no pre_shutdown action required\n ... waiting for shutdown to complete\n ... waiting 10 seconds\n ... waiting 20 seconds\nKEEP started in task mode, no post_shutdown action required\nDomino stopped (26 sec)\nDomino for xLinux (notes) shutdown completed\n</code></pre> <p>Restart using the <code>start</code> command:</p> <pre><code>[notes@domino-drapi-6fc766ccd4-55d9n /]$ domino start\nUsing Domino config File [/etc/sysconfig/rc_domino_config]\n\n\nArchived log file to '/local/notesdata/notes_231009_193905.log'\nRemoved LoadMon-Data '/local/notesdata/loadmon.ncf'\n\nStarting Domino for xLinux (notes)\ndone PID is 20210\n\nKEEP starting in task mode, no post_startup action required\n\n[notes@domino-drapi-6fc766ccd4-55d9n /]$\n</code></pre> <p>You can also use the <code>restart</code> command.</p> <p>Important</p> <p>If you leave Domino stopped for too long, usually longer than 10 minutes, Kubernetes liveness tests detect this and may delete the pod and restart a new one.</p>"},{"location":"topicguides/firsttouchapp.html","title":"First Touch app","text":""},{"location":"topicguides/firsttouchapp.html#overview","title":"Overview","text":"<p>The First Touch Recipe Catalog app is built with Volt MX Go to demonstrate how a Volt MX application can connect back to a Domino application through the Domino Adapter and Domino REST APIs. The app stores and displays recipe cards of various dishes. Its front-end user interface is created using Volt Iris, while the Domino database <code>FirstTouchRecipes.nsf</code> stores the recipe data used by the app. The app is an excellent working example of how data in your Domino database files might be accessed, displayed, and used in different ways and on various devices using Volt MX Go.</p> <p></p>"},{"location":"topicguides/firsttouchapp.html#database-file","title":"Database file","text":"<p>The Domino database <code>FirstTouchRecipes.nsf</code> stores the recipe data used by the the First Touch Recipe Catalog app. The database file consists of rows, each representing a recipe:</p> <p></p> <p>Each cell in a row represents a field containing recipe information:</p> Field name Field description Name Name of the recipe Prep Time Time needed for preparing the ingredients Cook Time Time needed to cook the dish Servings Number of servings Ingredients List of ingredients Directions Cooking instructions Picture Photo of the dish <p>All the data is available in a single Domino View named <code>$All</code> by default.</p>"},{"location":"topicguides/firsttouchapp.html#accessing-the-data","title":"Accessing the data","text":"<p>Accessing the recipe data is straightforward using the Domino REST API, which provides direct access to Domino data from Volt MX Go. The First Touch Recipe Catalog app uses new Volt MX Go object-oriented APIs by modeling each recipe as a Recipe Object:</p> <p></p> <p>The following image shows how the various Recipe operations map to particular APIs:</p> <p></p> <p>The table explains what each of the operations do:</p> Operation Description GET gets/reads a recipe PUT edits a recipe POST creates a recipe DELETE deletes a recipe"},{"location":"topicguides/firsttouchapp.html#using-the-app","title":"Using the app","text":"<p>You can click a recipe card to open an expanded view that shows recipe details such as ingredients and cooking instructions.</p> <p></p> <p>You can enter text or keywords in a Search Recipes box, which highlights the recipe cards with information matching the text or keywords.</p> <p></p> <p>You can add a new recipe by clicking + Add Recipe. It opens the Add Recipe window, which allows you to add the recipe name, prep time, cooking time, number of servings, needed ingredients, and cooking direction. You can also upload a picture of the cooked dish using the recipe.</p> <p></p> <p>The app also allows you to edit each recipe by clicking the menu icon in the recipe card and selecting Edit to open the Update Recipe window. You can also click Edit when in the expanded view.</p> <p></p> <p>In the Update Recipe window, you can change the values of the different fields.</p> <p></p> <p>If you want to remove a recipe, click the menu icon in the recipe card and select Delete. You can also click Delete when in the expanded view.</p> <p></p>"},{"location":"topicguides/firsttouchapp.html#mobile-phone-version","title":"Mobile phone version","text":"<p>Volt MX Go makes it easy to develop apps for many platforms. The First Touch Recipe Catalog app also works on mobile phones, such as iPhones and Android phones, using the same Domino REST APIs. In the mobile phone version of the app, you can also use all its features, such as viewing a recipe, editing a recipe, and adding a recipe.</p> <p></p>"},{"location":"topicguides/introvoltmxgo.html","title":"Introducing Volt MX Go","text":"<p>Volt MX Go modernizes and extends the value of your Domino applications with the market-leading, multi-experience platform Volt MX by:</p> <ul> <li>connecting Volt Foundry to your Domino applications with a dedicated Domino Adapter via the Domino REST API while guided by the simple and fast First Touch app</li> <li>modernizing or creating new multi-experience applications in Volt Iris on your Domino back-end data and applications</li> <li>expanding who can code applications built in Domino through VoltFormula, allowing for app modernization or migration without requiring a complete rewrite of the code</li> <li>importing existing Domino views, forms, and fields into Volt Foundry via Design Import to get a head start on your Volt MX Go applications </li> </ul> <p>Volt MX Go includes the following components:</p> <ul> <li>First Touch</li> <li>Design Import</li> <li>VoltFormula</li> <li>Domino Adapter</li> <li>Domino REST API</li> <li>VoltScript</li> </ul> <p></p>"},{"location":"topicguides/introvoltmxgo.html#first-touch","title":"First Touch","text":"<p>First Touch walks the administrator through establishing a connection to the Domino server and installs and presents users with a sample recipe catalog app in Volt Iris to show how to use the Domino Adapter, connects Volt Foundry to the Domino back end, and leverages the Domino Adapter and Domino REST APIs. The First Touch app promotes a good user experience when establishing connections and importing sample apps into Volt Foundry by:</p> <ul> <li>gathering necessary data from the administrator to connect to the Domino REST API server</li> <li>authenticating using the credentials, creating schema and scope, creating views and applications, and initializing inside the Domino REST API</li> <li>preparing a zip file for import into Volt Foundry and importing the app</li> <li>displaying a message informing the user that everything is ready</li> </ul> <p>The sample recipe catalog app has features such as:</p> <ul> <li>displaying recipe cards that are clickable to show list of ingredients and instructions</li> <li>performing CRUD operations on Domino back end to create, edit, delete a recipe</li> </ul>"},{"location":"topicguides/introvoltmxgo.html#design-import","title":"Design Import","text":"<p>Design Import reads a Domino application through the Domino REST API, retrieves design elements from the application, including forms, views, and agents, and presents them to the user. The user can then decide which forms and fields to import.</p> <p>Design Import builds the forms and views within Volt Iris and makes them actionable against object services in the Domino Adapter (CRUD operations). The forms and views are presented as a simplified list for better navigation.</p>"},{"location":"topicguides/introvoltmxgo.html#voltformula","title":"VoltFormula","text":"<p>VoltFormula expands who can code Domino applications by allowing application modernization or migration without requiring a complete rewrite of the code. VoltFormula includes the following features:</p> <ul> <li>Execution of a defined list of APIs for NotesFormula and OpenFormula through the Rosetta API library.</li> <li>Conversion of formulas into Rosetta API JavaScript through Rosetta converter.</li> <li>Provides developers with a custom version of Volt Iris to allow them to:<ul> <li>Add formulas and convert them to the appropriate Rosetta API JavaScript.</li> <li>Edit resulting JavaScript formulas.</li> <li>See the results of the formula being written.</li> <li>Use IntelliSense for suggestions of APIs available and associated help text.</li> <li>Choose UI widgets from the default widget library equivalent to NotesFormula UI widgets (for example, @prompt to paint dialog in a window).</li> </ul> </li> <li>Provides sample formulas.</li> <li>Maintains list of formulas used in applications.</li> <li>Configuration of Rosetta in Volt Iris to specify how the conversion of formulas to JavaScript behaves. For example, should the <code>If</code> statement become a Rosetta call to API or convert it to native JavaScript <code>If</code>.</li> <li>Configuration of Rosetta for how API behaves when running under an application created in Volt Iris. For example, should the API execute OpenFormula ABS formula or NotesFormula ABS formula.</li> </ul>"},{"location":"topicguides/introvoltmxgo.html#domino-adapter","title":"Domino Adapter","text":"<p>Domino Adapter makes Domino a core part of the Volt Foundry Object Services so that Volt MX applications can interact with Domino databases in the same way they can for other object service endpoint types, such as relational databases. Domino Adapter access to a Domino database is via the Domino REST API. Domino Adapter includes the following features:</p> <ul> <li>Form-based CRUD (post, get, put, delete)</li> <li>Form-based PATCH</li> <li>View-based GET</li> <li>Offline objects within the limits of Volt Foundry</li> </ul>"},{"location":"topicguides/introvoltmxgo.html#domino-rest-api","title":"Domino REST API","text":"<p>HCL Domino REST API provides secure REST API-based access to HCL Domino servers and databases. Designed to highlight Domino as a world class, modern, standards-compliant, cloud native and enterprise-level collaboration platform, it adds contemporary REST APIs to Notes and Domino, enabling a modern programming experience with the tools of your choice.</p> <p>For more information, see HCL Domino REST API Documentation .</p>"},{"location":"topicguides/introvoltmxgo.html#voltscript","title":"VoltScript","text":"<p>VoltScript is a BASIC  scripting language evolved from LotusScript\u00ae, which was developed for the Lotus Software family of products. The language has been extended for use with HCL Volt MX Go as a server-side scripting language running within the Foundry middleware layer. VoltScript includes:</p> <ul> <li>Visual Studio Code extension for allowing developers to write code in VS Code</li> <li>Linux Docker image for allowing Mac developers to use the VS Code extension</li> <li>Language enhancements for improving consistency and ease of use</li> <li>Open-source helpers, such as a library with advanced collection and map collections, a unit testing framework, and a serializer and deserializer for JSON-based object persistence</li> <li>A toolkit for scaffolding the various VoltScript extensions and script code and autogenerating starter code and related documentation</li> <li>Various VoltScript Extensions for supporting various processes, such as data access over HTTP to specific or generic REST services, handling JSON data, interacting with the operating system and files, managing input parameters</li> </ul> <p>To learn more about VoltScript, see VoltScript Documentation .</p>"},{"location":"topicguides/summernotewidget.html","title":"Summernote Editor","text":"<p>The Summernote Editor component enables you to add a WYSIWYG editor to your form for handling rich text with links, tables, images, videos, and character styles.</p> <p>Summernote Editor is integrated into Volt Iris using custom components. A component acts as a widget configured to provide a specific feature. This component uses the Browser widget to display the UI of the Summernote Editor and enable its functionality. It links to the HTML file found in the local files associated with Summernote Editor.</p> <p>Once imported, you can find the Summernote Editor component by navigating to Templates and expanding Components. Under the Modules folder of the Summernote Editor component, you can find the controller that holds the defined methods exposed to the form for usage.</p> <p>Following are some use cases of the Summernote Editor component:</p> <ul> <li> <p>For replacing rich text fields during code generation of existing forms</p> <p>When generating Create and Update forms for the first time, the Summernote Editor component is created before the forms to replace rich text fields and enable input of rich text content. After submitting the form, the HTML content from the editor is encoded in Base64 and stored in the rich text field. The Base64 content is decoded and displayed on the Summernote Editor component when loading the Update form.</p> </li> <li> <p>For use in custom forms</p> <p>You will find the Summernote Editor component in the Default Library. To use the Summernote Editor component, drag and drop it onto the custom form. You can then configure its placement and utilize its properties to retrieve and set data on the editor.</p> </li> </ul> <p>For more information on components, see Use Components  and Creating Applications with Components  in the Volt MX documentation.</p> <p>Note</p> <p>When performing code generation of forms, the Summernote Editor component is included only if a rich text field is found on the form in the Domino REST API. For more information on code generation of forms, see Generate CRUD forms for Object Service.</p>"},{"location":"topicguides/summernotewidget.html#methods","title":"Methods","text":"<p>Methods are used by the form to interact with the Summernote Editor component.</p> <p>To configure a method:</p> <ol> <li>In the Project Explorer in Volt Iris, click the Templates tab.</li> <li>Expand the components node, if needed, and then select the component. In this case, select Summernote Editor.</li> <li>In the Properties pane, click the Action tab.</li> <li>Click Manage Methods to open the Manage Methods dialog.</li> </ol> <p>You can now configure the component methods. For more information, see Manage Methods  in the HCL Volt MX Documentation.</p> <p>Methods</p> setData Description This method enables you to set a value for the Summernote Editor component. Syntax <code>setData(data)</code> Parameters <code>data</code>A string parameter that sets the value of the Summernote Editor component. Return value none Remarks Setting the value of the Summernote Editor component can be done without explicitly calling the syntax. Assigning a value on the \"data\" property triggers the <code>setData</code> function. Example <code>self.instanceDetails.data = \"Test\"</code> getData Description This method enables you to get the value of the Summernote Editor component. Syntax <code>getData()</code> Return value Returns a string containing the HTML string content of the value entered in the Summernote Editor component. Remarks Getting the value of Summernote Editor component can be done without explicitly calling the syntax. Calling the <code>data</code> property triggers the <code>getData</code> function. Example <code>object[\"Details\"] = self.instanceDetails.data</code> checkOrRemoveFile Description This method enables you to check if the Summernote Editor component has a specific attachment on its content. This method also enables you to remove the attachment file if needed. Syntax <code>checkOrRemoveFile(fileName, removeFile = false)</code> Parameters <code>fileName</code> A string value parameter for checking if a specified filename exists on the content of the Summernote Editor component.  <code>removeFile</code>  An optional boolean parameter for enabling the removal of the file from the content of the Summernote Editor component when it's set to true. By default, the parameter is set to false. Return value Returns a Boolean value of true if a file exists, and false if a file isn't found in the content ofthe  Summernote Editor component. Remarks The <code>removeFile</code> parameter can be left out if you won't remove a file from the Summernote Editor component. Only the <code>fileName</code> parameter is required. Example For only checking if a file exists:  <code>self.instanceDetails.checkOrRemoveFile (\u201cTestFile.pdf\u201d)</code>  For removing a file: <code>self.instanceDetails.checkOrRemoveFile(\u201cTestFile.pdf\u201d, true)</code>"},{"location":"topicguides/summernotewidget.html#properties","title":"Properties","text":"<p>You need a default property to build the Summernote Editor component. The table shows properties that hold the values of a field.</p> <p>To configure a property:</p> <ol> <li>In the Project Explorer in Volt Iris, click the Templates tab.</li> <li>Expand the components node, if needed, and then select the component. In this case, select Summernote Editor. </li> <li>In the Properties pane, click the Component tab.</li> <li>Click Manage Properties to open the Manage Properties dialog.</li> </ol> <p>You can now configure the component properties. For more information, see Manage Properties  in the HCL Volt MX Documentation.</p> <p>Properties</p> data Description It's the called property when assigning or retrieving a value from the Summernote Editor component. ID Description Unique identifier consisting of alphanumeric characters."},{"location":"topicguides/summernotewidget.html#additional-information","title":"Additional information","text":"<p>To learn more, see Summernote Editor .</p>"},{"location":"topicguides/adapter/index.html","title":"Domino Adapter","text":"<p>The Domino Adapter makes Domino a core part of the Volt Foundry Object services so that Volt MX apps can interact with Domino databases in the same way they can for relational databases.</p>"},{"location":"topicguides/adapter/index.html#authorization","title":"Authorization","text":"<p>The Domino Adapter interacts with Domino for both configuration and run-time activities by leveraging the Domino REST API, which requires an authorization token. The Domino Adapter relies directly on the Identity service of Volt Foundry and indirectly on the OAuth REST API of Domino REST API to obtain valid authorization tokens for configuration and runtime.</p>"},{"location":"topicguides/adapter/index.html#object-services","title":"Object Services","text":"<p>Domino Adapter supports Object services that enables model-driven app design and development by following a micro-services architectural approach to create reusable components and link them to fit into your solution. By using Object services, you can define your preferred data model, which defines how your app wants to interact with its data.</p> <p>When creating an Object service in Volt Foundry for Domino, the Volt Foundry administrator associates the Object service to a single Domino REST API server URL. The Volt Foundry administrator can associate more than one Object service with the same Domino REST API server URL if desired. Domino object models are generated in the Object Service from the scopes defined in Domino REST API.</p> <p>The <code>object</code> of the Object service essentially has two components:</p> <ul> <li> <p>Data Model refers to the definition of the fields that comprise the object definition.</p> </li> <li> <p>Methods refers verbs for interacting with the data, for example GET, POST.</p> </li> </ul> <p>For more information, see Object Services  in the HCL Volt MX documentation.</p>"},{"location":"topicguides/adapter/datamodel.html","title":"Data models","text":""},{"location":"topicguides/adapter/datamodel.html#overview","title":"Overview","text":"<p>Data models can be generated in an Object Service by Volt Foundry administrators. For Domino object services, a data model can be generated for any <code>Form</code> or <code>View</code> associated with a <code>scope</code> defined by a Domino REST API administrator.\u00a0Additionally, Volt Foundry data models can be generated for <code>Other Metadata</code> to provide specific information outside the data contained in the form and view Domino documents.</p> <p>Note</p> <p><code>Forms</code> and <code>views</code> are created in a Domino REST API <code>schema</code> and named by a Domino REST API <code>scope</code>.</p> <p>In addition to some Meta fields, generated data models include:</p> <ul> <li>Form data models include all fields defined by the associated Domino REST API <code>schema</code>.</li> <li> <p>View data models include all view columns defined in the NSF design.</p> </li> <li> <p>Other Metadata data models include fields that pertain to the requested information.</p> </li> </ul> <p>Volt Foundry data models are in sync with the Domino REST API <code>schema</code> at the time of data model generation. The data models may be out of sync with the <code>schema</code>, which may lead to undesired or unexpected results, because of the following:</p> <ul> <li>data models are edited in Volt Foundry</li> <li>schema is modified in Domino REST API</li> <li>changes in the NSF design</li> </ul> <p>For more information on schemas, scopes, forms, and views, see Using Admin UI  in the Domino REST API documentation.  </p>"},{"location":"topicguides/adapter/datamodel.html#data-model-artifact-names","title":"Data model artifact names","text":"<p>Volt Foundry data model names, such as field names, are similar but not identical to the names found in Domino REST API. The data model object names must meet all the following conditions:</p> <ul> <li>contain only alpha-numeric characters or <code>_</code></li> <li>begin with a letter</li> <li>be between 1 and 50 characters long</li> </ul> <p>If the Domino data form or view name doesn't meet these conditions, a user must change the data model name in Volt Foundry when going through the generation flow.</p> <p>Volt Foundry data models are generated based on related artifacts in Domino REST API. For example, data model <code>fields</code> are based on <code>fields</code> found in Domino REST API for a given scope/schema. The generated Volt Foundry data model artifacts, such as form names, view names, and field names, are derived from and similar to the corresponding Domino REST API artifact. However, \"special characters\" in any of those names are encoded. For example, the <code>@unid</code> (meta) field becomes <code>x_0040unid</code>.</p>"},{"location":"topicguides/adapter/datamodel.html#effective-data-types","title":"Effective data types","text":"<p>Field data types in the generated Volt Foundry data model are the same as the data type defined in the Domino REST API schema. Some field (column) data types are common between Domino and Volt Foundry, for example string, numbers, and dates. Others, such as Domino <code>multivalue</code> (technically, these are <code>arrays</code>) and <code>rich text</code> aren't found in Volt Foundry.</p> <p>For common data types, the field type in the generated Volt Foundry object models will match the data type in the Domino REST API schema. In the example image, the number of Servings is a <code>float</code> in the Domino REST API <code>schema</code>.</p> <p></p> <p>In the Volt Foundry object model, the field type of Servings is <code>number</code>:</p> <p></p> <p>For Domino object types not found in Volt Foundry, the Volt Foundry object field type is set to <code>string</code> and Domino type information is retained as properties in the field metadata attribute. </p> <p>Two properties are used for Domino data type information:</p> <ul> <li><code>dominoSpecialType</code> property indicates if the data is <code>Rich Text</code>, <code>Array</code> (multi-value), or <code>Date Only</code>. </li> <li><code>dominoArrayComponentType</code> property indicates the array type for multi-value fields, for example, a multi-value array of strings as shown in the following example:</li> </ul> <p></p> <p>The table shows a simplified list of data-type mappings between Domino REST API and Volt Foundry:</p> <p>Note</p> <p>Examples in the table are from the Volt Foundry Object Service perspective.</p> Domino REST API format Volt Foundry type Additional details DATE-TIME date Example: <code>2023-05-09T19:39:47Z</code> DATE date Example: <code>2023-05-09</code>For more information, see Data model metadata attribute. BYTE, DOUBLE, FLOAT, INT32, INT64 number Example: <code>7</code> BOOLEAN boolean Example: <code>true</code> BINARY string AUTHORS, NAMES, PASSWORD, READERS string RICH TEXT string Field values are in Base64-encoded HTML format.For more information, see Data model metadata attribute. ARRAY string Field values are \"stringified JSON Array\" Example: <code>\"[\\\"flour\\\",\\\"eggs\\\"]\"</code>Other data types may also be marked as multi-value, in which case the JSON array contains values of the corresponding type. Examples:String array: <code>\"[\\\"flour\\\",\\\"eggs\\\"]\"</code>Number array: <code>\"[1,2]\"</code>Author array: <code>\"[\\\"CN=mxgo admin/O=ocp\\\",\\\"[Admin]\\\"]\"]\"</code>For more information, see Data model metadata attribute. all others string"},{"location":"topicguides/adapter/datamodel.html#meta-fields","title":"Meta fields","text":"<p>In addition to the document fields specified in the database design such as <code>form</code> or <code>view</code>, Domino <code>meta-fields</code> are in the list of Volt Foundry data model fields generated for Domino. As a result, when you <code>GET</code> Domino documents from the object service, values for these <code>meta-fields</code> are also returned for each document.</p> <p>For form-based data models, the document's <code>@unid</code> is an obvious example. Below are other <code>meta-fields</code> you may see for each document:</p> <pre><code>x_0040addedtofile\nx_0040aliases\nx_0040attachments\nx_0040created\nx_0040editable\nx_0040lastaccessed\nx_0040lastmodified\nx_0040lastmodifiedinfile\nx_0040noteclass\nx_0040noteid\nx_0040parentunid\nx_0040revision\nx_0040size\nx_0040unid\nx_0040unread\nx_0040warnings\n</code></pre> <p>For view-based data models, the following <code>meta-fields</code> are returned:</p> <pre><code>x_0040etag\nx_0040form\nx_0040index\nx_0040noteid\nx_0040scope\nx_0040totalCount\nx_0040unid\n</code></pre> <p>Note</p> <ul> <li> <p>All <code>meta-fields</code> aren't sortable. </p> </li> <li> <p>UNID is unique for any set of documents returned on <code>GET</code> for a form-based data model. However, UNID isn't necessarily unique for view rows since more than one row in a view may be associated with the same database document.</p> </li> <li> <p>Meta-fields are included in generated data models by default. The Volt Foundry developer can modify the generated data model as needed, such as removing <code>meta-field</code> if desired.</p> </li> <li> <p><code>x_0040aliases</code> doesn't correspond to any attribute in Domino. Documents won't contain any value for this attribute. However, it's for attaching metadata with form name aliases. For more information, see Data model metadata attribute.</p> </li> <li> <p>Offline objects require a data model to specify a primary key field. <code>x_0040unid</code> needs to be set as the primary key for Domino data models. However, with views, the returning list of data may contain items with no UNID or items with the same UNID.Items with no UNID occur when querying categorized views. These items with no UNID are top-level category items. To avoid receiving these items, a user must scope the view request to return only the document items using the OData filter parameter <code>&lt;GET view URL&gt;?$filter=x_0040scope eq documents</code>.For items with the same UNID, errors may occur when syncing data to the front end.</p> </li> <li> <p><code>x_0040totalCount</code> provides the maximum number of documents in a view, including those documents that might have certain access restrictions. This means that the number of returned documents on <code>GET</code> for a view-based data model might be less than the value provided by the <code>x_0040totalCount</code> since you might not have access to some of those documents.</p> <p>The value of <code>x_0040totalCount</code> might not also match the number of returned documents on <code>GET</code> for a view-based data model when the view is designed to have a column that shows each value of a multivalue field as a separate document.  </p> </li> </ul>"},{"location":"topicguides/adapter/datamodel.html#data-model-metadata-attribute","title":"Data model metadata attribute","text":"<p>The Metadata attribute of a Volt Foundry data model field retains extended Domino design information, which may be of interest to client applications using Volt Iris.</p>"},{"location":"topicguides/adapter/datamodel.html#column-characteristics","title":"Column characteristics","text":"<p>For View columns (only non-meta columns), the data model field Metadata attribute includes additional column properties:</p> Column property Description position Refers to column number. sorted Refers to whether the column is sortable direction Refers to sort direction, either ascending or descending. resort-asc Indicates that clicking the column header sorts the view in ascending order. resort-desc Indicates that clicking the column header sorts the view in descending order.If both resort-asc and resort-desc are true, clicking the column header changes the sorting between ascending and descending orders. title Displays the title of the column. multiValueSeparator NONE indicates the column isn't an array of values (multi-valued). COMMA, SPACE, SEMICOLON, and NEWLINE indicate that the column has an array of values, and the type of separator character is indicated. isHidden True indicates the column is hidden. False indicates the column isn't hidden."},{"location":"topicguides/adapter/datamodel.html#form-aliases","title":"Form aliases","text":"<p>For the form fields, the form's alias names are itemized on the <code>x_0040aliases</code> meta field. One metadata property is added for each alias. For example, if a form in a database has three aliases, the Metadata properties look like the following:</p> <p></p>"},{"location":"topicguides/adapter/datamodel.html#extended-data-types","title":"Extended data types","text":"<p>Rich text and multi-value (array) form fields are seen as string fields in the data model. For these fields, <code>dominoSpecialType</code> and <code>dominoArrayComponentType</code> properties are added to metadata.</p> For... dominoSpecialType dominoArrayComponentType RICH TEXT richtext not used MULTI-VALUE array the array type, such as string, number DATE ONLY date not used"},{"location":"topicguides/adapter/datamodel.html#other-metadata","title":"Other Metadata","text":"<p>There are cases where a user may request Domino information not included in Domino data documents but still necessary for creating a Domino application in Volt MX Go. This information is accessible from the Domino Adapter in the <code>Other Metadata</code> section.</p> <p>To use this information, a Volt Foundry administrator must select which <code>Other Metadata</code> entities to create in the data model generation flow. This creates a Volt MX entity. A user can then perform a GET method on this Volt MX entity to obtain and use the information.</p> <p>Implemented <code>Other Metadata</code> entities:</p> <ul> <li> <p>UserInfo</p> <p>This endpoint gets information about a logged in Domino user. The user must be logged in and be able to be authenticated against Domino. The returned fields may include:</p> <pre><code>email\nfamily_name\ngiven_name\nmailFile\nmailServer\nnames\npreferred_username\nscope\nsub\n</code></pre> </li> <li> <p>ServerInfo</p> <p>This endpoint gets information about the Domino and Domino REST API versions. The returned fields may include:</p> <pre><code>dominoBuildNumber\ndominoFixpackNumber\ndominoHotfixNumber\ndominoMajorVersion \ndominoMinorVersion\ndominoPlatform\ndominoPlatformBits\ndominoProductionBuild\ndominoQmrNumber\ndominoQmuNumber\ndominoVersion\nkeepDescription\nkeepImageBuild\nkeepName\nkeepVendor\nkeepVersion\n</code></pre> </li> <li> <p>AttachmentsInfo</p> <p>This endpoint gets information about all the attachments on a document. The return fields may include:</p> <pre><code>created\nmodified\nname\nsize\n</code></pre> <p>Note</p> <p>When performing the GET method for AttachmentsInfo, an error is thrown if you don't provide the UNID of the document.</p> <p>For more information on performing the GET method, see Test the GET method by viewing a record.</p> </li> </ul>"},{"location":"topicguides/adapter/method.html","title":"Methods (Verbs)","text":""},{"location":"topicguides/adapter/method.html#overview","title":"Overview","text":"<p>Methods for interacting with the data models are generated when generating the data models.</p> <p>For view-based data model and Other Metadata based data model, only the GET method is generated.</p> <p>For form-based data models, a number of methods including standard CRUD operations and binary CRUD are generated and supported:</p> <ul> <li>POST : Create a new Domino document containing the specified fields.</li> <li>GET : Read existing Domino documents, returning zero or more documents.</li> <li>PUT : Update an existing document, replacing all specified fields. If a field is omitted from the payload, it's removed from the document in Domino.</li> <li>DELETE : Delete the specified document.</li> <li>PATCH : Update an existing document, replacing only the specified fields. If a field is omitted from the payload, the field value in the Domino document isn't modified.</li> <li> <p>BULK UPDATE: Update an existing collection of documents, replacing only the specified fields in those documents. If a field is omitted from the payload, the field value in the collection of Domino documents isn\u2019t modified.</p> <p>Important</p> <p>You must use the <code>$filter</code> ODATA query parameter to tell Domino REST API which documents to update. Otherwise, an error occurs.</p> </li> <li> <p>createBinary - <code>Create</code> a new attachment file to attach to a specified Domino document.</p> </li> <li>getBinary - <code>Read</code> an existing attachment from a specified Domino document. </li> <li>updateBinary - <code>Update</code> an existing attachment from a specified Domino document, replacing it with a new one. </li> <li>deleteBinary - <code>Delete</code> an existing attachment from a specified Domino document.</li> </ul> <p>Tip</p> <p>The binary verbs, <code>createBinary</code>, <code>getBinary</code>, <code>updateBinary</code>, <code>deleteBinary</code>, are generated only when the Domino REST API administrator includes the $FILES virtual field in the form mode.</p> <p>Data models in Volt Foundry are associated with specific Domino forms, so each operation (GET, Update, etc.) only applies to the form associated with the data model.</p>"},{"location":"topicguides/adapter/method.html#supported-odata-query-parameters-for-form-based-get-method","title":"Supported OData query parameters for form-based GET method","text":"<p>Note</p> <p>The results of the GET method are influenced by the OData query parameters, if specified, and by the document's form attribute values.</p> <ul> <li>If there are no defined form name aliases in the Domino design for the form, the method returns only documents with the form attribute equal to the form name.</li> <li>If there are defined form name aliases in the Domino design for the form, the method returns only the documents that have the form value set equal to the last alias in Domino. </li> </ul> <p>The Domino Adapter supports these OData query parameters for the GET method on form-based data models:</p> <ul> <li><code>$select</code>: List of fields to include in the returned documents.</li> <li><code>$filter</code>: Specifies field conditions that must be met by a document for it to be in the returned document set.</li> <li><code>$filter (unknown Form)</code>: Specifies the UNID of the document to return without knowing the document's form name.</li> <li><code>$top</code>: Specifies the number of documents to return, starting from the beginning or from the row specified by <code>$skip</code>.</li> <li><code>$skip</code>: Specifies the number of documents to skip (zero-based row index of the first returned document).</li> </ul> <p>Note</p> <ul> <li><code>$top</code> and <code>$skip</code> are used together for pagination, for example to define how many entries to skip or how many entries to return from the skip point onward.</li> <li>When using a special character as part of the search parameter for the <code>$filter</code>, you must encode the special character using <code>x_00</code> concatenated with its corresponding hex code. For example, when filtering a <code>Name</code> field whose value is <code>CN=admin/O=ocp</code>, you must encode the special characters <code>=</code> and <code>/</code>. So the filter should be <code>$filter=Name eq CNx_003dadminx_002fOx_003docp</code>, where we encoded <code>=</code> as <code>x_003d</code> and <code>/</code> as <code>x_002f</code>.</li> <li> <p>The special character apostrophe (') cannot be used as part of a string, which is used as part of the search parameter for the <code>$filter</code>, even when encoded using <code>x_00</code> concatenated with its corresponding hex code. The query will proceed, but there will be no results.</p> <p>For example, the query <code>$filter=Type eq 'Dessert's'</code> will return no results. The same goes for the query <code>$filter=Type eq 'Dessertx_0027s'</code>, where the apostrophe was encoded. </p> </li> </ul> <p>With <code>$filter</code>, the following canonical functions are supported:</p> <ul> <li><code>substringof</code></li> <li><code>endswith</code></li> <li><code>startswith</code></li> </ul> <p>Examples</p> Example query Expected result <code>$filter=Type eq 'Dessert'</code> Returns all documents whose <code>Type</code> field is equal to <code>Dessert</code>. <code>$filter=Name eq CNx_003dadmin</code> Returns all documents whose <code>Name</code> field is equal to <code>CN=admin</code>. <code>$top=2</code> Returns the first two documents. <code>$skip=3</code> Returns documents starting from the fourth document onwards. <code>$select=Name&amp;$filter=substringof(Name,'Hot') eq true</code> Returns documents with <code>Hot</code> included in the <code>Name</code> field, only returning the <code>Name</code> field. <code>$select=Name,Ingredients</code> Returns documents that include only the <code>Name</code> and <code>Ingredients</code> fields. <code>$filter=x_0040unid eq xxxx and Form eq unknown</code> Returns only the form name and form alias names for the document specified by UNID xxxx. <code>$select=Name,mydate,x_0040created&amp;$filter=mydate ge '2022-03-10T05:00:00Z'</code> Returns documents that include only the <code>Name</code> field, <code>mydate</code> field, and <code>x_0040created</code> columns, with <code>mydate</code> values on or after 2022-03-10T05:00:00Z. <code>$filter=createDate gt '2025-01-01' and createDate lt '2026-01-01'</code> Returns all documents with <code>createDate</code> values after 2025-01-01 and before 2026-01-01. <code>$filter=createDate ge '2025-01-01' and createDate le '2026-01-01'</code> Returns all documents with <code>createDate</code> values on or after 2025-01-01 and on or before 2026-01-01. <code>$filter=count ge 100 and count le 200</code> Returns all documents with <code>count</code> values greater than or equal to 100 and less than or equal to 200."},{"location":"topicguides/adapter/method.html#supported-odata-query-parameters-for-view-based-get-method","title":"Supported OData query parameters for view-based GET method","text":"<p>The Domino Adapter supports these OData query parameters for the GET method on view-based data models:</p> <ul> <li><code>$skip</code>: Specifies the number of view entries to skip (zero-based row index of the first returned view entry).</li> <li><code>$top</code>: Specifies the number of view entries to return, starting from the beginning or from the row specified by <code>$skip</code>.</li> <li><code>$orderby</code>: Sort the result-set in ascending or descending order based on a specified column. The column must be specified as <code>sortable</code> in the database design. </li> <li><code>$filter</code>: Specifies conditions that must be met by a view entry for it to be returned in the set of matching view entries. Only <code>sortable</code> columns can be filtered.</li> </ul> <p>Note</p> <ul> <li>For view-based data models, the view selection formula determines which documents will be returned. Additionally, the returning documents may be further filtered by the OData parameter settings.</li> <li>You can use formulas to create new sortable columns in Domino Designer. As an example, you can use the formula <code>@Text(@Universalid)</code> to create a new sortable column in Domino Designer so that <code>$filter</code> and <code>$orderby</code> can be used to find a view row by UNID or to order the view by UNID.</li> <li><code>$top</code> and <code>$skip</code> are used together for pagination, for example to define how many entries to skip or how  many entries to return from the skip point onward.</li> <li>When using a special character as part of the search parameter for the <code>$filter</code>, you must encode the special character using <code>x_00</code> concatenated with its corresponding hex code. For example, when filtering a <code>Name</code> field whose value is <code>CN=admin/O=ocp</code>, you must encode the special characters <code>=</code> and <code>/</code>. So the filter should be <code>$filter=Name eq CNx_003dadminx_002fOx_003docp</code>, where we encoded <code>=</code> as <code>x_003d</code> and <code>/</code> as <code>x_002f</code>.</li> <li> <p>The special character apostrophe (') can't be used as part of a string, which is used as part of the search parameter for the <code>$filter</code>, even when encoded using <code>x_00</code> concatenated with its corresponding hex code. The query will proceed, but there will be no results.</p> <p>For example, the query <code>$filter=Type eq 'Dessert's'</code> will return no results. The same goes for the query <code>$filter=Type eq 'Dessertx_0027s'</code>, where the apostrophe was encoded.</p> </li> </ul> <p>With <code>$filter</code>, the following canonical functions are supported:</p> <ul> <li><code>startswith</code></li> <li><code>documentsOnly</code></li> <li><code>distinctDocuments</code></li> </ul> <p>Examples</p> Example query Expected result <code>$top=10</code> Returns 10 rows of data unless the total number of data rows in the view database is less than 10. <code>$skip=0</code> Returns rows starting from the first view entry in the view (skip zero rows), equivalent to omitting <code>$skip</code>. <code>$skip=5</code> Returns data starting from the sixth view entry in the view. <code>$filter=Year eq 2021</code> Returns all view entries in the view whose <code>Year</code> field is equal to <code>2021</code>. <code>$filter=Name eq CNx_003dadmin</code> Returns all view entries in the view whose <code>Name</code> field is equal to <code>CN=admin</code> <code>$filter=startswith(Model,'HR') eq true</code> The result-set only has data that starts with \"HR\" in column <code>Model</code>. <code>$filter=documentsOnly eq true</code> Returns view documents instead of view entries in a view. <code>$filter=distinctDocuments eq true</code> Returns only distinct view documents in a view. <code>$orderby=Year</code> or <code>$orderby=Year asc</code> Returned rows are ordered by ascending values in the <code>Year</code> column.<code>asc</code> is the default if direction is omitted. <code>$orderby=Year desc</code> Returned rows are ordered by descending values in the <code>Year</code> column."},{"location":"topicguides/adapter/method.html#attachments","title":"Attachments","text":"<p>Domino documents can have associated attachments, which are accessible to Volt MX Go through the binary API.</p> <p>You may perform the following binary operations:</p> <ul> <li> <p>getBinary: <code>GET &lt;objSvc&gt;/operations/&lt;data model&gt;/getBinary?unid=&lt;document unid&gt;&amp;name=&lt;file name&gt;&amp;type=&lt;input type&gt;</code></p> <ul> <li> <p>Downloads file content in Base64 format by default. The <code>type</code> parameter is optional. You can provide <code>type</code> as an input with value <code>bytes</code> or <code>file</code>. If you specify <code>bytes</code>, the response is in a stream format. If you specify <code>file</code>, the response is in a downloadable format.</p> <p>Tip</p> <p>To download files larger than\u00a050 MB, use a type argument, such as\u00a0<code>bytes</code>,\u00a0to\u00a0avoid memory issues with the default\u00a0Base64\u00a0format. This enables downloading of files up to 1 GB.</p> </li> </ul> </li> <li> <p>createBinary: <code>POST &lt;objSvc&gt;/operations/&lt;data model&gt;/createBinary?unid=&lt;document unid&gt;&amp;name=&lt;file name&gt;&amp;field=&lt;field name&gt;</code></p> <ul> <li>Takes the file\u2019s binary content encoded as a Base64 string or in the multipart/form-data format</li> <li> <p>The <code>field</code> parameter is optional. If this parameter is provided, it attaches the file to a valid rich text field within the Domino document. If this parameter isn't provided, the file is attached to the Domino document as a whole.</p> <p>Tip</p> <p>To upload large files,\u00a0upload them to the createBinary API with a Content-Type of multipart/form-data.\u00a0Pass the UNID and document name as arguments to the API together with a form, having the\u00a0key\u00a0<code>data</code>, which contains\u00a0the file content to be uploaded.\u00a0This\u00a0enables uploading of files up to 1 GB.</p> </li> </ul> </li> <li> <p>updateBinary: <code>PUT &lt;objSvc&gt;/operations/&lt;data model&gt;/updateBinary?unid=&lt;document unid&gt;&amp;name=&lt;file name&gt;&amp;field=&lt;field name&gt;</code></p> <ul> <li>Takes the file\u2019s binary content encoded as a Base64 string. The old file is deleted and replaced with the new Base64 encoded file content.</li> <li> <p>The <code>field</code> parameter is optional. If the attachment you wish to update is associated with a field in the Domino database, include the field in the update request to remove the attachment.</p> <p>Tip</p> <p>To upload large files, upload them to the\u00a0updateBinary\u00a0API with a Content-Type of multipart/form-data. Pass the UNID and document name as arguments to the API together with a form, having the\u00a0key\u00a0<code>data</code>, which contains\u00a0the file content to be uploaded.\u00a0This\u00a0enabled uploading of files up to 1 GB.</p> </li> </ul> </li> <li> <p>deleteBinary: <code>DELETE &lt;objSvc&gt;/binary/&lt;data model&gt;?unid=&lt;document unid&gt;&amp;name=&lt;file name&gt;&amp;field=&lt;field name&gt;</code></p> <ul> <li>The file is deleted from the Domino database and its name is removed from the <code>$FILES</code> field.</li> <li>The field parameter is optional. If the attachment you wish to delete is associated with a field in the Domino database, include the field in the delete request to remove the attachment.</li> </ul> </li> </ul> <p>Important</p> <ul> <li> <p>Large attachment files may cause some performance issues, so limit the attachment size to the minimum possible size. If you have large-sized attachments, increase your Volt Foundry configured memory resource by configuring heap size  or updating <code>integration.resourceMemoryLimit</code> in <code>values.yaml</code> for Volt Foundry on supported Kubernetes platform.</p> </li> <li> <p>By default, there is also a limit in the Domino Rest API on how big an attachment it can support. To learn how to change the size limit, see Change file size limit  in the Domino REST API documentation.   </p> </li> </ul>"},{"location":"topicguides/adapter/method.html#using-patch-verb-from-volt-mx-sdk","title":"Using PATCH verb from Volt MX SDK","text":"<p>The Volt MX SDK has CRUD functions allowing an end-user application to use the REST API to interact with the Domino data in the back end. If you want to use the PATCH verb, you need to use the <code>customVerb</code> function from the Volt MX SDK. For more information, see customVerb method  in the HCL Volt MX Documentation.</p> Refer to the code example for using the SDK's <code>customVerb</code> function. <pre><code>onPatchDocument: function() {\nvar objSvc = voltmx.sdk.getCurrentInstance().getObjectService(\"myObj\", {\n    \"access\": \"online\"\n    });\n    var dataObject = new voltmx.sdk.dto.DataObject(\"dataObj\");\n    dataObject.addField(\"x_0040unid\", \"unid\");\n    dataObject.addField(\"field\", \"value\");\n    var options = {\n    \"dataObject\": dataObject\n    };\n    objSvc.customVerb(\"partialupdate\", options,\n    function(response) {\n    voltmx.print(\"Partial update succeeded: \" + JSON.stringify(response));\n    },\n    function(error) {\n        voltmx.print(\"Partial update failed:\" + JSON.stringify(error));\n    });\n    } \n</code></pre>"},{"location":"topicguides/adapter/method.html#using-binary-apis-from-volt-mx-sdk","title":"Using binary APIs from Volt MX SDK","text":"<p>Using the binary APIs with Domino Adapter requires more properties in the functional call. You need to add an object with a <code>queryParams</code> key to the options argument of the <code>createBinaryContent</code>. The object should contain query parameters required for using the binary APIs with Domino Adapter, including <code>unid</code> and <code>name</code> parameters. </p> <p>Note</p> <ul> <li> <p>For more information, see the general use of the binary APIs from the Volt MX SDK  in the HCL Volt MX documentation.</p> </li> <li> <p>There is no function in the Volt MX SDK for calling <code>deleteBinary</code>.</p> </li> </ul> Refer to the code examples for using the SDK's binary functions. <pre><code>onCreateBinary: function() {\n    var objSvc = voltmx.sdk.getCurrentInstance().getObjectService(\"myObj\", {\n    \"access\": \"online\"\n    });\n    var dataObject = new voltmx.sdk.dto.DataObject(\"dataObj\");\n    var binaryText = \"SGVsbG8gd29ybGQh\";\n    dataObject.addField(\"data\", binaryText);\n    dataObject.addField(\"x_0040unid\", \"123\");\n    objSvc.createBinaryContent({\n    \"dataObject\": dataObject,\n    \"queryParams\": {\n        \"unid\": \"123\",\n        \"name\": \"helloworld.txt\",\n        \"field\": \"Body\"\n    },\n    \"binaryAttrName\": \"data\"\n    },\n    function(response) {\n        voltmx.print(\"Binary content created: \" + JSON.stringify(response));\n    },\n    function(error) {\n        voltmx.print(\"Failed: \" + JSON.stringify(error));\n    });\n},\nonUpdateBinary: function() {\n    var objSvc = voltmx.sdk.getCurrentInstance().getObjectService(\"myObj\", {\n    \"access\": \"online\"\n    });\n    var dataObject = new voltmx.sdk.dto.DataObject(\"dataObj\");\n    var binaryText = \"VXBkYXRlZCBIZWxsbyBXb3JsZCE=\";\n    dataObject.addField(\"data\", binaryText);\n    dataObject.addField(\"x_0040unid\", \"123\");\n    objSvc.updateBinaryContent({\n    \"dataObject\": dataObject,\n    \"queryParams\": {\n        \"unid\": \"123\",\n        \"name\": \"helloworld.txt\",\n        \"field\": \"Body\"\n    },\n    \"binaryAttrName\": \"data\"\n    },\n    function(response) {\n        voltmx.print(\"Binary content created: \" + JSON.stringify(response));\n    },\n    function(error) {\n        voltmx.print(\"Failed: \" + JSON.stringify(error));\n    });\n},\nonGetBinary: function() {\n    var objSvc = voltmx.sdk.getCurrentInstance().getObjectService(\"myObj\", {\n    \"access\": \"online\"\n    });\n    var dataObject = new voltmx.sdk.dto.DataObject(\"dataObj\");\n    dataObject.addField(\"x_0040unid\", \"123\");\n    objSvc.getBinaryContent({\n    \"dataObject\": dataObject,\n    \"queryParams\": {\n        \"unid\": \"123\",\n        \"name\": \"helloworld.txt\"\n    },\n    \"binaryAttrName\": \"data\"\n    },\n    function(response) {\n        voltmx.print(\"Binary content: \" + JSON.stringify(response));\n    },\n    function(error) {\n        voltmx.print(\"Failed: \" + JSON.stringify(error));\n    });\n},\n\nonDeleteBinary: function() {\n    var objSvc = voltmx.sdk.getCurrentInstance().getObjectService(\"myObj\", {\n    \"access\": \"online\"\n    });\n    var dataObject = new voltmx.sdk.dto.DataObject(\"dataObj\");\n    dataObject.addField(\"x_0040unid\", \"123\");\n    objSvc.deleteBinaryContent({\n    \"dataObject\": dataObject,\n    \"queryParams\": {\n        \"unid\": \"123\",\n        \"name\": \"helloworld.txt\",\n        \"field\": \"Body\"\n    },\n    \"binaryAttrName\": \"data\"\n    },\n    function(response) {\n        voltmx.print(\"Binary deleted: \" + JSON.stringify(response));\n    },\n    function(error) {\n        voltmx.print(\"Failed: \" + JSON.stringify(error));\n    });\n}\n</code></pre>"},{"location":"topicguides/voltformula/index.html","title":"VoltFormula","text":"<p>What ideas do you think of whenever you hear the word formula? It refers to a string of words, a collection of mathematical processes, or an expression with the purpose of producing results as an output. The description of this \"formula\" and our VoltFormula are the same. VoltFormula is responsible for converting the formula used on other Formula Language platforms into the JavaScript programming language. This is essential for existing users of Notes and Excel<sup>1</sup> who want to convert their existing formulas into the JavaScript language.</p>"},{"location":"topicguides/voltformula/index.html#two-formula-languages-exposed-as-one-implementation-by-voltformula","title":"Two formula languages exposed as one implementation by VoltFormula","text":"<ul> <li> <p>OpenFormula </p> </li> <li> <p>Notes Formula Language </p> </li> </ul> <p>These two are wrapped into one parent formula language that encapsulates both implementations. We call this VoltFormula, aka RosettaJS. By nature of being a JavaScript exposed API library, the formula language can be extended via helper registration methods.</p>"},{"location":"topicguides/voltformula/index.html#objective","title":"Objective","text":"<p>The aim of VoltFormula is to expose the capability to run certain functions of OpenFormula (Excel) and Formula Language (Notes @Function) in the context of Volt MX Go. This converts certain functions of OpenFormula and Formula Language into JavaScript. This JavaScript is used to build web-based applications. This is to help or to guide all the existing users of Formula Language and OpenFormula to transition into a web-based app. The VoltFormula reveals the JavaScript without any problem in converting the existing formulas in OpenSource and Formula Language.</p>"},{"location":"topicguides/voltformula/index.html#architecture-diagrams","title":"Architecture diagrams","text":""},{"location":"topicguides/voltformula/index.html#rosetta-flow-overview","title":"Rosetta flow overview","text":""},{"location":"topicguides/voltformula/index.html#openformula-or-notes-api-implementation-paths","title":"OpenFormula or Notes API implementation paths","text":""},{"location":"topicguides/voltformula/index.html#serving-rosetta-under-volt-mx-go-via-sdk-plug-in","title":"Serving Rosetta under Volt MX Go via SDK plug-in","text":"<ol> <li> <p>Excel is a registered trademark or trademark of Microsoft Corporation in the United States and/or other countries.\u00a0\u21a9</p> </li> </ol>"},{"location":"topicguides/voltformula/declvariables.html","title":"Using variables in formulas","text":""},{"location":"topicguides/voltformula/declvariables.html#overview","title":"Overview","text":"<p>There are two mechanisms by which the Rosetta Converter accepts and converts variables into JavasScript:</p> <ul> <li> <p>LET function  in Excel<sup>1</sup></p> </li> <li> <p>JSP style syntax (code passthrough)</p> </li> </ul>"},{"location":"topicguides/voltformula/declvariables.html#using-let-function-with-openformula","title":"Using LET function with OpenFormula","text":"<p>LET function</p> <p><pre><code>=LET(x, 5, SUM(x, 1))\n</code></pre> </p>"},{"location":"topicguides/voltformula/declvariables.html#using-jsp-style-syntax","title":"Using JSP style syntax","text":"<p>The converter uses JSP expression syntax in OpenFormula formulas to provide capabilities for formula conversion not currently possible with strict OpenFormula syntax. For more information, see JSP expression syntax .</p> <p>Example:</p> <ul> <li> <p>OpenFormula:</p> <p></p> </li> </ul> <p>Although Notes formula language already provides means to declare variables, the converter can also use the JSP expression syntax in a Notes formula.</p> <p>Examples:</p> <ul> <li> <p>Notes formula with native notes variable declaration expression:</p> <p></p> </li> <li> <p>Notes formula with JSP-based variable declaration expression:</p> <p></p> </li> </ul> <p>Note</p> <p>To use JSP expression in formulas, select Passthrough unrecognized formula language into JavasSript conversion results checkbox. For more information, see Configure VoltFormula.</p> <ol> <li> <p>Excel is a registered trademark or trademark of Microsoft Corporation in the United States and/or other countries.\u00a0\u21a9</p> </li> </ol>"},{"location":"topicguides/voltformula/extendrosettapi.html","title":"Extending Rosetta API","text":""},{"location":"topicguides/voltformula/extendrosettapi.html#overview","title":"Overview","text":"<p>Since the API is a JavaScript object, you can extend the API library by adding to the object structure any number of custom categories and/or method definitions, as long as you adhere to the schema structure. For this, helper extension registration methods are provided within the API configuration object of the Rosetta library.</p>"},{"location":"topicguides/voltformula/extendrosettapi.html#samples","title":"Samples","text":"<ul> <li> <p>Sample array of JSON objects used to extend the API via the <code>&lt;rosettajs&gt;.API.registerAPIs()</code> method using note custom category and custom language capabilities:</p> <pre><code>[\n    {\n        'name': 'hello0',\n        'lang': 'notes function',\n        'cat': 'Text',\n        'code': function (name) {\n        return 'hello ' + name;\n        }\n    },\n    {\n        'name': 'goodbye',\n        'lang': 'notes command',\n        'cat': 'Text',\n        'code': function (name) {\n        return 'bye bye ' + name;\n        }\n    },\n    {\n        'name': 'weather',\n        'lang': 'open formula',\n        'cat': 'CustomMailCategory',\n        'code': function (zip) {\n        return 'Sunny in ' + zip;\n        }\n    },\n    {\n        'name': 'getEmployeeId',\n        'lang': 'MyCustomFormulaLang',\n        'cat': 'MyEmployeeMethods',\n        'code': function (id) {\n        return id + 'is Chief Custodian';\n        }\n    }\n    ]\n</code></pre> </li> <li> <p>Sample array of JSON objects used to extend the API via the <code>&lt;rosettajs&gt;.API.registerAPIs()</code> method (note mixed code):</p> <pre><code>[\n    {\n        'name': 'MyAbs(n)',\n        'lang': 'notes function',\n        'cat': 'Math',\n        'code': '@Abs(n);'\n    },\n    {\n        'name': 'AbsPlus1',\n        'lang': 'notes function',\n        'cat': 'Custom',\n        'code': n =&gt; Math.abs(n) + 1\n    },\n    {\n        'name': 'MyExcelAbs(n)',\n        'lang': 'open formula',\n        'cat': 'Custom',\n        'code': '=ABS(n)'\n    }\n]\n</code></pre> </li> </ul>"},{"location":"topicguides/voltformula/extendrosettapi.html#using-formula-language-in-the-extension-code","title":"Using Formula language in the extension code","text":"<p>In addition to extending via JavaScript implementations, when the <code>code</code> property of the extension input has Formula language instead of a JavaScript function, the registration method converts the formula into JavaScript and registers the resulting JavaScript as the code for the particular extension.</p>"},{"location":"topicguides/voltformula/extendrosettapi.html#additional-information","title":"Additional information","text":"<p>For more information, see Register and unregister custom Rosetta APIs.</p>"},{"location":"topicguides/voltformula/rosettaapi.html","title":"Rosetta API configuration options","text":""},{"location":"topicguides/voltformula/rosettaapi.html#default","title":"Default","text":"<pre><code>{\n  _notes: \"notes\",\n  _openFormula: \"openformula\",\n  _defaultAPI: \"notes\",\n  storage: {\n    _integration: \"integration\",\n    _object: \"object\",\n    _offline: \"offline\",\n    _defaultServiceType: \"object\"\n  },\n  framework: {\n    _voltmx: \"vmx\",\n    _javascript: \"js\",\n    _defaultFramework: \"js\"\n  }\n}\n</code></pre>"},{"location":"topicguides/voltformula/rosettaapi.html#getters-setters-and-checkers","title":"Getters, setters, and checkers","text":"<p>Tip</p> <p>For more information about a specific API object, see the Rosetta API reference documentation . </p>"},{"location":"topicguides/voltformula/rosettaapi.html#implementation","title":"Implementation","text":"<ul> <li><code>&lt;rosettajs&gt;.API.getDefaultAPI()</code></li> <li><code>&lt;rosettajs&gt;.API.setDefaultAPIAsNotes()</code></li> <li><code>&lt;rosettajs&gt;.API.setDefaultAPIAsOpenFormula()</code></li> <li><code>&lt;rosettajs&gt;.API.isDefaultNotes()</code></li> <li><code>&lt;rosettajs&gt;.API.isDefaultOpenFormula()</code></li> </ul>"},{"location":"topicguides/voltformula/rosettaapi.html#framework","title":"Framework","text":"<ul> <li><code>&lt;rosettajs&gt;.API.getDefaultFramework()</code></li> <li><code>&lt;rosettajs&gt;.API.setDefaultFrameworkAsJS()</code></li> <li><code>&lt;rosettajs&gt;.API.setDefaultFrameworkAsVoltMX()</code></li> <li><code>&lt;rosettajs&gt;.API.isDefaultFrameworkJS()</code></li> <li><code>&lt;rosettajs&gt;.API.isDefaultFrameworkVoltMX()</code></li> </ul>"},{"location":"topicguides/voltformula/rosettaapi.html#extending","title":"Extending","text":"<ul> <li><code>&lt;rosettajs&gt;.API.registerAPI(apiRef, name, code, lang, cat)</code></li> <li><code>&lt;rosettajs&gt;.API.registerAPIs(apiRef, jsonAPIs)</code></li> </ul>"},{"location":"topicguides/voltformula/rosettaapi.html#intellisense-files","title":"Intellisense files","text":"<ul> <li><code>&lt;rosettajs&gt;.API.getTernFileNames()</code></li> </ul>"},{"location":"topicguides/voltformula/rosettaapi.html#additional-information","title":"Additional information","text":"<p>For more information, see Configure VoltFormula.</p>"},{"location":"topicguides/voltformula/rosettaapischema.html","title":"Rosetta API schema","text":"<p>The Rosetta API is instantiated as a multi-nested JavaScript object defining each API implementation as methods structured within the object. The structure can be broken down as follows:</p>"},{"location":"topicguides/voltformula/rosettaapischema.html#level-i-api-category-objects","title":"Level I: API category objects","text":"<pre><code>Admin\nAgent\nAttachment\nCompatibility\nCreate\nDatabase\n(...trimmed list for readability...)\nUserEnvironment\nUserId\nView\nWindow\n</code></pre>"},{"location":"topicguides/voltformula/rosettaapischema.html#api-configuration-objects","title":"API configuration objects","text":"<pre><code>API\nlogger\nbuild\nversion\n</code></pre>"},{"location":"topicguides/voltformula/rosettaapischema.html#level-ii-category-objects","title":"Level II: Category objects","text":"<p>Each category object encloses definitions for method definition of the category. For example, below is the Math category object showing all the methods available for the Math category:</p> <pre><code>abs\nacos\nacosh\n(...trimmed list for readability...)\ntan\ntanh\ntrunc\n</code></pre> <p>In addition to the method definitions, there are special objects for the Lotus Notes formula language implementations and OpenFormula language implementations, defined as:</p> <pre><code>_notes\n_openFormula\n</code></pre>"},{"location":"topicguides/voltformula/rosettaapischema.html#level-iii-api-method-definition-objects","title":"Level III: API method definition objects","text":"<p>Each method definition is composed of the name of the method and the functional implementation.</p> <p>Examples:</p> <ul> <li> <p>For the Rosetta implementation of the <code>&lt;rosettajs&gt;.Math.abs</code> API:</p> <pre><code>name: \"abs\"\nabs: \u0192 abs(...value)\n</code></pre> </li> <li> <p>For the Lotus Notes formula language implementation <code>&lt;rosettajs&gt;.Math._notes.functions.Abs</code>:</p> <pre><code>name: \"Abs\"\nAbs: \u0192 Abs(...value)\n</code></pre> </li> <li> <p>For the OpenFormula language implementation <code>&lt;rosettajs&gt;.Math._openFormula.ABS</code>:</p> <pre><code>name: \"ABS\"\nABS: \u0192 ABS(number)\n</code></pre> </li> </ul>"},{"location":"topicguides/voltformula/rosettaapischema.html#structure-and-runtime-details","title":"Structure and runtime details","text":"<p>The Rosetta implementation will call either the Notes implementation or the OpenFormula implementation. You can think of the Rosetta implementations as a top layer that encapsulates both the Notes implementations and the OpenFormula implementations.</p> <p>In this way, we expose a single language of API methods that represent APIs in either formula language, or both. Hence, the naming Rosetta (Stone). Also, some APIs only exist in OpenFormula and some APIs only exist in Lotus Notes formula language, and some in both. By defining the top layer as Rosetta for all existing APIs in both formula languages, a single API library  corresponding to all possible APIs in either formula language is created.</p> <p>When an API contains sub-implementations for each formula language, for example, OpenFormula =ABS and Notes Formula @Abs being represented by Rosetta abs() API, the configuration option to use the Notes Formula implementation vs the OpenFormula (or vice versa) is observed. Sometimes, the sub-implementations for each formula language for a specific API, for example the absolute value (abs) API, may return the result. However, the arguments accepted may differ. For example, the @Abs() of Notes Formula accepts lists of numbers, and if a list is passed in, a list of is returned. Lists in this context are converted into JavaScript arrays.</p>"},{"location":"topicguides/voltformula/rosettaconverterconfig.html","title":"Rosetta Converter configuration options","text":""},{"location":"topicguides/voltformula/rosettaconverterconfig.html#overview","title":"Overview","text":"<p>The Rosetta Converter converts formula code (Notes or Excel<sup>1</sup>/OpenFormula) into a JavaScript equivalent. It takes advantage of the available Rosetta API library implementations as needed. It creates a JavaScript code snippet comprised of the native\u00a0JavaScript\u00a0elements as well as calls to the corresponding APIs.\u00a0</p> <p>The\u00a0Rosetta Converter\u00a0is an integral part of the VoltFormula process. It allows the developer to write code using formula languages\u00a0and\u00a0takes care of providing\u00a0the JavaScript equivalents. It\u00a0is written\u00a0in JavaScript\u00a0using\u00a0regex rules and\u00a0ANTLR (ANother Tool for Language Recognition)(antlr4)  rules.</p>"},{"location":"topicguides/voltformula/rosettaconverterconfig.html#configuration-options","title":"Configuration options","text":"<p>The Rosetta Converter has several options to manipulate the formula to JavaScript conversion behaviors. All options are accessible directly through the converter's\u00a0configuration\u00a0object getters and setters. In Volt Iris, you can access these options on the VoltFormula tab in the Project Settings dialog.</p> <ul> <li> <p>allowPassthrough</p> <p>This option is set to false by default.</p> <p>Formula language that's not known are transferred to the JavaScript results intact. In this way, the formula can be artificially altered with code that's not necessarily formula language, and the resulting JavaScript will contain such code.</p> <p>Important</p> <p>Use this option with caution as it can be used to inject executable code.</p> <p>Example:</p> <pre><code>n = @Abs(-5);\nconsole.log(n);\n</code></pre> <p>In the example, <code>console.log()</code> isn't a valid formula language. If the option allowPassthrough is true, then the resulting JavaScript looks like this:</p> <pre><code>var n = rosettajs.Math.abs(-5);\nconsole.log(n);\n</code></pre> <p>If the option allowPassthrough is false, which is the default, then conversion result throws an exception that looks something like this:</p> <pre><code>[{\n    \"line\": 2,\n    \"column\": 11,\n    \"message\": \"no viable alternative at input 'console.log('\"\n}]\n</code></pre> </li> <li> <p>_stripNumbers</p> </li> </ul> <p>This option is set to true by default.</p> <ul> <li>_paramAsFieldName</li> </ul> <p>This option is set to true by default.</p> <ul> <li>_nativeness</li> </ul> <p>This option controls whether conversion into native JavaScript vs calling API functions for code elements that exist natively in JavaScript, such as:</p> <pre><code>- @Do\n- @DoWhile\n- @For\n- @If\n- @While\n- @True\n- @False\n</code></pre> <p>Example:</p> <p>when \"@True\": true,</p> <pre><code>yes := @True\n</code></pre> <p>converts to:</p> <pre><code>var yes = true;\n</code></pre> <p>when \"@True\": false,</p> <pre><code>yes := @True\n</code></pre> <p>converts to:</p> <pre><code>var yes = rosettajs.Logical.true();\n</code></pre>"},{"location":"topicguides/voltformula/rosettaconverterconfig.html#default","title":"Default","text":"<pre><code>{\n  _allowPassthrough: false,\n  _stripNumbers: true,\n  _paramAsFieldName: true,\n  _nativeness: {\n    \"_global\": true, // true =all native js\n    \"@Do\": true,\n    \"@DoWhile\": true,\n    \"@For\": true,\n    \"@If\": true,\n    \"@While\": true,\n    \"@True\": true,\n    \"@False\": true\n  },\n}\n</code></pre>"},{"location":"topicguides/voltformula/rosettaconverterconfig.html#getters-setters-and-checkers","title":"Getters, setters, and checkers","text":"<ul> <li><code>&lt;converter&gt;.config.getAllowPassthrough()</code></li> <li><code>&lt;converter&gt;.config.getNativeness(formula)</code></li> <li><code>&lt;converter&gt;.config.getParamAsFieldName()</code></li> <li><code>&lt;converter&gt;.config.getStripNumbers()</code></li> <li><code>&lt;converter&gt;.config.setAllowPassthrough(allow)</code></li> <li><code>&lt;converter&gt;.config.setNativeness(formula, native)</code></li> <li><code>&lt;converter&gt;.config.setParamAsFieldName(convert)</code></li> <li><code>&lt;converter&gt;.config.setStripNumbers(strip)</code></li> </ul>"},{"location":"topicguides/voltformula/rosettaconverterconfig.html#additional-information","title":"Additional information","text":"<p>For more information, see Configure VoltFormula.</p> <ol> <li> <p>Excel is a registered trademark or trademark of Microsoft Corporation in the United States and/or other countries.\u00a0\u21a9</p> </li> </ol>"},{"location":"topicguides/voltformula/rosettavmxgo.html","title":"Serving Rosetta under Volt MX Go via SDK plug-in architecture","text":""},{"location":"topicguides/voltformula/rosettavmxgo.html#flow-overview","title":"Flow overview","text":""},{"location":"topicguides/voltformula/selectfl.html","title":"Representing view selection formulas in API","text":""},{"location":"topicguides/voltformula/selectfl.html#select-formula-language","title":"SELECT (Formula Language)","text":"<p>The SELECT reserved word defines criteria for the selection of documents in an agent that runs a formula, in a view, or during replication. You use a SELECT statement before an expression to define the set of documents that you want to change, see in a view, or replicate.</p>"},{"location":"topicguides/voltformula/selectfl.html#syntax","title":"Syntax","text":"<p><code>SELECT formula ;</code></p>"},{"location":"topicguides/voltformula/selectfl.html#usage","title":"Usage","text":"<p>Using SELECT in the formula eliminates the need to go through the database to select the documents. You can run the filter macro on all the documents in the database, and the SELECT statement performs the selection process. For views, a selection formula can ideally be used at design time in the definition of the view on the server. The view, when accessed, presents entries that match the formula.</p> <p>Selection Formulas retrieve a specified list of documents that match the selection formula.</p> <p>With Volt MX Go, the database is somewhat hidden. The client communicates with the backend using services such as Integration, Object, Offline, Orchestration, or Workflow. Access to the Notes database is through an adapter within a Foundry Service. Object Service is the service for building Enterprise apps, so this is the first implementation choice. Integration Service and Offline Object Service can be secondary implementation choices.</p> <p>A client app can write to any of these backend services, but each requires a different set of APIs.</p> <p>From Rosetta's standpoint, we need to support each of these services within our APIs that use them. To do this, we're expanding the app config support:</p> <pre><code>const config = {\n  _notes: \"notes\",\n  _openFormula: \"openformula\",\n  _defaultAPI: \"notes\",\n\n  serviceType: {\n    _integration: \"integration\",\n    _objects: { online: \"online-objects\", offline: \"offline-objects\" },\n    _orchestration: \"orchestration\",\n    _workflow: \"workflow\",\n    _engagement: \"engagement\",\n    _defaultServiceType: \"online-objects\" },\n\n  framework: {\n    _voltmx: \"vmx\",\n    _javascript: \"js\",\n    _defaultFramework: \"js\"\n  }\n};\n</code></pre> <p>The <code>defaultService</code> is Object services (<code>object</code>). Each API that requires these services needs to support all the services, the initial implementation should be using the Object Services.</p>"},{"location":"topicguides/voltformula/selectfl.html#document-selection","title":"Document selection","text":"<p>The selection of documents involves: </p> <ol> <li> <p>Calling <code>SelectDocuments()</code> to perform the SELECT formula operation.</p> <p><code>export async function SelectDocuments (svcName, viewName, formulaSelection)</code></p> <p>wherein:</p> <p><code>svcName</code> - serverName : database (serverName isn't used, database is the Object Service name)</p> <p><code>viewName</code> - Form or Table name within the Object Service (maps to Notes DB Table name)</p> <p><code>formulaSelection</code> - Notes selection formula for selecting documents for API to return</p> <p>Note</p> <p>The API returns a Promise, which has to be handled by the caller to access returned data.</p> </li> <li> <p>Fetching all documents from the specified Notes database (Object Service) with the API.</p> <p>The following opens the database using Object Service and retrieves all documents:</p> <pre><code>if (FileOpenDatabase(svcName, viewName)) {\n  let promise = All();\n  promise.then( onSuccess, onFailure );\n}\n</code></pre> </li> <li> <p>Filtering the document list with the API based on Notes <code>formulaSelection</code>.</p> <ul> <li> <p>Put the Notes <code>formulaSelection</code> within an <code>\"@If\"</code> test to return true if the selection is a match for a particular document.</p> <p><code>formulaSelection = \"@If(\" + formulaSelection + \"; 1 ; 0);\";</code></p> </li> <li> <p>Use the JavaScript from Notes converter to generate a JavaScript string for the <code>formulaSection</code>.</p> <p><code>let js = getRosettaJSFromNotes(rosettajs, formulaSelection);</code></p> <p><code>js = \"try { return \" + js + \" } catch(err) { return 0; }\";</code></p> </li> <li> <p>Create the db field names and values as JavaScript strings so that the <code>formulaSelection</code> can reference them.</p> <pre><code>// dynamically create db variables\nfor (let i=0; i &lt; results.length; i++) {\n    let selection = \"\";\n\n    for (let k in results[i]) {\n        let value = results[i][k];\n        let delimiter = \"\";\n        if (typeof value === \"number\") { \n          delimiter =  \"\"; \n        } else { \n            value = value.startsWith('[') &amp;&amp; value.endsWith(']') ?\n            JSON.parse(results[i][k]).toString() : value;\n        }\n        selection += 'const ' + k + ' = ' + delimiter + value + delimiter + ';';\n    }\n\n    // Prepend the DB fields to formula selection string.**\n\n    // Add formulaSelection query to Function\n    selection += js;\n\n    // Perform the formula selection. \n    // Execute the javascript string using the Javascript \"Function()\" API.  \n    // If it returns \"true\" then the document is added to the results.\n\n    /* eslint-disable */\n    let func = new Function(\"rosettajs\", selection);\n    /* eslint-enable */\n    let select = func(rosettajs);\n\n    // select record if condition is met\n    if (select) { \n       selectedResults.push(results[i]); \n    }\n}\n</code></pre> </li> </ul> <p>Note</p> <p>Results are returned in a Promise.</p> </li> </ol>"},{"location":"topicguides/voltformula/vfcodingguides.html","title":"VoltFormula coding exercise examples in Volt Iris","text":"<p>This section has a series of coding exercise examples to help you understand how to use VoltFormula in Volt Iris. Each exercise example has a problem description, followed by a code template where you can write your solution.</p>"},{"location":"topicguides/voltformula/vfcodingguides.html#exercise-1-hello-world","title":"Exercise 1: Hello, World!","text":"<p>Description</p> <p>Write a function named <code>sayHello</code> to show a prompt box and add the formula.</p> <p>Formula code template</p> <pre><code>@Prompt([Ok];\"Greeting\";\"Hello, World!\");\n</code></pre> <p></p>"},{"location":"topicguides/voltformula/vfcodingguides.html#exercise-2-change-a-name","title":"Exercise 2: Change a name","text":"<p>Description</p> <p>Write a function called <code>changeName</code> that takes a string from a prompt box, update a field, and add formula.</p> <p>Formula code template</p> <pre><code>newName := @Prompt([OkCancelEdit]; \"Enter Your Name\"; \"Type your name in the box below.\"; \"\");\n@SetField(name, newName);\n</code></pre> <p></p>"},{"location":"topicguides/voltformula/vfcodingguides.html#exercise-3-sum-simple","title":"Exercise 3: Sum simple","text":"<p>Description</p> <p>Write a function called <code>sum</code> that summarizes an array of numbers. Define a variable called <code>result</code> to get a returned value and add the formula.</p> <p>Formula code template</p> <pre><code>@Sum( (-1) : 2 ; (-10) : 20 )\n</code></pre> <p></p>"},{"location":"topicguides/voltformula/vfcodingguides.html#exercise-4-concatenate-names","title":"Exercise 4: Concatenate names","text":"<p>Description</p> <p>Write a function called <code>concatNames</code> that concatenates first names and last names in arrays. Define a variable called <code>result</code> to get a returned value and add the formula.</p> <p>Formula code template</p> <pre><code>full := '';\nfname := \"Amy\" : \"John\";\nlname := \"Jones\" : \"Doe\";\n@For(n :=0; n&lt;=1; n:= n + 1;\nfull := @If(n=0;fname[n] + \" \" + lname[n];full : (fname[n] + \" \" + lname[n])));\nfull\n</code></pre> <p></p>"},{"location":"topicguides/voltformula/vfcodingguides.html#exercise-5-show-all-documents","title":"Exercise 5: Show all documents","text":"<p>Description</p> <p>Write a function called <code>showAll</code> that retrieves and displays all documents in Domino. Define a variable called <code>result</code> to get a returned value and add the formula.</p> <p>Formula code template</p> <pre><code>SELECT @All\n</code></pre> <p></p>"},{"location":"topicguides/voltformula/vfcodingpractices.html","title":"VoltFormula useful tips and information","text":""},{"location":"topicguides/voltformula/vfcodingpractices.html#accessing-data-from-ui-context-versus-database-context","title":"Accessing data from UI context versus database context","text":""},{"location":"topicguides/voltformula/vfcodingpractices.html#how-does-voltformula-address-database-fields-vs-form-fields-dom-elements","title":"How does VoltFormula address Database Fields vs Form Fields DOM elements?","text":"<p>In Domino, the field data of a form field is directly and automatically tied to the database. Changing the value of the field in the UI changes the value in the database when the form is saved. In Volt Iris, a field on a form in the UI isn't directly tied to the back end by default.</p> <p>For VoltFormula, the API implementations of <code>@GetField</code> and <code>@SetField</code> Notes Formula functions address the specified field as a database field or UI form field by default, such as setting API context to 'all' by default, with the latter one overriding the database field value if applicable. For <code>@GetField</code> and <code>@SetField</code> to be strict with the database fields, one must set the context to db, such as <code>@Context(\"db\");</code>, since the default is to try to get it from all sources: the database first, then the UI second, and if the UI exists, the database value is ignored.</p> <p>Examples</p> <ul> <li> <p>To access data from the database field and then from the UI form field if it exists:</p> <p>Formula:</p> <pre><code>```\n@Context(\"all\");  &lt;-- optional, as `all` is already the default context\n@GetField(\"Foo\");\n```\n</code></pre> <p>JavaScript:</p> <pre><code>```javascript\nvoltmx.rosettajs.VoltFormula.context(\"local\"); // optional, as `all` is already the default context\nvoltmx.rosettajs.Document.getField(\"Foo\");\n```\n</code></pre> </li> <li> <p>To access data from the UI form fields only:</p> <p>Formula:</p> <pre><code>@Context(\"local\");\n@GetField(\"Foo\");\n</code></pre> <p>JavaScript:</p> <pre><code>voltmx.rosettajs.VoltFormula.context(\"local\");\nvoltmx.rosettajs.Document.getField(\"Foo\");\n</code></pre> </li> <li> <p>To access data from the database fields only:</p> <p>Formula:</p> <pre><code>@Context(\"db\");\n@GetField(\"Foo\");\n</code></pre> <p>JavaScript:</p> <pre><code>voltmx.rosettajs.VoltFormula.context(\"db\");\nvoltmx.rosettajs.Document.getField(\"Foo\");\n</code></pre> </li> </ul>"},{"location":"topicguides/voltformula/vfcodingpractices.html#formulas","title":"Formulas","text":""},{"location":"topicguides/voltformula/vfcodingpractices.html#mixing-formula-languages-with-other-languages","title":"Mixing formula languages with other languages","text":"<p>The Rosetta Converter can process formula language mixed with other language artifacts by making use of the allowPassthrough option. This way, a formula snippet of code can be augmented with other code, such as JavaScript, to have the resulting converted code combine the different languages for a desired result. For more information, see Using JSP style syntax and allowPassthrough option in Rosetta Converter configuration options.</p>"},{"location":"topicguides/voltformula/vfcodingpractices.html#how-does-voltformula-maintain-project-formulas","title":"How does VoltFormula maintain project formulas?","text":"<p>Every JavaScript snippet created from a formula conversion process is tracked in Volt Iris via a formula ID formatted as <code>@formula_&lt;unid&gt;</code>.</p> <p>Example: <code>@formula_1714617343910.3508708517553434</code></p> <p>When the formula code is changed on the JavaScript side for a given formula result, Volt Iris tracks it as a discrepancy between the formula code and the JavaScript code. If the developer attempts to edit the formula language after making changes to the corresponding formula JavaScript code, Volt Iris warns about the formula discrepancy. The developer has the option to either restore the JavaScript code to the original formula or view the formula without altering the JavaScript counterpart.</p> <p>In a Volt Iris project, the formulas defined are stored under <code>resources/rosetta</code> in the project directory in the Volt Iris workspace. These files aren't exposed in the Volt Iris UI project files.</p>"},{"location":"topicguides/voltformula/rosetta/index.html","title":"Rosetta APIs","text":"<p>Provides a list of Rosetta APIs that require additional considerations in their implementations. Kindly select each API to learn more.</p> <ul> <li>Compose()</li> <li>MailSend()</li> <li>RestfulAPI()</li> </ul>"},{"location":"topicguides/voltformula/rosetta/compose.html","title":"Compose()","text":""},{"location":"topicguides/voltformula/rosetta/compose.html#overview","title":"Overview","text":"<p><code>compose(serverDatabase, formName)</code> is used to compose a new form document in memory. <code>fileSave()</code> is then used to persist the document to the Notes DB.</p> <p>Before <code>compose()</code> can be called, the Notes DB needs to be opened using <code>fileOpenDatabase(serverDatabase, viewName)</code>. The <code>serverDatabase</code> corresponds to the name of the database where you want to create the document. For Volt MX Go, this is the name of the Object Service. For the Domino REST API, this is the name of the scope.</p>"},{"location":"topicguides/voltformula/rosetta/compose.html#using-compose","title":"Using <code>compose()</code>","text":"<p>An example of using <code>compose()</code> is in a phonebook application, which presents a list of phonebook entries. A new entry can be added by clicking New Person.</p> <p></p> <p>The New Person button has an <code>onClick</code> event that triggers the following code:</p> <p></p> <p><code>fileOpenDatabase()</code> is first called to open the database using the object service that uses the Domino Adapter to access the Notes DB. If <code>fileOpenDatabase()</code> succeeds, then <code>success</code> is called. <code>compose()</code> is then called to create the in-memory document. If its successful, the current document, which is the newly composed document, is retrieved. A local object is then used when navigating back to the <code>PersonController</code>. The object contains a <code>newDoc</code> property and the <code>unid</code> property.</p> <p>The <code>PersonController</code> then displays a user interface where a user can fill in field values, and then click Save.</p> <p></p> <p>The Save button has an <code>onClick</code> event that triggers the following code:</p> <p></p> <p><code>SaveForm</code> is called in the <code>PersonController</code> to save the document to the server using <code>fileSave()</code>. The field values are taken from the user interface fields in the form and stored into the fields in the Notes document before saving.</p>"},{"location":"topicguides/voltformula/rosetta/mailsend.html","title":"MailSend()","text":"<p>In the Volt MX framework, the Volt Foundry Email Adapter Integration Service enables email sending. The Email Adapter uses the Volt Foundry Engagement Server to send the email.</p> <p>The <code>MailSend()</code> API for Volt MX requires the name of the Volt Foundry Email Adapter Integration Service to make the send email request. <code>API.setEmailService</code> can be used to set the Email Adapter service name that Rosetta can use. If the Email Adapter service name isn't set, the default <code>RosettaEmailService</code> name will be used.</p> <p>To use <code>MailSend()</code>, the database needs to be open, and a document needs to be selected. It's up to the user to configure the Volt Foundry Email Adapter Integration Service and the Volt Foundry Engagement server. For more information on configuring an Integration Service and an Engagement server, see the Volt MX documentation .</p>"},{"location":"topicguides/voltformula/rosetta/restapi.html","title":"RestfulAPI()","text":""},{"location":"topicguides/voltformula/rosetta/restapi.html#overview","title":"Overview","text":"<p><code>RestfulAPI</code> is a generic RESTful API that enables users to interact with any REST endpoint by providing configurable parameters such as the endpoint URL, HTTP method (for example, GET, POST, PUT, DELETE), headers, request body, and additional request parameters. It acts as a flexible interface for making HTTP requests to external services or APIs, enabling seamless integration without being tied to a specific implementation or service.</p> <p><code>RestfulAPI</code> is a custom formula API that's not a Notes or OpenFormula function. However, it follows the Notes syntax convention when used as a formula.</p>"},{"location":"topicguides/voltformula/rosetta/restapi.html#definition","title":"Definition","text":"<pre><code>export const RestfulAPI = async (\n\u2003 url: string,\n\u2003 method = 'GET',\n\u2003 headers = '{}',\n\u2003 body: string | null = null,\n\u2003 additionalRequestParams: string | null = null\n): Promise =&gt; {...}\n</code></pre> <p>Where:</p> <ul> <li><code>@param {string} url</code> - The URL of the REST service.</li> <li><code>@param {string} method</code> - The HTTP method, like GET, POST, PUT, DELETE.</li> <li><code>@param {string} headers</code> - Optional headers to include in the request as a JSON string.</li> <li><code>@param {string} body</code> - Optional body for POST, PUT, or PATCH requests as a JSON string.</li> <li><code>@param {string} additionalRequestParams</code> - Optional additional request parameters as a JSON string.</li> <li><code>@returns {Promise}</code> - A promise that resolves to the response data or rejects with an error.</li> </ul>"},{"location":"topicguides/voltformula/rosetta/restapi.html#example","title":"Example","text":"<p>To call the DRAPI REST API to authorize and return a bearer token</p> <pre><code>const authUrl = 'https://keep-server/api/v1/auth';\\ const authHeaders = '{ \"accept\": \"application/json\", \"Content-Type\": \"application/json\" }';\nlet authBody = '{ \"username\": \"abc\", \"password\": \"xyz\" }';\n\nconst authResponse = await RestfulAPI(authUrl, 'POST', authHeaders, authBody);\n</code></pre> <p>To call the DRAPI REST API to retrieve a list of views and forms from a database</p> <p>Note</p> <p>In this example, the used database is the testdiscussions database.</p> <pre><code>const apiUrl = 'https://keep-server/api/v1/lists?type=all&amp;dataSource=testdiscussions';\\ const apiHeaders = '{ \"Authorization\": \"Bearer ' + authResponse.bearer + '\" }';\n\nconst apiResponse = await rosetta.restfulAPI(apiUrl, 'GET', apiHeaders);\nconsole.log(apiResponse);\n</code></pre>"},{"location":"topicguides/voltformula/rosetta/restapi.html#restrictions","title":"Restrictions","text":"<ul> <li>The <code>RestfulAPI</code> doesn't automatically refresh authorization tokens when they expire.</li> <li>Converters field handling within parameters must be disabled in the configuration settings to allow response values, such as the bearer token, to be used in subsequent calls.</li> <li>Setting a string value for the <code>headers</code>, <code>body</code>, and <code>additionalRequestParams</code> must follow a specific convention. The outer quote characters are single quotes and the inner quote characters are double quotes.</li> </ul>"},{"location":"tutorials/index.html","title":"Tutorials","text":"<p>The tutorials introduce you to Volt MX Go and the complete cycle of using its components. Complete the training and webinars and try Volt MX Go in a sandbox environment to learn how to modernize your Domino applications.</p> <ul> <li> <p>Install and upgrade</p> </li> <li> <p>First Touch tutorial</p> </li> <li> <p>Domino Adapter tutorial</p> </li> <li> <p>Design Import tutorial</p> </li> <li> <p>VoltFormula tutorial</p> </li> <li> <p>Apache CouchDB Adapter tutorial</p> </li> <li> <p>Trainings and webinars</p> </li> <li> <p>Video tutorials and demonstrations</p> </li> </ul>"},{"location":"tutorials/adaptertutorial.html","title":"Domino Adapter tutorial","text":""},{"location":"tutorials/adaptertutorial.html#about-this-task","title":"About this task","text":"<p>The tutorial guides you through the Domino Adapter process in Volt MX Go. You will create an app in Volt Foundry and connect the app to your Domino database as an endpoint via the Domino REST API. You will then configure a data model and test the methods, including standard CRUD operations, for interacting with the data model.</p> <p>For more information, see Data models and Methods.  </p> <p>At the end of this tutorial, you can manually create an app in Volt Foundry and create an Identity Service and Object Service to connect your app to your Domino database via Domino REST API. You will also be able to test the methods for interacting with the data model.</p>"},{"location":"tutorials/adaptertutorial.html#before-you-begin","title":"Before you begin","text":"<p>Before starting this tutorial, you must meet prerequisites based on the situational scenario that applies to you:</p> <ul> <li>The All access scenario is for a user with all the necessary access rights to install and configure Volt MX Go and with the correct access to all required Domino databases and the Domino REST API.</li> <li>The Limited access scenario is for a user who is most likely a Volt Foundry Administrator that doesn't have all the necessary access to all the required Domino databases and the Domino REST API. In this case, you must coordinate with a Domino/Domino REST API administrator to obtain the required access and fulfill other requirements.</li> </ul> <p>Kindly follow and complete the prerequisites that apply to your situation.</p> All access scenarioLimited access scenario <p>Volt MX Go prerequisites</p> <ul> <li> <p>You have completed the Volt MX Go installation.</p> </li> <li> <p>You have a Volt Foundry admin account.</p> </li> </ul> <p>Domino/Domino REST API prerequisites</p> <p>Tip</p> <p>Contact your Domino administrator/Domino REST API administrator for any needed assistance.</p> <ul> <li>You have set up Domino REST API in the Domino server containing the Domino database you are importing.</li> <li>You have at least Designer access to the Domino database where you are creating or updating a schema.</li> <li>You have at least an Editor access to the Domino Keep Configuration database <code>keepconfig.nsf</code> to create a scope and OAuth application for the Domino application.</li> <li> <p>You have the correct access level to the Domino database to test the CRUD operations.</p> <p>For more information on access levels, see Access Levels in the ACL  in the HCL Domino documentation </p> </li> <li> <p>You have accessed Domino REST API</p> </li> <li> <p>You have configured a schema, activated the forms of the schema, and added a <code>dql</code> mode having similar fields to the <code>default</code> mode to each activated form. For more information, see Schema Management .</p> </li> <li> <p>You have configured a scope for your schema. For more information, see Scope Management .</p> </li> <li> <p>You have created an OAuth application :</p> <ul> <li>having your configured scope added to the Scope field.</li> <li>having a placeholder callback URL that you will replace with the callback URL from the Identity Service you will create.</li> </ul> </li> <li> <p>You have taken note of the Domino REST API URL, and the App ID and App Secret  of the OAuth application</p> </li> </ul> <p>Volt MX Go prerequisites</p> <ul> <li> <p>You have completed the Volt MX Go installation.</p> </li> <li> <p>You have a Volt Foundry admin account.</p> </li> </ul> <p>Domino/Domino REST API prerequisites</p> <ul> <li> <p>You have contacted the Domino/Domino REST API administrator to:</p> <ul> <li>ensure you have at least Designer access to the Domino database you will be accessing</li> <li>ensure you have the correct access level to the Domino database to test the CRUD operations.</li> <li>configure a schema for the Domino database that you will be using with:<ul> <li>All necessary forms:<ul> <li>having active status </li> <li>having a <code>default</code> mode and a <code>dql</code> mode, and both modes having matching fields </li> </ul> </li> <li>All necessary views having active status</li> <li>All necessary agents having active status</li> </ul> </li> <li>configure a scope or scopes for your schema</li> <li> <p>create an OAuth application:</p> <ul> <li>having your configured scope or scopes and <code>$SETUP</code> added to the Scope field.</li> <li>having a placeholder callback URL that will be replaced with the callback URL from the Identity Service you will configure later in this tutorial</li> </ul> </li> <li> <p>provide you with Domino REST API URL, and the Client ID and Client Secret of the OAuth application.</p> </li> </ul> </li> </ul>"},{"location":"tutorials/adaptertutorial.html#log-in-to-volt-foundry","title":"Log in to Volt Foundry","text":"<ol> <li> <p>Open the Volt Foundry hostname concatenated with <code>/mfconsole/</code> in your browser.</p> <p>Tip</p> <p>Use the Console URL in the Install Complete window or from the Installation Complete details that appear in the command line to log in to Volt Foundry.</p> </li> <li> <p>Enter your username and password on the\u00a0Sign in to your account\u00a0page.</p> </li> <li>Click\u00a0Sign In.\u00a0\u00a0</li> </ol> <p>The Volt MX Foundry Console opens with the Apps page shown by default.\u00a0</p>"},{"location":"tutorials/adaptertutorial.html#create-an-app-in-volt-foundry","title":"Create an app in Volt Foundry","text":"<ol> <li>On the Apps page, click Add New.</li> <li>A new app is added, and you are directed to the Configure Services \u2192 Identity page of the new app. </li> <li>Click the Edit App Name icon to give a unique name to your app.</li> </ol> <p>Tip</p> <p>For more information, see How to Add Applications  in the HCL Volt MX documentation. </p>"},{"location":"tutorials/adaptertutorial.html#configure-an-identity-service","title":"Configure an Identity service","text":"<ol> <li>On the Identity page, click Configure New.</li> <li>Enter a name for the identity service in the Name text box.</li> <li>From the Type of Identity drop-down list, select <code>OAuth2.0</code>.</li> <li> <p>Under Provider Details:</p> <ol> <li>Select <code>Authorization Code</code> in the Grant Type dropdown list.</li> <li> <p>Enter the Domino REST API server URL concatenated with <code>/oauth/authorization</code> in the Authorize Endpoint field.</p> <p>Example: <code>[Domino REST API server URL]/oauth/authorization</code></p> </li> <li> <p>Enter the Domino REST API server URL concatenated with <code>/oauth/token</code> in the Token Endpoint field.</p> <p>Example: <code>[Domino REST API server URL]/oauth/token</code></p> </li> <li> <p>In the Callback URL text box, click Copy.</p> <p>You need to save the copied callback URL and use it to update the placeholder callback URL in the OAuth app in Domino REST API.</p> </li> <li> <p>Enter the name of the scope, configured in the OAuth application in the Domino REST API, in the Scope text box.</p> <p>Important</p> <p>Make sure that the name of the scope you enter in the Scope text box matches the name of the scope that's configured in the OAuth app in Domino REST API. </p> </li> </ol> <p></p> </li> <li> <p>Under Client Details:</p> <ol> <li>Select Basic authentication as the Client Assertion Type.</li> <li>Enter the App ID of the OAuth app in Domino REST API in the Client ID text box.</li> <li>Enter the App Secret of the OAuth app in Domino REST API in the Client Secret text box.</li> </ol> <p>Tip</p> <p>The App ID and App Secret are generated when an OAuth app is added on Domino REST API. For more information, see Application Management  in the Domino REST API documentation.  </p> </li> <li> <p>Under Advanced:</p> <ol> <li>Select Form Param as the Client Authentication Scheme.</li> <li>Use the default for the rest of the settings.</li> </ol> </li> <li> <p>Click Save.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#update-callback-url-of-oauth-app-in-domino-rest-api","title":"Update callback URL of OAuth app in Domino REST API","text":"All access scenarioLimited access scenario <ol> <li>Log in to Domino REST API.</li> <li>Select Application Management \u2013 OAUTH from the home page or Applications from the side navigation pane to access the Application Management page.</li> <li>Click the Edit Application icon corresponding to your OAuth app.</li> <li>Update the Callback URLs field with the callback URL you copied from your Identity Service.</li> <li>Click Update.</li> <li>Close Domino REST API.</li> </ol> <ol> <li>Send the copied callback URL to the Domino REST API administrator and request to update the callback URL of the OAuth app.</li> <li>Get confirmation that the callback URL of the OAuth app is already updated before proceeding with verifying your Identity Service.  </li> </ol>"},{"location":"tutorials/adaptertutorial.html#verify-if-configured-identity-service-works","title":"Verify if configured Identity service works","text":"<p>Note</p> <p>Ensure the callback URL in the OAuth app you are using has been updated before performing this procedure.</p> <ol> <li>Log in to Volt Foundry.</li> <li>On the Apps page, click your Volt Foundry app.</li> <li>On the Identity tab under Configure Services, click your Identity Service.</li> <li>Click Test Login to verify if the configured Identity service works. <ul> <li>If the configuration works, you might need to enter your Domino credentials in the HCL Domino Login dialog and click Login. In the Permission Requested dialog, click Allow. You might also only see the Permission Requested dialog without needing to enter anything.  </li> <li>If the configuration doesn't work, an error message is shown.</li> </ul> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#add-an-environment","title":"Add an environment","text":"<ol> <li>On the left pane on the Volt MX Foundry Console, click Environments.</li> <li>On the Environments page, click Add New. The Add a New Environment dialog opens.</li> <li> <p>In the Environment Name text box, enter an environment name.</p> <p>Note</p> <p>Your environment name can only contain letters, numbers, and hyphens (-). A hyphen can't appear at the beginning or at the end of a name. A number can't appear at the beginning of a name. A name should be a minimum of three characters and a maximum of 20 characters long.</p> </li> <li> <p>On the Server tab, enter the URL of your Volt Foundry in the URL text box.     The URL format is: <code>&lt;http or https&gt;://&lt;server_host&gt;:&lt;server_port&gt;</code></p> <p>For example: <code>http://mbaastest30.hcl.net:53504</code></p> </li> <li> <p>Click Test Connection to verify that the entered URL is correct. If the test is successful, a check mark appears beside the Server tab.</p> </li> <li> <p>Click Save.</p> <p></p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#configure-an-object-service-for-domino","title":"Configure an object service for Domino","text":"<ol> <li>In the left pane on the Volt MX Foundry Console, click Apps.</li> <li>On the Apps page, select the app you created.</li> <li>Go to Configure Services \u2192 Objects, and then click Configure New.</li> <li>Enter the object service name in the Name text field. For example, <code>EmployeeModelSchema</code>.</li> <li>Select HCL Domino under Business Adapters for the Endpoint Type.</li> <li> <p>Set the Metadata Security Level to Authenticated App Users to restrict the download of object service metadata to users that have successfully authenticated using the Identity Service.</p> <p></p> </li> <li> <p>Under Connection Parameters:</p> <ol> <li>Enter the Domino REST API server URL in the Domino REST API Base URL text field.</li> <li> <p>Enter a value in the Connection Timeout text field. By default, the value is set to 30 ms.</p> <p>Note</p> <p>The Connection Timeout is the period for waiting for a new connection to happen before aborting the connection attempt, and is in milliseconds.</p> </li> <li> <p>Enter true or false in the Return documents from Bulk Update text field. By default, the value is set to true.</p> <p>Note</p> <p>Entering true in the Return documents from Bulk Update text field ensures the return of documents updated using the BULK UPDATE method. For more information, see Methods.</p> </li> </ol> <p>Tip</p> <p>To test the connection parameters, select the environment you added from the Select an Environment drop-down list and then click Test Connection. You will see a Connection Successful message if the configured connection parameters are correct.</p> </li> <li> <p>Under Authentication:</p> <ol> <li>Select the Use Existing Identity Provider radio button.</li> <li>Select the identity service you configured in the drop-down list.</li> </ol> <p>Tip</p> <p>Click Test Login to test the authentication. If the configuration works, you might need to enter your Domino REST API administrator username and password in the  Domino REST API login dialog and then click Allow in the Domino REST API Access consent required dialog. You might also only see the Permission Requested dialog without needing to enter anything. A Test Login Successful message is then displayed.</p> <p></p> </li> <li> <p>Click Save and Configure.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#generate-a-data-model","title":"Generate a data model","text":"<ol> <li>On the Data Model tab, click Generate.</li> <li>In the Domino REST API Access consent required dialog, click Allow. The Import Objects from Backend dialog appears.</li> <li> <p>Expand the scope, Forms, View Entities, and Other Metadata.</p> <p></p> <p>Tip</p> <p>Use the Other Metadata in cases where you want to request Domino information not included in Domino data documents but still necessary for creating a Domino application in Volt MX Go. For more information, see Other Metadata.</p> </li> <li> <p>Select the checkboxes corresponding to the forms and view entities you want to import.</p> </li> <li> <p>Click Next. The BACKEND OBJECT NAME and DATA MODEL OBJECT NAME of the selected forms and view entities are shown.</p> <p>Tip</p> <ul> <li>You can change the data model object names of the selected forms and view entities.</li> <li>For more information on naming limitations, see Known limitations.</li> </ul> <p>The example image shows the data model object names after being renamed. It also shows the <code>UserInfo</code>, which is an Other Metadata.</p> <p></p> </li> <li> <p>Click Generate. The forms and view entities are now added to the Data Model.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#test-methods-for-interacting-with-the-data-model","title":"Test methods for interacting with the data model","text":"<p>The following produres enable you to test the different methods for interacting with the configured data model.</p> <p>Note</p> <p>There are some special characters that you cannot use as string values when performing the methods for interacting with the data models. For more information, see Special characters. </p>"},{"location":"tutorials/adaptertutorial.html#test-the-get-method-by-viewing-a-record","title":"Test the GET method by viewing a record","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click GET.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li> <p>Click Send.</p> <p>All records are displayed on the Response console.</p> </li> <li> <p>Click Save after viewing.</p> </li> </ol> <p>To view a filtered record</p> <ol> <li>Expand the base mapper1, and then select the Test tab.</li> <li> <p>Enter a query parameter in the Enter the Query Params text box.</p> <p></p> </li> <li> <p>Click Send.</p> <p>The record is displayed on the Response console.</p> </li> <li> <p>Click Save after viewing.</p> </li> </ol> <p>For more information on supported parameters, see Supported OData query parameters for form-based GET method and Supported OData query parameters for view-based GET method.</p>"},{"location":"tutorials/adaptertutorial.html#test-the-post-method-by-creating-a-record","title":"Test the POST method by creating a record","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click POST.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li>In the Request Payload, the fields of the data model should be displaying.</li> <li> <p>Beside the fields, input the values, then click Send.</p> <p>The ID of the record is displayed on the Response console after the successful insertion of the record.</p> <p>Tip</p> <p>Save the ID for updating or deleting the record using PUT or DELETE method, respectively.</p> </li> <li> <p>Click Save after viewing.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#test-the-put-method-by-updating-a-record","title":"Test the PUT method by updating a record","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click PUT.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li>In the Request Payload, the fields of the data model should be displaying.</li> <li> <p>Beside the fields, input the updated values, then click Send.</p> <p>Note</p> <p>All fields, updated or not, must be specified to maintain the fields in the note after the update. </p> <p></p> <p>The Response console shows the fields with updated values and the number of updated records.</p> <p></p> </li> <li> <p>Click Save after viewing.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#test-the-delete-method-by-deleting-a-record","title":"Test the DELETE method by deleting a record","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click DELETE.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li>In the Request Payload, the field of the data model should be displaying.</li> <li> <p>Beside the field, input the ID of the record to be deleted, then click Send.</p> <p></p> <p>The Response console shows the number of deleted records.</p> <p></p> </li> <li> <p>Click Save after viewing.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#test-the-patch-method-by-updating-a-record","title":"Test the PATCH method by updating a record","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click PATCH.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li>In the Request Payload, the fields of the data model should be displaying.</li> <li> <p>Beside the fields, input the updated values, then click Send.</p> <p></p> <p>The Response console shows the fields with updated values and the number of updated records.</p> <p></p> </li> <li> <p>Click Save after viewing.</p> </li> </ol>"},{"location":"tutorials/adaptertutorial.html#test-the-bulk-update-method-for-updating-a-collection-of-records","title":"Test the BULK UPDATE method for updating a collection of records","text":"<ol> <li>Click the Mapping tab, and then click the expand icon corresponding to a data model name to display a list of available methods.</li> <li>From the list, click BULK UPDATE.</li> <li>Expand the base mapper1, and then select the Test tab.</li> <li> <p>Enter a <code>$filter</code> ODATA query parameter in the Enter the Query Params text box.</p> <p>Important</p> <p>You must use the $filter ODATA query parameter to tell Domino REST API which documents to update. Otherwise, an error occurs.</p> <p>In the following example image, <code>$filter=Subject eq \u2018old subject\u2019</code> is used as the ODATA query parameter.</p> <p></p> </li> <li> <p>In the Request Payload, specify the field to update and the updated value, and then click Send.</p> <p>The Response console shows all the documents with the specified field having the updated value. As shown in the example image, <code>Subject</code> is the updated field with an updated value of <code>new subject</code>.</p> <p></p> </li> <li> <p>Click Save after viewing.</p> </li> </ol>"},{"location":"tutorials/couch.html","title":"Apache CouchDB Adapter tutorial","text":""},{"location":"tutorials/couch.html#about-this-task","title":"About this task","text":"<p>This tutorial guides you through the process of using the Apache CouchDB<sup>1</sup> Adapter in Volt MX Go. You will learn how to configure an object service for Apache CouchDB, generate a data model, review and adjust field mappings and HTTP methods, and test these methods for interacting with the data model.</p> <p>By the end of this tutorial, you will be able to configure an Apache CouchDB object service, including generating the data model, modifying field mappings as needed, and testing the supported methods to effectively interact with the data model.</p>"},{"location":"tutorials/couch.html#before-you-begin","title":"Before you begin","text":"<ul> <li>You have an active CouchDB instance, and your Volt Foundry server is able to connect to the CouchDB host via HTTP/HTTPS.</li> <li> <p>Within your Volt Foundry server, a test environment is already defined. It will be used for API testing, as will be described in the latter part of this tutorial.</p> <p>For more information on creating a test environment, see Add an environment.</p> </li> </ul>"},{"location":"tutorials/couch.html#assumptions","title":"Assumptions","text":"<p>Before starting this tutorial, review the following assumptions to make sure you can follow the procedures.</p> <p>For the purpose of this tutorial, it's assumed that:</p> <ul> <li> <p>You already have a test environment set up. The name of the test environment in the following procedures is going to be referred to as localdevenv.</p> </li> <li> <p>You have a CouchDB database hosted on a machine.</p> <p>In the following procedures, the CouchDB database is named population and it's hosted on a machine with the hostname couchdb.</p> <p>The population database contains data on the populations of cities across multiple continents, including Asia, Africa, and North America. A sample document in this database looks like the following:</p> <pre><code>{\n\"_id\": \"11381c61-b182-4fed-bd1b-6453a24c6b8b\",\n\"_rev\": \"6-5bdb9d619b82cb45db1d656c849c5c6c\",\n\"continent\": \"AS\",\n\"country\": \"China\",\n\"name\": \"Beijing\",\n\"population\": 513,\n\"censusdate\": \"2023-10-15T00:00:00Z\",\n\"grads\": 100,\n\"phds\": 50\n}\n</code></pre> </li> <li> <p>The population database includes fives views named:</p> <ul> <li>african_cities</li> <li>all_cities</li> <li>asian_cities</li> <li>eu_cities</li> <li>north_american_cities</li> </ul> <p>For example, the african_cities view uses the following map function to filter what documents should show up.</p> <pre><code>function (doc) { \n    if (doc.continent === 'AF') \n        emit(doc.country, doc.name, doc.population);\n}\n</code></pre> <p>The asian_cities view has the following map function:</p> <pre><code>function (doc) { \n    if (doc.continent === 'AS') \n        emit(doc.country, doc.name, doc.population); \n}    \n</code></pre> </li> </ul>"},{"location":"tutorials/couch.html#log-in-to-volt-foundry","title":"Log in to Volt Foundry","text":"<ol> <li> <p>Open your browser and navigate to the Volt Foundry hostname followed by <code>/mfconsole/</code>.</p> <p>Tip</p> <p>Use the Console URL provided in the Install Complete window or from the Installation Complete details displayed in the command line to access Volt Foundry.</p> </li> <li> <p>On the Sign in to your account page, enter your username and password.</p> </li> <li>Click\u00a0Sign In.\u00a0\u00a0</li> </ol> <p>The Volt MX Foundry Console opens, displaying the Apps page by default.</p>"},{"location":"tutorials/couch.html#configure-an-object-service-for-apache-couchdb","title":"Configure an object service for Apache CouchDB","text":"<ol> <li>In the left pane of the Volt MX Foundry Console, click API Management.</li> <li>On the APIs page, navigate to Objects, then click Configure New.</li> <li>Enter the object service name in the Name text field.</li> <li>From the Business Adapters options under Endpoint Type, select Apache CouchDB.</li> <li>Set the Metadata Security Level to Authenticated App Users.</li> <li> <p>Under Connection Parameters:</p> <ol> <li> <p>Enter the host name and port where the CouchDB instance is hosted in the CouchDB host URI and Port text fields.</p> <p>Note</p> <p>Cluster is not yet supported.</p> </li> <li> <p>Enter your CouchDB credentials in the User name and Password text fields.</p> </li> <li>Click Test Connection to verify the connection.</li> </ol> <p>Tip</p> <ul> <li>Ensure you select the environment you added before clicking Test Connection. </li> <li>If the test fails, double-check and update the connection parameters as needed.</li> </ul> </li> <li> <p>Click Save and Configure.</p> </li> </ol> <p>Note</p> <p>The Apache CouchDB adapter communicates with the CouchDB instance using CouchDB\u2019s RESTful HTTP/HTTPS API. For proper functionality, the HTTP or HTTPS traffic must be allowed between the Volt Foundry server and the CouchDB instance.</p>"},{"location":"tutorials/couch.html#generate-a-data-model","title":"Generate a data model","text":"<ol> <li> <p>On the Data Model tab, click Generate.</p> <p></p> <p>The Import Objects from Backend dialog appears, displaying the CouchDB databases. In the example image, heroes_registry, population, super_docs, and support_tickets are CouchDB databases. Expanding a database reveals a subset of objects available for import.</p> <p></p> </li> <li> <p>Expand Views and select the checkbox next to the view you want to import. You can import one or multiple views from the same or different databases.</p> <p></p> </li> <li> <p>Click Next. The BACKEND OBJECT NAME and DATA MODEL OBJECT NAME of the selected view or views are shown.</p> <p></p> <p>Tip</p> <p>You can modify the data model object names for the selected views.</p> </li> <li> <p>Click Generate. The selected view or views are added to the Data Model.</p> <p></p> <p>Tip</p> <p>If you need to add more views, click Generate and repeat the steps.</p> </li> <li> <p>Expand a view and then click Fields to see the inferred schema for documents in that view.</p> <p>The schema is infered from the first document in the view. Ensure that at least one document exists in the view with a complete set of fields and proper data integrity to guarantee an accurate inferred schema.</p> <p></p> </li> <li> <p>Modify fields or field types as needed, then click Save.</p> <p>Warning</p> <p>Don't change the field names ending with <code>_id</code> and <code>_rev</code>, as these are reserved system fields maintained by CouchDB.</p> </li> </ol>"},{"location":"tutorials/couch.html#check-the-mapping-and-methods","title":"Check the mapping and methods","text":"<ol> <li> <p>Click the Mapping tab, then select the view, named african_cities as shown in the example image. The Common Mapping tab appears, allowing you to map fields between Volt Foundry and CouchDB. The default mapping suits most cases.</p> <p></p> </li> <li> <p>Click the Methods tab to view a list of HTTP methods available for the object model. In the example image, the GET, POST, PUT, and DELETE methods can be executed.</p> <p></p> <p>To disable a method, select its checkbox and click Delete.</p> Method description <ul> <li>GET: Retrieves all documents in the view. </li> <li>POST: Creates a new document in the view. CouchDB views have selection criteria, so the new document must meet those to appear. For example, in african_cities view, the new document must represent an African city to be included.</li> <li>PUT: Updates an existing document. </li> <li>DELETE: Deletes an existing document. </li> </ul> </li> </ol>"},{"location":"tutorials/couch.html#test-the-methods","title":"Test the methods","text":""},{"location":"tutorials/couch.html#test-the-get-method","title":"Test the GET method","text":"<ol> <li>On the Mapping tab, expand the view and click GET.</li> <li>Expand the base mapper1, then select the Test tab.</li> <li> <p>Click Send.</p> <p>All documents from the view are retrieved and displayed in the Response console. Using the african_cities view as an example, a sample response looks like this:</p> <p></p> </li> </ol>"},{"location":"tutorials/couch.html#test-the-post-method","title":"Test the POST method","text":"<ol> <li>On the Mapping tab, expand the view and click POST.</li> <li> <p>Expand the base mapper1, then select the Test tab.</p> <p>The Request Payload with the appropriate schema is displayed.</p> <p></p> </li> <li> <p>Fill in all fields with appropriate values, except for <code>x_0040_id</code> and <code>x_0040_rev</code> fields. CouchDB automatically generates values for these system fields when creating the new document.  </p> <p>Example request payload:</p> <pre><code>{\n\"censusdate\": \"2023-12-31T00:00:00Z\",\n\"continent\": \"AF\",\n\"country\": \"Egypt\",\n\"grads\": 150000,\n\"infants\": 80000,\n\"name\": \"Cairo\",\n\"phds\": 5000,\n\"population\": 9900000,\n\"x_0040_id\": \"\",\n\"x_0040_rev\": \"\"\n}\n</code></pre> </li> <li> <p>Click Send to create the new document.</p> </li> </ol>"},{"location":"tutorials/couch.html#test-the-put-method","title":"Test the PUT method","text":"<ol> <li>On the Mapping tab, expand the view and click PUT.</li> <li> <p>Expand the base mapper1, then select the Test tab.</p> <p>The Request Payload with the appropriate schema is displayed.</p> </li> <li> <p>Enter the updated values for the fields you want to update.</p> </li> <li>Click Send to update the documents.</li> </ol>"},{"location":"tutorials/couch.html#test-the-delete-method","title":"Test the DELETE method","text":"<ol> <li>On the Mapping tab, expand the view and click DELETE.</li> <li>Expand the base mapper1, then select the Test tab.</li> <li> <p>In the Request Payload, enter the <code>x_0040_id</code> and <code>x_0040_rev</code> fields with their appropriate values corresponding to the document you want to delete.</p> <p>Example request payload:</p> <pre><code>{\n\u201cx_0040_id\u201d: \u201c&lt;appropriate id&gt;\u201d,\n\u201cx_0040_rev\u201d: \u201c&lt;appropriate rev&gt;\u201d\n}\n</code></pre> </li> <li> <p>Click Send to delete the document.</p> </li> </ol> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"tutorials/designimport.html","title":"Design Import tutorial","text":"<p>Important</p> <p>The information in this document is based on the latest version of HCL Volt MX Go, HCL Domino REST API, and HCL Domino.</p>"},{"location":"tutorials/designimport.html#about-this-task","title":"About this task","text":"<p>The tutorial guides you through the Design Import process in Volt MX Go. You will create a project in Volt Iris and then run the Design Import Wizard to enable you to import Domino application forms, views, and agents, then build those forms and views within Volt Iris. You will also perform CRUD operations on the imported Domino application published via Volt Iris.  </p> <p>At the end of this tutorial, you will gain enough competence to use the Design Import Wizard to successfully import a Domino application.</p>"},{"location":"tutorials/designimport.html#before-you-begin","title":"Before you begin","text":"<p>Before starting this tutorial, you must meet prerequisites based on the situational scenario that applies to you:</p> <ul> <li>All access scenario is for a user with all the necessary access rights to install and configure Volt MX Go and with the correct access to all required Domino databases and the Domino REST API.</li> <li>Limited access scenario is for a user who is most likely a Volt Iris developer and doesn't have all the necessary access. In this case, you must coordinate with a Volt Foundry administrator and a Domino/Domino REST API administrator to obtain the required access and fulfill other requirements.</li> </ul> <p>Kindly follow and complete the prerequisites that apply to your situation.</p> All access scenarioLimited access scenario <p>Volt MX Go prerequisites</p> <ul> <li>You have completed the Volt MX Go installation.</li> <li>You have a Volt Foundry admin account. </li> <li>You have created an Environment in Volt Foundry. </li> </ul> <p>Domino/Domino REST API prerequisites</p> <p>Tip</p> <p>Contact your Domino administrator/Domino REST API administrator for any needed assistance.</p> <ul> <li>You have set up Domino REST API in the Domino server containing the Domino database you are importing.</li> <li> <p>You have at least Designer access to the Domino database where you are creating or updating a schema and to the Domino Keep Configuration database <code>keepconfig.nsf</code> to create a scope and OAuth application for the Domino application.</p> <p>For more information on access levels, see Access Levels in the ACL  in the HCL Domino documentation </p> </li> <li> <p>You have accessed Domino REST API.</p> </li> <li>You have configured a schema  with:<ul> <li>All necessary forms:<ul> <li>having active status </li> <li>including the <code>$FILES</code> field and having the Formula for Delete Access set to <code>@True</code>(see Change form configuration  for more information)</li> <li>having a default mode and a dql mode, and both modes having matching fields (see Clone a mode  and Compare modes  for more information) </li> </ul> </li> <li>All necessary views having active status </li> <li>All necessary agents having active status </li> </ul> </li> <li>You have configured a scope for your schema :<ul> <li>having a scope name not exceeding 15 characters, which can include alphanumeric characters and underscore \"_\" and hyphen \"-\" special characters</li> <li>having a Maximum Access Level set to Designer, Editor, or Manager</li> </ul> </li> <li> <p>You have created an OAuth application :</p> <ul> <li> <p>having your configured scope and <code>$SETUP</code> added to the Scope field.</p> <p>Tip</p> <p>If you want all the scopes in Domino REST API to be available to Design Import, just add <code>$DATA</code> and <code>$SETUP</code> to the Scope field.</p> </li> <li> <p>having a placeholder callback URL that you will replace with the callback URL from the Identity Service you will create using the Design Import Wizard </p> </li> </ul> </li> <li> <p>You have taken note of the Domino REST API URL, and the App ID and App Secret  of the OAuth application.</p> </li> </ul> <p>Tip</p> <p>Refer to the Domino REST API prerequisites for Design Import video in the Video tutorials section to learn more.</p> <p>Volt MX Go prerequisites</p> <ul> <li>You have completed the installation of Volt Iris.</li> <li>You have contacted the Volt Foundry administrator to:<ul> <li>have access to Volt Foundry </li> <li>have a Volt Foundry admin account</li> <li>have an Environment created in Volt Foundry in case there is none</li> </ul> </li> </ul> <p>Domino/Domino REST API prerequisites</p> <ul> <li> <p>You have contacted the Domino/Domino REST API administrator to:</p> <ul> <li>ensure you have at least Designer access to the Domino database you will be importing</li> <li>configure a schema for the Domino database that you will be importing with:<ul> <li>All necessary forms:<ul> <li>having active status </li> <li>including the <code>$FILES</code> field</li> <li>having the Formula for Delete Access set to <code>@True</code></li> <li>having a <code>default</code> mode and a <code>dql</code> mode, and both modes having matching fields </li> </ul> </li> <li>All necessary views having active status</li> <li>All necessary agents having active status</li> </ul> </li> <li> <p>configure a scope or scopes for your schema:</p> <ul> <li>having a scope name not exceeding 15 characters, which can include alphanumeric characters and underscore \"_\" and hyphen \"-\" special characters</li> <li>having a Maximum Access Level set to Designer, Editor, or Manager.</li> </ul> </li> <li> <p>create an OAuth application:</p> <ul> <li> <p>having your configured scope or scopes and <code>$SETUP</code> added to the Scope field.</p> <p>Tip</p> <p>If you want all the scopes in Domino REST API to be available to Design Import, just add <code>$DATA</code> and <code>$SETUP</code> to the Scope field. </p> </li> <li> <p>having a placeholder callback URL that will be replaced with the callback URL from the Identity Service you will create using the Design Import Wizard</p> </li> </ul> </li> <li> <p>provide you with Domino REST API URL, and the App ID and App Secret of the OAuth application.</p> </li> </ul> </li> </ul> <p>Tip</p> <p>Refer to the Domino REST API prerequisites for Design Import video in the Video tutorial section to learn more.</p>"},{"location":"tutorials/designimport.html#launch-volt-iris","title":"Launch Volt Iris","text":"<ol> <li> <p>Open Volt Iris. When the Sign-in to your account page appears, close it by clicking the Volt Iris home icon.</p> <p></p> </li> <li> <p>Configure the login settings.</p> <ol> <li> <p>Go to Preferences.</p> <p>For Windows, select Edit \u2192 Preferences.</p> <p>For Mac, depending on your macOS, select Volt Iris \u2192 Preferences or Settings.</p> </li> <li> <p>In the Volt Iris Preferences dialog, click Volt Foundry.</p> </li> <li> <p>On the Volt Foundry tab, enter your Volt Foundry URL in the Foundry URL text box, and then click Validate.</p> <p></p> <p>You should see the Validation Successful message at the top of the dialog. If you entered an incorrect Volt Foundry URL, you will see an error message at the top of the dialog advising you to try the validation again.</p> </li> <li> <p>Click Done.</p> </li> </ol> </li> <li> <p>Log in to Volt Iris.</p> <ol> <li>Click Login on the upper right corner of the Volt Iris screen.</li> <li>Enter your email and password for Volt Foundry on the Sign in to your account page.</li> <li>Click Sign In. Your username appears next to the profile icon.</li> </ol> </li> </ol>"},{"location":"tutorials/designimport.html#create-a-new-project","title":"Create a new project","text":"<p>In this tutorial, we will use a web app project. The following steps will enable you to create one. If you want to create a native app, see create a native app project for more information.  </p> <ol> <li>In the top menu, select Project \u2192 New Project.</li> <li> <p>In the What do you want to start with now? dialog, select Web App and click Next.</p> <p></p> </li> <li> <p>In the Which device size do you want to start building for first? dialog, select Desktop and click Next.</p> <p></p> </li> <li> <p>Enter your Project Name and click Create.  </p> <p></p> </li> </ol> <p>You can now see your project name in the upper-left corner of the Volt Iris UI.</p> <p></p>"},{"location":"tutorials/designimport.html#import-a-domino-application","title":"Import a Domino application","text":"<ol> <li> <p>In the top menu, select Project \u2192 Import \u2192 Domino Application. The VoltMX Design Import Wizard opens.</p> </li> <li> <p>On Getting Started step, click Next.</p> <p></p> </li> <li> <p>On Associate Foundry App step, click Create New.</p> <p></p> </li> <li> <p>After creating the Foundry app having a default name similar to your Project Name, click Next.</p> <p></p> </li> <li> <p>On Identity Service:</p> <ol> <li> <p>Enter the required details in Create New Identity Service and click Next.</p> Fields Description DRAPI URL This refers to the Domino REST API URL you are working with. Scope This refers to the name of the scope that's set up in the OAuth app you are using in the Domino REST API.If multiple scopes are configured in the OAuth app, and you wish to use specific scopes, ensure that you separate these scopes with commas when you enter them. For example: <code>scope1,scope2</code>If you intend to use or access all the scopes available in Domino REST API, enter <code>$DATA</code>. Just make sure that you only configured <code>$DATA</code> and <code>$SETUP</code> in the OAuth app in Domino REST API. App ID This is the App ID of the OAuth app you are using in Domino REST API. App Secret This is the App Secret of the OAuth app you are using in Domino REST API.You can click and hold on the eye icon to verify the entered value. Service Name: Any name that identifies the Volt Foundry Identity Services.The service name must have a maximum of 10 alphanumeric characters without spaces. <p></p> </li> <li> <p>Select the Identity Service.</p> <p>The name of the Identity Service is the service name you provided prefixed with MXGO. As shown in the image, the name of the Identity Service is MXGODemoApp</p> <p></p> <p>Important</p> <p>You need to pause here and do not click Next until you update the callback URL in the OAuth app in Domino REST API with the callback URL from the Identity Service in your Volt Foundry app. If you click Next without updating the callback URL in the OAuth app, a validation error occurs and prevents you from proceeding. </p> To update the callback URL of the OAuth app in Domino REST API <ol> <li> <p>Get the callback URL of your Identity Service.</p> <ol> <li>Log in to Volt Foundry.</li> <li>On the Apps page, click your Volt Foundry app.</li> <li>On the Identity tab under Configure Services, click your Identity Service.</li> <li> <p>Under Provider Details, click Copy corresponding to the Callback URL field to copy the callback URL.</p> <p></p> </li> <li> <p>Close Volt Foundry.</p> </li> </ol> </li> <li> <p>Update the callback URL of the OAuth app in Domino REST API.</p> All access scenarioLimited access scenario <ol> <li>Log in to Domino REST API.</li> <li>Select Application Management \u2013 OAUTH from the home page or Applications from the side navigation pane to access the Application Management page.</li> <li>Click the Edit Application icon corresponding to your OAuth app.</li> <li>Update the Callback URLs field with the callback URL you copied from your Identity Service.</li> <li>Click Update.</li> <li>Close Domino REST API.</li> </ol> <ol> <li>Send the copied callback URL to the Domino REST API administrator and request to update the callback URL of the OAuth app.</li> <li>Get confirmation that the callback URL of the OAuth app is already updated before proceeding.</li> </ol> <p>Note: If you don't receive immediate confirmation that the callback URL in the OAuth app has been updated, you can close the Design Import Wizard and Volt Iris. Once you receive confirmation, follow these steps:</p> <ol> <li>Open Volt Iris and sign in using your MX Go Volt Foundry account.</li> <li>Make sure that the opened project is what you used in this tutorial.</li> <li>In the top menu, select Project \u2192 Import \u2192 Domino Application to open the VoltMX Design Import Wizard.</li> <li>On Getting Started, click Next.</li> <li>On Associate Foundry App, you will see that the Volt Foundry app is still linked. Click Next.</li> <li>On Identity Service page, click Use Existing and then select the identity service under Select Existing Identity Service.</li> </ol> <p>From here, you can continue with the next step in this tutorial.</p> </li> </ol> </li> <li> <p>Click Next. The HCL Domino Login dialog opens.</p> <p></p> <p>Note</p> <p>In case of an error due to incorrect entry in the Scope, App ID, or App Secret fields in the Create New Identity Service, a dialog shows an error message and information on how to address the error. Clicking OK in the dialog will redirect you to the Create New Identity Service, where you can correct the entry in the relevant text field.</p> </li> <li> <p>Login with your Domino credentials in the HCL Domino Login dialog.</p> </li> <li> <p>In the Permission Requested dialog, click Allow.</p> <p></p> </li> <li> <p>Choose the identity service related to your app on Volt Foundry in Foundry App Identity Service and click Next.</p> <p></p> </li> </ol> </li> <li> <p>On Scope and Forms:</p> <p>Note</p> <ul> <li>Selectable forms, views, and agents are only those set to the active status when configuring the schema in the Domino REST API. Those in inactive status can still be seen but won't be selectable. Unsupported agents are also shown but won't be selectable. </li> <li>Actions are often active within the Domino database and can only be modified using Domino Designer. Imported actions might not function as expected. If this happens, you modify or update the actions to function as expected. For more information, see Modify or update imported actions using VoltFormula.</li> <li>If a dialog opens indicating that your Domino REST API schema has misconfigured settings, kindly see Troubleshooting for more information on addressing the issue.</li> <li>If you see a warning icon appear beside any form, form field, view, or agent, click the Reports folder icon and click a report to open a detailed report explaining the cause of the warning.</li> <li>You can click the Refresh icon to update the scope in case there are changes in the Domino REST API schema without exiting the wizard.</li> <li>You can use the All, Active, Inactive, and Unsupported buttons in each tab to filter what's displayed.</li> <li>You can use the Search box to find forms, fields, actions, views, and agents. The search results will automatically update as you type the letters of your keyword in the Search box. If you want to clear the search, simply click the clear icon.</li> </ul> <ol> <li> <p>Select the Scope you want to use from the drop-down list.</p> <p>The available scopes are based on the scopes defined when creating the identity service.  </p> <p></p> </li> <li> <p>Click the Forms tab and select\u00a0the forms, fields and actions you want to include in the import.</p> <p></p> </li> <li> <p>Click the Views tab and select\u00a0the views and actions you want to include in the import.</p> <p></p> </li> <li> <p>Click the Agents tab and select\u00a0the\u00a0agents you want to include in the import. </p> <p></p> </li> <li> <p>Click Next.</p> </li> </ol> </li> <li> <p>On Summary, review the selected <code>forms</code>, <code>fields</code>, <code>views</code>, and <code>agents</code>. Once you confirm that you have selected everything that you want to import, click Build Iris Application.</p> <p></p> <p>Note</p> <ul> <li>It may take a while to complete the publishing of the imported Domino app.</li> <li> <p>If a dialog indicating that existing Iris forms are detected appears, click Yes to overwrite the detected forms and proceed with the building of the application. The existing Iris forms were automatically generated when you created the project in Volt Iris.</p> <p></p> </li> </ul> </li> <li> <p>On Result, see the final <code>forms</code>, <code>views</code>, <code>actions</code>,<code>agents</code>, and then click Done.</p> <p>Tip</p> <ul> <li>A checkmark icon indicates a successful import.  </li> <li>A warning icon indicates a successful import, but the imported component might not work as expected due to, for example, its data type not being currently supported. </li> <li>An error icon indicates a failed import. </li> <li>Click the Show failed imports toggle in a specific tab to the on position to see all elements with the error icon in that specific tab. The Show failed imports toggle won't be visible in a specific tab when there are no failed imports in that particular tab.  </li> <li>You can click view report to see a results report of imported forms, views, and agents in a new window. </li> </ul> <p></p> </li> </ol> <p>Once you click Done, you can see the imported forms and views in a storyboard view in Volt Iris.</p> <p></p> <p>To see the imported forms in a directory, click the DESIGN tab to show the Project tab. You then expand the Responsive Web / Desktop and the Form directory to show the imported forms, views, and actions.</p> <p></p>"},{"location":"tutorials/designimport.html#perform-crud-operation-in-imported-domino-app","title":"Perform CRUD operation in imported Domino app","text":"<p>Before you can do the CRUD operation in your imported Domino app, you must first build and publish the imported app in Volt Iris.</p> <p>If your app is a Web App, follow the instructions in Building a Web App  in the HCL Volt MX documentation.</p> <p>If your app is a Native App:</p> <ol> <li> <p>Configure your mobile app browser.</p> </li> <li> <p>After configuring your mobile app browser, follow the instructions in Building a Native App  in the HCL Volt MX documentation to view the mobile app.</p> </li> </ol> <p>Note</p> <p>For the following topics, the steps are based on an example Domino application. The example images will be different from what you will see when you try the steps using your imported application.</p>"},{"location":"tutorials/designimport.html#create-entry","title":"Create entry","text":"<ol> <li> <p>On the Dashboard, go to Forms and click your preferred document. In the example image, we're selecting NewCustomer.</p> <p></p> </li> <li> <p>Fill in the fields.</p> </li> <li> <p>Click Select Files to upload a file. The File Upload dialog appears.</p> <p>Note</p> <p>This step only applies to fields that need you to upload an attachment. The File Upload also appears only if the configured forms of your schema in Domino REST API include the <code>$FILES</code> field.</p> </li> <li> <p>Select the file you want to upload. You can select more than one file to upload. </p> <p>Note</p> <p>To see the details of the uploading size limit, see HCL Notes and DOMINO file limits  in the HCL Domino documentation. </p> </li> <li> <p>Click Open. If the file is pre-existing, a dialog prompt appears with the option to overwrite it.</p> </li> <li> <p>Click Add.</p> <p></p> <p>This adds the data to the Domino database.</p> </li> </ol>"},{"location":"tutorials/designimport.html#viewing-data","title":"Viewing data","text":"<ol> <li> <p>On the Dashboard, go to Views and click your preferred document. In the example image, we're selecting AllCustomers Lead.</p> <p></p> </li> <li> <p>On the AllCustomers_Leads page, go to your preferred AllCustomers_Lead and click View to open the AllCustomers_Lead detail.</p> <p></p> </li> <li> <p>Select the Download All Attachments link to download the attachment files.</p> <p>Note</p> <p>You can download the attachments only if the <code>$FILES</code> field is configured in the form in your schema in the Domino REST API.</p> </li> </ol>"},{"location":"tutorials/designimport.html#update-data","title":"Update data","text":"<ol> <li> <p>On the Dashboard, go to Views and click your preferred document. In the example image, we're selecting AllCustomers Leads.</p> <p></p> </li> <li> <p>On the AllCustomers_Leads page, select a customer, and then select Edit from the context menu.</p> <p>Note</p> <p>If the detail view DOESN'T show, check the Database Views in Domino Rest API  under schema to confirm that the selected database view is active. Also, confirm whether the columns in the view were added during the import.</p> <p></p> </li> <li> <p>Edit the fields that you want to modify.</p> <p></p> </li> <li> <p>Click Select Files to upload a file. The File Upload dialog appears.</p> </li> <li> <p>Select the file you want to upload. You can select more than one file to upload.  </p> </li> <li> <p>Click Open.</p> </li> <li> <p>Click Save to save your updates.</p> </li> </ol>"},{"location":"tutorials/designimport.html#delete-entry","title":"Delete entry","text":"<p>Note</p> <p>To delete data, make sure that the Formula for Delete Access is set to <code>@True</code> in both the <code>default</code> and <code>dql</code> modes of your forms during schema configuration in the Domino REST API.</p> <ol> <li> <p>On the Dashboard, go to Views and click your preferred document. In the example image, we're selecting AllCustomers Leads.</p> <p></p> </li> <li> <p>On the AllCustomers_Leads page, select the customer you want to delete, and then choose Delete from the context menu.</p> <p></p> </li> <li> <p>When the confirmation dialog appears, click OK.</p> <p></p> </li> <li> <p>When the notification dialog indicating that the record has been deleted appears, click OK.</p> <p></p> </li> </ol> <p>Note</p> <p>Since the changes to the form are reflected in the Domino Server, they're also visible in the Notes Client.</p>"},{"location":"tutorials/firsttouch.html","title":"First Touch tutorial","text":""},{"location":"tutorials/firsttouch.html#about-this-task","title":"About this task","text":"<p>This tutorial guides you in accessing and running the First Touch Recipe Catalog app from Volt Foundry to view and explore the app.</p>"},{"location":"tutorials/firsttouch.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have completed the Volt MX Go installation.</p> </li> <li> <p>You have created your Volt Foundry admin account.</p> </li> <li> <p>If using MySQL, make sure that the maximum allowed packet size is at least 16 MB. For more information, see First Touch or Custom Application Fails to Install on Volt Foundry issue in Troubleshooting. </p> </li> </ul> <p>Tip</p> <p>The following actions might require certain Domino access rights. Contact your Domino Administrator/Domino REST API Administrator for assistance.  </p> <ul> <li> <p>You have set up an oauth.nsf .</p> </li> <li> <p>You have set up Domino REST API .</p> </li> <li> <p>You have downloaded the FirstTouchRecipes.nsf.zip file, extracted the NSF file from the zip file, and copied the NSF file to the root of the data directory of your Domino server.</p> </li> </ul>"},{"location":"tutorials/firsttouch.html#log-in-to-volt-foundry","title":"Log in to Volt Foundry","text":"<ol> <li> <p>Open\u00a0the Volt Foundry hostname concatenated with <code>/mfconsole/</code>in your browser.</p> <p>Tip</p> <p>Use the Console URL in the Install Complete window or from the Installation Complete details that appear in the command line to log in to Volt Foundry.  </p> </li> <li> <p>Enter your username and password on the\u00a0Sign in to your account\u00a0page.</p> </li> <li>Click\u00a0Sign In.\u00a0\u00a0</li> </ol> <p>The Volt MX Foundry Console opens with the Apps page shown by default.\u00a0The VOLT MX GO | First Touch banner is shown on the Apps page.</p> <p></p>"},{"location":"tutorials/firsttouch.html#run-first-touch","title":"Run First Touch","text":"<ol> <li> <p>On the Apps page, click GET STARTED.</p> <p>OR</p> <p>Select VOLT MX GO First Touch from the side panel.\u00a0</p> <p></p> </li> <li> <p>On the Welcome to Volt MX Go dialog, enter the following information:</p> <ul> <li>Domino REST API server URL</li> <li>username</li> <li>password</li> </ul> <p>Note</p> <p>This document assumes you are using the Domino IdP, which uses your Domino directory credentials. If you aren't, enter the credentials for the IdP you've configured for Domino REST API. </p> </li> <li> <p>Click Next. An installation progress dialog appears.</p> <p></p> <p>Note</p> <p>If an Uploading web binary for First Touch Recipes app error occurs in the installation progress dialog, see First Touch or Custom Application Fails to Install on Volt Foundry issue in Troubleshooting.</p> </li> <li> <p>Wait for the completion of the installation. Once completed, a Congratulations! dialog appears confirming the successful installation of the First Touch app and the verification of the connection to the Domino database via Domino REST API.</p> <p></p> </li> <li> <p>On the Congratulations! dialog, click Launch to launch the First Touch Recipe Catalog app. The First Touch Recipe Catalog app opens in another tab.</p> </li> <li>Click Sign In.</li> <li> <p>On the HCL Domino Login page, enter your Domino REST API username and password, and click Login.</p> <p>Note</p> <p>This document assumes you are using the Domino IdP, which uses your Domino directory credentials. If you aren't, enter the credentials for the IdP you've configured for Domino REST API.</p> <p></p> </li> <li> <p>On the Permission Requested page, click Allow.</p> <p></p> </li> </ol> <p>You can now view and explore the First Touch Recipe Catalog app.</p> <p></p> <p>Tip</p> <ul> <li>You can click Cancel in the Congratulations! dialog to return to the Apps view in Volt Foundry to view the app\u2019s Foundry configuration.</li> <li>To launch the app again from Volt Foundry, click GET STARTED, select View First Touch Recipes, and then click Next.</li> </ul>"},{"location":"tutorials/firsttouch.html#additional-information","title":"Additional information","text":"<ul> <li> <p>To learn more about the app, see First Touch Recipe Catalog app.</p> </li> <li> <p>To know how to import the First Touch Recipe app project to Volt Iris, see Import First Touch into Volt Iris.</p> </li> <li> <p>To know how to manually update your Domino container if you obtain a new version of FirstTouchRecipes.nsf, see Update FirstTouchRecipes.nsf.</p> </li> </ul>"},{"location":"tutorials/video.html","title":"Video tutorials and demonstrations","text":"<p>Check the following video tutorials and demonstrations to learn more about how to modernize your Domino applications using Volt MX Go.</p>"},{"location":"tutorials/video.html#installation","title":"Installation","text":"Installing Volt MX Go v2.1 for Volt Foundry Volt MX Go v2.1 introduces a new installation process that simplifies upgrades and ensures that you are always running the latest version of Volt Foundry. This video walks you through the new installation process for Volt MX Go v2.1 on Volt Foundry. Installing Volt MX Go v2.1 for Volt Iris Starting with Volt MX Go v2.1, there is a new process for enabling the Volt MX Go capabilities in Volt Iris to make sure that your Volt Iris deployment is always up-to-date. This video walks you through the updated installation process."},{"location":"tutorials/video.html#first-touch","title":"First Touch","text":"HCL Volt MX Go - First Touch Demonstrates the First Touch feature of Volt MX Go, which walks you through establishing a connection between Volt Foundry and Domino and imports the sample Recipes app into Foundry as a helpful reference when importing your own apps."},{"location":"tutorials/video.html#domino-adapter","title":"Domino Adapter","text":"HCL Volt MX Go - Domino Adapter Demonstrates the Domino Adapter capabilities of Volt MX Go, which enables you to easily and directly connect Volt MX apps to your Domino environment, allowing for full data services and aggregation with other back-end systems."},{"location":"tutorials/video.html#design-import","title":"Design Import","text":"HCL Volt MX Go - Design Import Demonstrates the Design Import capabilities of Volt MX Go, which offer significant savings in time and resources by importing existing forms, views, and agents from Domino into Volt MX Go. Domino REST API prerequisites for Design Import Guides you on how to meet the Domino REST API requirements regarding configuring the schema, adding a scope, and adding an OAuth application, so you can import a Domino application using Design Import."},{"location":"tutorials/video.html#voltformula","title":"VoltFormula","text":"HCL Volt MX Go - VoltFormula Demonstrates the VoltFormula capabilities of Volt MX Go, which enables you to extend your Domino applications by reusing existing <code>@Formulas</code> and Domino application logic in Volt MX. Whether you prefer to code with Domino <code>@Formulas</code> and commands or prefer JavaScript, VoltFormula decreases the time it takes to extend and update your Domino applications."},{"location":"tutorials/video.html#others","title":"Others","text":"HCL Volt MX Go v2.1 on HCLSoftware Marketplace Walkthrough Demonstrates how to try out HCL Volt MX Go v2.1 on the HCLSoftware Marketplace (formerly SoFy), HCL's hosted environment. Be up and running in minutes to see how you can modernize, extend, and enhance your existing Domino apps with Volt MX Go. Explore the Design Import, Domino REST API, VoltFormula, and First Touch."},{"location":"tutorials/voltformula.html","title":"VoltFormula tutorial","text":""},{"location":"tutorials/voltformula.html#about-this-task","title":"About this task","text":"<p>This tutorial shows you how to use VoltFormula in Volt Iris to convert formulas from OpenFormula and NotesFormula into Volt MX Go Rosetta JavaScript. This feature in Volt Iris allows you to enter into source OpenFormula  and Notes Formula Language  and have it translated automatically into JavaScript code.</p>"},{"location":"tutorials/voltformula.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have completed the Volt MX Go installation.</p> </li> <li> <p>You have created your Volt Foundry admin account.</p> </li> <li> <p>You know how to use Actions .</p> </li> </ul>"},{"location":"tutorials/voltformula.html#launch-volt-iris","title":"Launch Volt Iris","text":"<ol> <li> <p>Open Volt Iris. When the Sign-in dialog opens, close it.</p> <p>Note</p> <p>If you have already configured the login settings while performing the other tutorials, enter your email and password for Volt Foundry on the Sign in to your account page and click Sign In. You don't need to execute the steps below for configuring the login settings and logging in.</p> </li> <li> <p>Configure the login settings.</p> <ol> <li> <p>Go to Preferences.</p> <p>For Windows, select Edit \u2192 Preferences.</p> <p>For Mac, depending on your macOS, select Volt Iris \u2192 Preferences or Settings.</p> </li> <li> <p>In the Volt Iris Preferences dialog, click Volt Foundry.</p> <p></p> </li> <li> <p>On the Volt Foundry tab, enter your Foundry URL in the Foundry URL text box, and then click Validate.</p> <p>You should see the \u201cValidation Successful\u201d message at the top of the dialog.</p> </li> <li> <p>Click Done.</p> </li> </ol> </li> <li> <p>Log in to Volt Iris.</p> <ol> <li>Click Login on the upper right corner of the Volt Iris screen.</li> <li>Enter your email and password for Volt Foundry on the Sign in to your account page.</li> <li>Click Sign In. Your username appears next to the profile icon.</li> </ol> </li> </ol>"},{"location":"tutorials/voltformula.html#open-voltformula-using-the-action-editor","title":"Open VoltFormula using the Action Editor","text":"<ol> <li> <p>On the Project tab, find and expand the Forms directory.</p> <p>Info</p> <p>If you cannot see the Project tab, click the Design tab beside the Storyboard tab.</p> </li> <li> <p>Select a form under the Forms directory. The selected form opens.</p> </li> <li>Drag a widget or component to the form.</li> <li> <p>Right-click the widget and select an action from the menu.</p> <p>The example image shows the Button widget added to the form and the onClick action selected from the menu.</p> <p></p> <p>The Action Editor opens and creates an action sequence for you to configure.</p> </li> <li> <p>On the left side of the Action Editor, click Add Formula under Formula to add it to the action sequence and open the Formula Editor on the right side of the Action Editor.  </p> <p></p> </li> </ol>"},{"location":"tutorials/voltformula.html#translate-openformula-and-notes-formula-into-javascript","title":"Translate OpenFormula and Notes Formula into JavaScript","text":"<ol> <li> <p>On the Action Editor, enter a valid formula in the Formula Language window of the Formula Editor.</p> <p>Tip</p> <ul> <li>Enter a Notes Formula by starting with the @ character or enter an OpenFormula by starting with the = character. </li> <li>IntelliSense will provide formula suggestions and corresponding formula descriptions, examples, and details as you enter your formula in the Formula Language window of the Formula Editor.</li> <li> <p>You can click Samples to open the Formula Samples dialog that provides descriptions and sample snippets for Notes, OpenFormula, and Custom formula samples.</p> <p> </p> </li> <li> <p>Click Results to open the Formula Results window below the Formula Language window and see the result of the entered formula.</p> </li> </ul> <p>The formula you entered in the Formula Language window is automatically converted to JavaScript code and is viewable from the window on top of the Formula Language window.</p> <p></p> </li> <li> <p>Click Save.</p> </li> </ol>"},{"location":"tutorials/voltformula.html#use-voltformula-in-a-controller-module","title":"Use VoltFormula in a Controller module","text":""},{"location":"tutorials/voltformula.html#add-formula-in-a-controller","title":"Add formula in a controller","text":"<ol> <li>On the Project tab, find and expand the Controllers directory.</li> <li>Select a controller under the Controllers directory. The selected controller opens.</li> <li> <p>Right-click the code window and select Add Code from Formula. </p> <p></p> <p>The Formula Language window appears.</p> <p></p> </li> <li> <p>Enter a valid formula in the Formula Language window</p> <p>Tip</p> <ul> <li>Enter a Notes Formula by starting with the @ character or enter an OpenFormula by starting with the = character. </li> <li>IntelliSense will provide formula suggestions and corresponding formula descriptions, examples, and details as you enter your formula in the Formula Language window.</li> <li> <p>You can click Samples to open the Formula Samples dialog that provides descriptions and sample snippets for Notes, Open Formula, and Custom API formula samples.</p> <p></p> </li> <li> <p>Click Formula Results to open the Formula Results window below the Formula Language window and see the result of the entered formula.</p> </li> </ul> <p>The formula you entered in Formula Language window is automatically converted to JavaScript code and is viewable in the code window on top of the Formula Language window.</p> <p>The following example image shows a formula being entered in the Formula Language window and with IntelliSense providing suggestions.</p> <p></p> </li> <li> <p>Save your changes.</p> </li> </ol>"},{"location":"tutorials/voltformula.html#edit-formula-in-a-controller","title":"Edit formula in a controller","text":"<ol> <li>On the Project tab, find and expand the Controllers directory.</li> <li>Select a controller under the Controllers directory. The selected controller opens.</li> <li> <p>Right-click the existing code and select Edit Formula Code.</p> <p></p> <p>The Formula Language window appears.</p> </li> <li> <p>Edit the formula in the Formula Language window.</p> <p>Note</p> <ul> <li>Make sure to follow the correct syntax.</li> <li>You can add more than one line of code. </li> <li>IntelliSense will provide formula suggestions and corresponding formula descriptions, examples, and details as you enter your formula in the Formula Language window.</li> </ul> </li> <li> <p>Save your changes.</p> </li> </ol>"},{"location":"tutorials/voltformula.html#edit-rosetta-javascript","title":"Edit Rosetta JavaScript","text":"<ol> <li>On the Project tab, find and expand the Controllers directory.</li> <li> <p>Select a controller under the Controllers directory. The selected controller opens.</p> <p>The piece of rosetta autogenerated code from OpenFormula or Notes Formula is provided  between comments as shown in the following image.</p> <p> </p> </li> <li> <p>Edit or update the JavaScript code in the code window of the controller.</p> <p>Note</p> <p>Make sure you know the syntax for coding the <code>rosetta</code> JavaScript.</p> <p>IntelliSense provides suggestions as you edit or update the code as shown in the following image.</p> <p></p> </li> <li> <p>Save your changes.</p> </li> </ol>"},{"location":"tutorials/voltformula.html#additional-information","title":"Additional information","text":"<ul> <li> <p>The default Rosetta VoltFormula setting can be modified according to your need for your app. To change the configuration, see Configure VoltFormula.</p> </li> <li> <p>To know more about the proper way of handling codes, see VoltFormula coding exercise examples in Volt Iris.</p> </li> </ul>"},{"location":"tutorials/webinar.html","title":"Trainings and webinars","text":"<p>Check the following platforms to learn how to modernize your Domino applications using Volt MX Go.</p>"},{"location":"tutorials/webinar.html#hclsoftware-u","title":"HCLSoftware U","text":"<p>Embark On Your Journey</p> <p>Realize the power of possibility for you and your business. Visit HCLSoftware U  for technical education on all products in the HCL Software portfolio. Start learning today!</p> <p>Get hands-on development experience modernizing a Domino application with Volt MX Go and learn how to install and configure HCL Volt MX Go as an administrator. Check out the Volt MX Go learning journey in HCLSoftware U .</p>"},{"location":"tutorials/webinar.html#volt-mx-go-webinar-series","title":"Volt MX Go Webinar Series","text":"<p>Watch the Volt MX Go Webinar series  to better understand how to modernize your Domino apps while avoiding the cost, time, and risk of a total rewrite. The webinar series shows you how to:</p> <ul> <li>extend existing Domino apps with multi-experience capabilities and advanced UX while retaining existing business logic</li> <li>maximize your years of investment in Domino apps and skills</li> <li>deploy on cloud of your choice at scale</li> <li>unleash citizen development and work with business users to deliver new apps</li> </ul> <p>The webinar series includes the following webinars:</p> <ul> <li> <p> Modernizing Domino Apps with Volt MX Go</p> </li> <li> <p> Volt MX Go: VoltFormula</p> </li> <li> <p> Volt MX Go: First Touch, Domino REST API, and Design Import</p> </li> <li> <p> Get started with Volt Iris and Volt Foundry</p> </li> <li> <p> Try VoltScript with Early Access</p> </li> <li> <p> Build beautiful apps with Volt MX Go and Domino</p> </li> <li> <p> Harnessing the Power of HCL Domino through Foundry APIs</p> </li> </ul>"},{"location":"tutorials/webinar.html#volt-mx-go-on-hcl-software-marketplace","title":"Volt MX Go on HCL Software Marketplace","text":"<p>Explore everything Volt MX Go can do in a free, hosted trial environment on HCL Software Marketplace . Your sandbox will be up and running in 10 minutes and provides access to a hosted Domino server (where you can copy or replicate your own Domino applications), the Domino REST API, Volt Foundry, and Volt Iris, a step-by-step wizard to connect Volt MX to Domino, Design Import, and VoltFormula. Check the following links for more information:</p> <ul> <li> <p>Overview of Volt MX Go </p> </li> <li> <p>Using Volt MX Go on Marketplace </p> </li> <li> <p>Video Walkthrough </p> </li> </ul>"},{"location":"tutorials/installupgrade/index.html","title":"Install and upgrade","text":"<p>Guides you through the procedures for installing and upgrading Volt MX Go.</p> <p>Important</p> <p>The installation and upgrade processes for Volt Foundry and Volt Iris differ based on Volt MX Go release version. </p> <p>For Volt MX Go v10:</p> <ul> <li>Volt Foundry is first installed. A Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work.</li> <li>The installed Volt Iris  must be connected to a supported version of Volt Foundry that has been activated with a Volt MX Go license in My HCLSoftware Portal for the Volt MX Go capabilities to be visible in Volt Iris. </li> </ul> <p>For Volt MX Go v2.1 up to v2.1.2:</p> <ul> <li>Volt Foundry and Volt Iris are first installed, followed by installing the necessary plugins using the Volt MX Go Plugin Installer. The plugins enable the capabilities unique to Volt MX Go. </li> <li>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</li> <li>After installing the plugins, connect Volt Iris to Volt Foundry licensed with a Volt MX Go entitlement to enable and use the Volt MX Go features in Volt Iris.</li> </ul>"},{"location":"tutorials/installupgrade/index.html#system-requirements","title":"System requirements","text":"<p>Before starting the installation, make sure to verify that you meet the System requirements.</p>"},{"location":"tutorials/installupgrade/index.html#install-and-upgrade-guide","title":"Install and upgrade guide","text":"<p>To install the server components of Volt MX Go, proceed to Install Volt MX Go server components.</p> <p>To upgrade the server components of Volt MX Go, proceed to Upgrade Volt MX Go server components.</p> <p>To install and upgrade Volt Iris, proceed to Install and upgrade Volt Iris.</p>"},{"location":"tutorials/installupgrade/portaldownload.html","title":"Download HCL Volt MX Go installers","text":""},{"location":"tutorials/installupgrade/portaldownload.html#about-this-task","title":"About this task","text":"<p>Guides you on how to download the HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-mx-go-v10","title":"For Volt MX Go v10","text":"<p>Starting Volt MX Go v10, you must download the supported versions of installers of Volt Foundry and Volt Iris.</p> <p>If you want to enable VoltScript in Volt Foundry, you must also download the VoltScript Installation Tool, which installs the tool that enables VoltScript in Volt Foundry licensed with a Volt MX Go entitlement.</p> <p>The following procedure guides you in downloading the installers.</p>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-foundry","title":"For Volt Foundry","text":"<p>Info</p> <p>The minimum supported version of Volt Foundry is v10.0.1 for Volt MX Go v10.</p> <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX - Current section and click Volt Foundry.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-iris","title":"For Volt Iris","text":"<p>Info</p> <p>The minimum supported version of Volt Iris is v10.0.1 for Volt MX Go v10.</p> <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX - Current section and click Volt Iris.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol>"},{"location":"tutorials/installupgrade/portaldownload.html#for-voltscript-installation-tool","title":"For VoltScript Installation Tool","text":"<ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX Go - Current section and click Volt MX Go.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <p>Info</p> <p>The First Touch files are also accessible under Downloads and have the following file names:</p> <ul> <li><code>FirstTouchRecipes.nsf.zip</code></li> <li><code>FirstTouchRecipe.zip</code></li> </ul>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-mx-go-v21-up-to-v212","title":"For Volt MX Go v2.1 up to v2.1.2","text":"<p>Starting from the Volt MX Go v2.1 up to v2.1.2, you must download the supported versions of installers of Volt Foundry and Volt Iris. You must also download the Volt MX Go Plugin Installer, which installs the Volt MX Go plugins to Volt Foundry and Volt Iris to enable the Volt MX Go features. The following procedure guides you in downloading the installers.</p> <p>Important</p> <p>For Volt MX Go v2.1.2 installers, customers must contact Support by opening a support case to obtain the installers.</p>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-foundry_1","title":"For Volt Foundry","text":"Latest releaseEarlier releases <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX - Current section and click Volt Foundry.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX and Volt MX Go - Archive section and click Volt Foundry - Archive.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <p>Info</p> <ul> <li>The minimum supported version of Volt Foundry is v9.5.18.0 for Volt MX Go v2.1 up to v2.1.2.</li> <li>If you wish to upgrade to Volt Foundry v10.0.0.0, read and understand the knowledge base article . </li> </ul>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-iris_1","title":"For Volt Iris","text":"Latest releaseEarlier releases <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX - Current section and click Volt Iris.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX and Volt MX Go - Archive section and click Volt Iris - Archive.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <p>Info</p> <ul> <li>The minimum supported version of Volt Iris is v9.5.54 for Volt MX Go v2.1 up to v2.1.2.</li> <li>The Volt Iris v10.0.0 is not supported for Volt MX Go v2.1.2 or earlier.2. For more information, see the knowledge base article . </li> </ul>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-mx-go-plugin-installer","title":"For Volt MX Go Plugin Installer","text":"<ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX Go - Current section and click Volt MX Go.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <p>Note</p> <ul> <li> <p>For Windows, the file name of the installation file is <code>HCLVoltMXGO_Plugin_Installer_Tool_Windows_&lt;version&gt;.exe</code></p> <p>For example: <code>HCLVoltMXGO_Plugin_Installer_Tool_Windows_V2.1.exe</code>.</p> </li> <li> <p>For Linux, the file name of the installation file is  <code>HCLVoltMXGO_Plugin_Installer_Tool_Linux_&lt;version&gt;.tar.gz</code>.</p> <p>For example: <code>HCLVoltMXGO_Plugin_Installer_Tool_Linux_V2.1.tar.gz</code>.</p> </li> <li> <p>For MacOS, the file name of the installation file is <code>HCLVoltMXGO_Plugin_Installer_Tool_MacOS_&lt;version&gt;.zip</code>.</p> <p>For example: <code>HCLVoltMXGO_Plugin_Installer_Tool_MacOS_V2.1.zip</code>.</p> </li> <li> <p>The First Touch files are also included in the package and have the following file names:</p> <ul> <li><code>FirstTouchRecipes.nsf.zip</code></li> <li><code>FirstTouchRecipe.zip</code></li> </ul> </li> </ul>"},{"location":"tutorials/installupgrade/portaldownload.html#for-volt-mx-go-v204-and-earlier","title":"For Volt MX Go v2.0.4 and earlier","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Up to the Volt MX Go v2.0.4 release, you must download the Volt Foundry and Volt Iris installers. The following procedure guides you in doing that.</p> <ol> <li>Go to My HCLSoftware portal .</li> <li>On the landing page, click Sign in.</li> <li>On the sign-in page, log in using your credentials.</li> <li>On the Software Downloads page, click HCL Volt MX.</li> <li>On the HCL Volt MX page, go to the HCL Volt MX and Volt MX Go - Archive section and click Volt MX Go - Archive.</li> <li>Under Releases, click the release version you want to download.</li> <li>Under Downloads, click the Direct download icon corresponding to the file you want to download.</li> </ol> <p>Tip</p> <p>For the Volt Foundry and Volt Iris installers, you can just select and download the installer applicable to your machine.</p>"},{"location":"tutorials/installupgrade/portaldownload.html#next-step","title":"Next step","text":"<ul> <li> <p>To install the server components of Volt MX Go, proceed to Install Volt MX Go server components.</p> </li> <li> <p>To upgrade the server components of Volt MX Go, proceed to Upgrade Volt MX Go server components.</p> </li> <li> <p>To install and upgrade Volt Iris, proceed to Install and upgrade Volt Iris.</p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/index.html","title":"Install and upgrade Volt Iris","text":"<p>Perform a new or an upgrade installation of Volt Iris.</p>"},{"location":"tutorials/installupgrade/installiris/index.html#volt-mx-go-v10","title":"Volt MX Go v10","text":"<p>The installation and upgrade processes for Volt Iris in the Volt MX Go v10 release differ from those in Volt MX Go v2.1.2 or earlier releases. The supported version of Volt Iris is first installed. It is then connected to a supported version of Volt Foundry that has been activated with a Volt MX Go license in My HCLSoftware Portal for the Volt MX Go capabilities to be visible in Volt Iris.</p> <ul> <li>For more information, proceed to the installation instructions.</li> </ul> Volt MX Go v2.1 up to v2.1.2 Volt MX Go v2.0.4 or earlier - EOS"},{"location":"tutorials/installupgrade/installiris/index.html#volt-mx-go-v21-up-to-v212","title":"Volt MX Go v2.1 up to v2.1.2","text":"<p>The installation and upgrade processes for Volt Iris in the Volt MX Go v2.1 or later release differ from those in the Volt MX Go v2.0.4 or earlier release. In the Volt MX Go v2.1 or later release, Volt Iris is first installed, followed by installing the necessary plugins using the Volt MX Go Plugin Installer. The plugins enable the capabilities unique to Volt MX Go. Additionally, the plugins must be reinstalled each time Volt Iris is upgraded.</p> <p>After installing the plugins, connect Volt Iris to Volt Foundry licensed with a Volt MX Go entitlement to enable and use the Volt MX Go features in Volt Iris.</p> <p>For more information, proceed to the installation instructions.</p>"},{"location":"tutorials/installupgrade/installiris/index.html#volt-mx-go-v204-or-earlier-eos","title":"Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>For more information, proceed to the installation instructions.</p>"},{"location":"tutorials/installupgrade/installiris/installiris.html","title":"Volt MX Go v2.1 up to v2.1.2","text":"<p>Perform a new or an upgrade installation of Volt Iris.</p>"},{"location":"tutorials/installupgrade/installiris/installiris.html#install-volt-iris","title":"Install Volt Iris","text":""},{"location":"tutorials/installupgrade/installiris/installiris.html#before-you-begin","title":"Before you begin","text":"<ul> <li> <p>You have downloaded the Volt Iris installer. The minimum supported version is v9.5.54.</p> <p>Note</p> <p>The Volt Iris v10.0.0 is currently not supported for Volt MX Go v2.1.2 or earlier. For more information, see the knowledge base article .</p> </li> <li> <p>You have downloaded the Volt MX Go Plugin Installer.</p> </li> </ul> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installiris/installiris.html#install-volt-iris_1","title":"Install Volt Iris","text":"<p>For installing Volt Iris, click the link corresponding to your installation platform and follow the installation steps.</p> <ul> <li> <p>For installing Volt Iris on Mac </p> </li> <li> <p>For installing Volt Iris on Windows </p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/installiris.html#install-volt-mx-go-plugin-installer","title":"Install Volt MX Go Plugin Installer","text":"<p>The procedure enables the installation of the Volt MX Go Plugin Installer, which is used for installing the Volt MX Go plugins to Volt Iris.</p> on Macon Windows <ol> <li>Navigate to the directory of the downloaded installer zip file. </li> <li>Extract the zip file to get the installer file. </li> <li>Double-click the installer file. The Volt MX Go Installation Tool window opens. </li> <li> <p>On the Introduction, read the details and instructions, and then click Next.</p> <p></p> </li> <li> <p>On the License Agreement, read the agreement details, select the I accept the terms of the License agreement checkbox, and then click Next.</p> <p></p> </li> <li> <p>On the Choose Install Folder, click Next if you agree with the indicated default location. </p> <p></p> <p>Tip</p> <ul> <li>If you want a different installation location, click Choose to select your preferred installation location, and then click Next.</li> <li>If you selected a different installation location and decided to revert to the default location, click Restore Default Folder and then click Next.</li> </ul> </li> <li> <p>On the Pre-Installation Summary, review the details and then click Install.</p> <p></p> </li> <li> <p>On the Installing tab, you can see the installation status.</p> <p></p> </li> <li> <p>On the Install Complete, click Done.</p> <p></p> </li> </ol> <ol> <li>Navigate to the folder containing the downloaded installer file. </li> <li>Double-click the installer file. The Volt MX Go Installation Tool window opens. </li> <li> <p>On the Introduction, read the details and instructions, and then click Next.</p> <p></p> </li> <li> <p>On the License Agreement, read the agreement details, select the I accept the terms of the License agreement checkbox, and then click Next.</p> <p></p> </li> <li> <p>On the Choose Install Folder, click Next if you agree with the indicated default location.</p> <p> </p> <p>Tip</p> <ul> <li>If you want a different installation location, click Choose to select your preferred installation location or directly enter your preferred installation location in the text box, and then click Next.</li> <li>If you selected a different installation location and decided to revert to the default location, click Restore Default Folder and then click Next.</li> </ul> </li> <li> <p>On the Pre-Installation Summary, review the details and then click Install.</p> <p></p> </li> <li> <p>On the Installing tab, you can see the installation status.</p> <p></p> </li> <li> <p>On the Install Complete, click Done.</p> <p></p> </li> </ol>"},{"location":"tutorials/installupgrade/installiris/installiris.html#install-volt-mx-go-plugins","title":"Install Volt MX Go Plugins","text":"<p>The procedure enables the installation of Volt MX Go plugins to Volt Iris to enable Volt MX Go features.</p> <p>Important</p> <p>Installing the MX Go plugins into your workspace requires that your workspace contains a <code>pluginsInfo.json</code> file in the <code>.plugins</code> directory. Otherwise, an installation error occurs. To create the <code>pluginsInfo.json</code> file in the <code>.plugins</code> directory, create a Desktop Web App project  with Volt Iris in your workspace, and then run Live Preview . Running the Live Preview creates the <code>pluginsInfo.json</code> file.</p> on Macon Windows <ol> <li> <p>Click\u00a0Finder\u00a0in the Dock, click Applications in the sidebar of the Finder window, then double-click the Volt MX Go Plugin Installer app.</p> <p>Or</p> <p>Click Launchpad in the Dock, type Volt MX Go Plugin Installer in the search field at the top of Launchpad, and click the app to open it.</p> <p>A new terminal opens showing the available options.</p> <p> </p> </li> <li> <p>Enter 4 to install Volt MX Go plugins and press return.</p> </li> <li>Specify a Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press return. </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press return. </p> <p>You get a confirmation statement about the completion of the installation of the plugins.</p> <p>Note</p> <p>Starting with Volt MX Go version 2.1.1, the installed Volt Iris version is checked for compatibility. If incompatible, the plugin installation stops, and users are informed of their current and required minimum Volt Iris versions. </p> </li> <li> <p>Close the terminal.   </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens showing the available options.</p> <p></p> </li> <li> <p>Enter 4 to install Volt MX Go plugins and press Enter.</p> </li> <li>Specify a Volt Iris workspace by entering the number corresponding to a detected workspace or enter the full path to the workspace, then press Enter. </li> <li> <p>Specify the Volt Iris application installation directory by entering the number corresponding to your installation or enter the full path to your Volt Iris installation directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been installed.</p> <p>Note</p> <p>Starting with Volt MX Go version 2.1.1, the installed Volt Iris version is checked for compatibility. If incompatible, the plugin installation stops, and users are informed of their current and required minimum Volt Iris versions. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol> <p>Important</p> <ul> <li> <p>After installing the plugins, connect Volt Iris to Volt Foundry licensed with a Volt MX Go entitlement to enable and use the Volt MX Go features in Volt Iris.</p> </li> <li> <p>For further reference, see the  Installing Volt MX Go v2.1 for Volt Iris video demonstration.   </p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/installiris.html#upgrade-volt-iris","title":"Upgrade Volt Iris","text":"<p>Upgrades Volt Iris to the latest version.</p>"},{"location":"tutorials/installupgrade/installiris/installiris.html#before-you-begin_1","title":"Before you begin","text":"<ul> <li> <p>You have downloaded the Volt Iris installer - v9.5.54 or later. For more information, see Download HCL Volt MX Go installers.</p> <p>Note</p> <p>The Volt Iris v10.0.0 is currently not supported for Volt MX Go v2.1.2 or earlier. For more information, see the knowledge base article .</p> </li> <li> <p>You have installed the Volt MX Go Plugin Installer. For more information, see Install Volt MX Go Plugin Installer.</p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/installiris.html#upgrade-volt-iris_1","title":"Upgrade Volt Iris","text":"<p>To upgrade, install the latest version of Volt Iris. Click the link corresponding to your installation platform and follow the installation steps.</p> <ul> <li> <p>For installing Volt Iris on Mac </p> </li> <li> <p>For installing Volt Iris on Windows </p> </li> </ul> <p>Important</p> <p>Make sure to use the same Workspace Folder you used for your previous installation to access all the projects you worked on.  </p>"},{"location":"tutorials/installupgrade/installiris/installiris.html#install-volt-mx-go-plugins_1","title":"Install Volt MX Go Plugins","text":"<p>Install the Volt MX Go plugins to Volt Iris to enable Volt MX Go features. For the installation steps, see Install Volt MX Go Plugins.</p> <p>Important</p> <p>After installing the plugins, connect Volt Iris to Volt Foundry licensed with a Volt MX Go entitlement to enable and use the Volt MX Go features in Volt Iris.</p>"},{"location":"tutorials/installupgrade/installiris/installiris.html#important-consideration","title":"Important consideration","text":"<p>Updates for Volt Iris are released regularly, and you will receive an update notification on your Volt Iris instance that prompts you to update to the latest version of Volt Iris. These updates are major release versions, service packs, and fix packs.</p> <p>You must reinstall the Volt MX Go plugins every time you update Volt Iris.</p> <p>For more information on updating Volt Iris, click the link corresponding to your installation platform:</p> <ul> <li> <p>For updating Volt Iris on Mac </p> </li> <li> <p>For updating Volt Iris on Windows </p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/irisv10.html","title":"Volt MX Go v10","text":"<p>Perform a new or an upgrade installation of Volt Iris.</p>"},{"location":"tutorials/installupgrade/installiris/irisv10.html#install-volt-iris","title":"Install Volt Iris","text":""},{"location":"tutorials/installupgrade/installiris/irisv10.html#before-you-begin","title":"Before you begin","text":"<p>You have downloaded the Volt Iris installer. The minimum supported version is v10.0.1.</p> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installiris/irisv10.html#install-volt-iris_1","title":"Install Volt Iris","text":"<p>For installing Volt Iris, click the link corresponding to your installation platform and follow the installation steps.</p> <ul> <li> <p>For installing Volt Iris on Mac </p> </li> <li> <p>For installing Volt Iris on Windows </p> </li> </ul> <p>Important</p> <p>After installing Volt Iris, connect Volt Iris to a supported version of Volt Foundry that has been activated with a Volt MX Go license in My HCLSoftware Portal for the Volt MX Go capabilities to be visible in Volt Iris.</p> <p>For more information on activating Volt Foundry with a Volt MX Go license in My HCLSoftware Portal, see the license activation guide  on the Volt MX documentation.</p>"},{"location":"tutorials/installupgrade/installiris/irisv10.html#upgrade-volt-iris","title":"Upgrade Volt Iris","text":"<p>Upgrades Volt Iris to the latest version.</p>"},{"location":"tutorials/installupgrade/installiris/irisv10.html#before-you-begin_1","title":"Before you begin","text":"<p>You have downloaded the Volt Iris installer. The minimum supported version is v10.0.1.</p> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installiris/irisv10.html#upgrade-volt-iris_1","title":"Upgrade Volt Iris","text":"<p>To upgrade, install the latest version of Volt Iris. Click the link corresponding to your installation platform and follow the installation steps.</p> <ul> <li> <p>For installing Volt Iris on Mac </p> </li> <li> <p>For installing Volt Iris on Windows </p> </li> </ul> <p>Important</p> <ul> <li>Make sure to use the same Workspace Folder you used for your previous installation to access all the projects you worked on.</li> <li> <p>After installing Volt Iris, connect Volt Iris to a supported version of Volt Foundry that has been activated with a Volt MX Go license in my HCLSoftware Portal for the Volt MX Go capabilities to be visible in Volt Iris.</p> <p>For more information on activating Volt Foundry with a Volt MX Go license in My HCLSoftware Portal, see the license activation guide  on the Volt MX documentation.  </p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html","title":"Volt MX Go 2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#install-volt-iris","title":"Install Volt Iris","text":""},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#before-you-begin","title":"Before you begin","text":"<p>You have downloaded the latest version of Volt Iris installer based on your preferred installation platform/option. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#install-volt-iris_1","title":"Install Volt Iris","text":"<p>For installing Volt Iris, click the link corresponding to your installation platform and follow the installation steps.</p> <ul> <li> <p>For installing Volt Iris on Mac </p> </li> <li> <p>For installing Volt Iris on Windows </p> </li> </ul>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#upgrade-volt-iris","title":"Upgrade Volt Iris","text":"<p>Upgrades Volt Iris from an earlier version up to Volt MX Go v2.0.4.</p>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#before-you-begin_1","title":"Before you begin","text":"<p>You have downloaded the latest version of the Volt Iris installer. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installiris/upgradeiris.html#procedure","title":"Procedure","text":"<p>Install the latest version of Volt Iris without uninstalling the current one. The current version is overwritten by the new version.</p>"},{"location":"tutorials/installupgrade/installserver/index.html","title":"Install Volt MX Go server components","text":"<p>The topic guides you in installing the following server components of Volt MX Go:</p> <ul> <li>Volt Foundry</li> <li>Domino REST API</li> </ul>"},{"location":"tutorials/installupgrade/installserver/index.html#volt-mx-go-v10","title":"Volt MX Go v10","text":"<p>The installation process for Volt Foundry in Volt MX Go v10 differs from those in Volt MX Go v2.1.2 or earlier releases. In Volt MX Go v10, the supported version of Volt Foundry is installed and then activated with a Volt MX Go license in the My HCLSoftware Portal for the Volt MX Go features to work.</p> <p>Using this installation option would require you to use your own Domino server.</p> <p>Before starting the installation, ensure you meet the System requirements.  </p> <p>Proceed to the installation instructions.</p> Volt MX Go v2.1 up to 2.1.2 Volt MX Go v2.0.4 or earlier - EOS"},{"location":"tutorials/installupgrade/installserver/index.html#volt-mx-go-v21-up-to-212","title":"Volt MX Go v2.1 up to 2.1.2","text":"<p>The installation process for Volt Foundry in the Volt MX Go v2.1 up to v2.1.2 differs from other releases:</p> <ul> <li> <p>Volt Foundry is first installed, followed by installing the necessary plugins using the Volt MX Go Plugin Installer. The plugins enable the capabilities unique to Volt MX Go. Additionally, the plugins must be reinstalled each time Volt Foundry is upgraded.</p> </li> <li> <p>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</p> </li> </ul> <p>Using this installation option would require you to use your own Domino server.</p> <p>Before starting the installation, make sure to verify that you meet the System requirements.  </p> <ul> <li>Proceed to the installation instructions.</li> </ul>"},{"location":"tutorials/installupgrade/installserver/index.html#volt-mx-go-v204-or-earlier-eos","title":"Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Proceed to the installation instructions</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html","title":"Volt MX Go v2.1 up to v2.1.2","text":""},{"location":"tutorials/installupgrade/installserver/installdrapi.html#install-domino-rest-api","title":"Install Domino REST API","text":"<p>Guides you in installing Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the links to the installation procedure based on your preferred installation platform:</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> <li> <p>Complete all the post-installation tasks .</p> </li> </ol> <p>For more information, see the Installation and configuration  page in the HCL Domino REST API documentation .</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#install-volt-foundry","title":"Install Volt Foundry","text":"<p>Starting from Volt MX Go v2.1 release up to v2.1.2, Volt Foundry is enabled by installing the supported version of Volt Foundry using available installation mechanisms and then installing Volt MX Go plugins to Volt Foundry using a Volt MX Go Plugin Installer. The use of Helm charts and a single container solution are also supported for installing Volt Foundry. It's important to note that from Volt MX Go v2.1 up to the latest release, only Volt Foundry using a Tomcat non-clustered application server is supported.</p> <p>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#for-using-an-installer","title":"For using an installer","text":""},{"location":"tutorials/installupgrade/installserver/installdrapi.html#before-you-begin_1","title":"Before you begin","text":"<ul> <li> <p>You have downloaded the Volt Foundry installer. The minimum supported version is v9.5.18.0.</p> <p>Note</p> <p>If you wish to upgrade to Volt Foundry v10.0.0.0, read and understand the knowledge base article .</p> </li> <li> <p>You have downloaded the Volt MX Go Plugin Installer.</p> </li> </ul> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#install-volt-foundry_1","title":"Install Volt Foundry","text":"<p>For installing Volt Foundry, click the link to the installation guide corresponding to your installation platform and follow the installation steps.</p> <p>Important</p> <ul> <li>For Volt MX Go v2.1 up to the latest release, only Volt Foundry using a Tomcat non-clustered application server is supported.</li> <li> <p>Make sure to check all the details and complete all the applicable procedures indicated in the sections in the installation guides.</p> </li> <li> <p>After completing the installation, activate the Volt MX Go license on Volt Foundry and then shut it down before proceeding to the installation of the Volt MX Go plugins. For more information, see the following license activation guides on the Volt MX documentation:</p> <p>For Volt Foundry version 9.5.20.0 and onwards </p> <p>For Volt Foundry versions earlier than 9.5.20.0 </p> </li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#install-volt-mx-go-plugin-installer","title":"Install Volt MX Go Plugin Installer","text":"<p>The procedure enables the installation of the Volt MX Go Plugin Installer, which is used for installing the Volt MX Go plugins to Volt Foundry.</p> on Linuxon Windows <ol> <li>Open terminal and extract the installer from the tar file. </li> <li>Navigate to the directory containing the <code>VoltMXGoInstallationTool.bin</code> to ensure that you are in the right location to execute the installation commands for the bin file. </li> <li> <p>Enter the following command to grant executable permissions to the <code>VoltMXGoInstallationTool.bin</code> file and press Enter. </p> <p><code>sudo chmod +x VoltMXGoInstallationTool.bin</code></p> <p>Using the <code>chmod</code> command with <code>sudo</code> ensures administrative privileges.</p> </li> <li> <p>Run the <code>VoltMXGoInstallationTool.bin</code> file to start the installation using the following command and press Enter.</p> <p><code>./VoltMXGoInstallationTool.bin</code></p> </li> <li> <p>Follow the installation instructions. The binary file will initiate the installation process and may prompt you with on-screen instructions. Follow these instructions carefully to complete the installation.</p> <p>Note</p> <p>If you have a graphical terminal associated with your Linux deployment, the Volt MX Go Installation Tool window opens. Otherwise, installation is via the command line.  </p> </li> </ol> <ol> <li>Navigate to the folder containing the downloaded installer file. </li> <li>Double-click the installer file. The Volt MX Go Installation Tool window opens. </li> <li> <p>On the Introduction, read the details and instructions, and then click Next.</p> <p></p> </li> <li> <p>On the License Agreement, read the agreement details, select the I accept the terms of the License agreement checkbox, and then click Next.</p> <p></p> </li> <li> <p>On the Choose Install Folder, click Next if you agree with the indicated default location.</p> <p> </p> <p>Tip</p> <ul> <li>If you want a different installation location, click Choose to select your preferred installation location or directly enter your preferred installation location in the text box, and then click Next.</li> <li>If you selected a different installation location and decided to revert to the default location, click Restore Default Folder and then click Next.</li> </ul> </li> <li> <p>On the Pre-Installation Summary, review the details and then click Install.</p> <p></p> </li> <li> <p>On the Installing, see the installation status.</p> <p></p> </li> <li> <p>On the Install Complete, click Done.</p> <p></p> </li> </ol>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#install-volt-mx-go-plugins","title":"Install Volt MX Go plugins","text":"<p>The procedure enables the installation of Volt MX Go plugins to Volt Foundry to enable Volt MX Go features.</p> <p>Important</p> <ul> <li>For Volt MX Go v2.1 up to the latest release, you can only install Volt MX Go plugins to Volt Foundry that uses a Tomcat non-clustered application server.</li> <li>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</li> </ul> on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the Volt MX Go Plugin Installer. By default, the installer executable is located in the <code>~/VoltMXGoPluginInstaller</code> directory.</li> <li> <p>Run the Volt MX Go Plugin Installer by entering the following command and press Enter.</p> <p><code>./VoltMXGoPluginInstaller</code></p> <p>The installation tool opens on the Terminal showing the available options.</p> <p></p> </li> <li> <p>Enter 1 to install Volt MX Go plugins in Volt Foundry and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement that the plugins have been installed.</p> <p>Note</p> <p>Starting with Volt MX Go version 2.1.1, the installed Volt Foundry version is checked for compatibility. If incompatible, the plugin installation stops, and users are informed of their current and required minimum Volt Foundry versions. </p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens showing the available options.</p> <p></p> </li> <li> <p>Enter 1 to install Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been installed.</p> <p>Note</p> <p>Starting with Volt MX Go version 2.1.1, the installed Volt Foundry version is checked for compatibility. If incompatible, the plugin installation stops, and users are informed of their current and required minimum Volt Foundry versions. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol> <p>Note</p> <ul> <li>After installing the Volt MX Go plugins, open Volt Foundry to verify you see the Volt MX GO/First Touch banner. </li> <li>For further reference, see the  Installing Volt MX Go v2.1 for Volt Foundry video demonstration.</li> </ul>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using Helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/installserver/installdrapi.html#before-you-begin_2","title":"Before you begin","text":"<ul> <li>You have obtained the authentication token from the HCL Container Repository.</li> <li>You have completed all the installation prerequisites .</li> <li>You have reviewed the configuration parameters and identified their required values as you must provide them during the installation. For more information, see Configuration .</li> <li>You have downloaded the Volt Foundry Helm charts. For more information, see Download HCL Volt MX Go installers.</li> </ul>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#procedure_1","title":"Procedure","text":"<ol> <li> <p>Click the link to the installation guide and follow the installation steps.</p> <p>Volt Foundry Container Helm installation guide </p> <p>Important</p> <p>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</p> </li> <li> <p>After completing all applicable steps in the installation guide, update the <code>values.yaml</code> file.</p> <ol> <li>Locate the <code>values.yaml</code> file in the Volt Foundry directory.</li> <li>Open the <code>values.yaml</code> file with your preferred editor and locate the line containing the <code>imageRegistry:</code> key.</li> <li>Change the value of the <code>imageRegistry:</code> key to <code>\"hclcr.io/voltmxgo</code>.</li> <li>Save your changes and close the file.</li> </ol> </li> <li> <p>Execute the <code>helm upgrade foundry</code> command to upgrade the running images to use Volt MX Go.</p> </li> </ol>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#for-single-container-solution","title":"For single container solution","text":"<p>For more information, see Volt Foundry Single Container Solution  in the Volt MX Documentation.</p>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#before-you-begin_3","title":"Before you begin","text":"<ul> <li>You have obtained the authentication token from the HCL Container Repository.</li> <li>You have completed all the installation prerequisites .</li> <li>You have reviewed the configuration parameters and identified their required values as you must provide them during the installation. For more information, see Configuration .</li> <li>You have downloaded the Volt Foundry Single Container install script. For more information, see Download HCL Volt MX Go installers.</li> </ul>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#procedure_2","title":"Procedure","text":"<ol> <li> <p>Click the link to the installation guide and follow the installation steps.</p> <p>Volt Foundry Single Container Solution installation guide </p> <p>Important</p> <ul> <li>The installation guides indicate installation files and installation file download locations. You must use the installer you downloaded as indicated in the Before you begin section.</li> <li>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</li> </ul> </li> <li> <p>Update the <code>docker-compose.yml</code> file.</p> <ol> <li>Locate the <code>docker-compose.yml</code> file in the Volt Foundry directory.</li> <li>Open the <code>docker-compose.yml</code> file with your preferred editor and locate the line containing the <code>image:</code> key.</li> <li>Change the value of the <code>image:</code> key from <code>\"hclcr.io/voltmx/voltmx-foundry-db:&lt;version&gt;_GA\"</code> to <code>\"hclcr.io/voltmxgo/voltmx-foundry-db:&lt;version&gt;_GA\"</code>, wherein &lt;version&gt; corresponds to the Volt Foundry release version. For example, <code>\"hclcr.io/voltmxgo/voltmx-foundry-db:9.5.18.0_GA\"</code>.</li> <li>Save your changes and close the file. </li> </ol> </li> <li> <p>Stop the existing images by running the command <code>docker compose down</code>.</p> </li> <li>Restart the images by running the command <code>docker compose up -d</code>.</li> </ol>"},{"location":"tutorials/installupgrade/installserver/installdrapi.html#next-step","title":"Next step","text":"<p>After completing the installation of Domino REST API and Volt Foundry, proceed to Install Volt Iris.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html","title":"Volt MX Go v10","text":""},{"location":"tutorials/installupgrade/installserver/installv10.html#install-domino-rest-api","title":"Install Domino REST API","text":"<p>Guides you in installing Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the links to the installation procedure based on your preferred installation platform:</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> <li> <p>Complete all the post-installation tasks .</p> </li> </ol> <p>For more information, see the Installation and configuration  page in the HCL Domino REST API documentation .</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#install-volt-foundry","title":"Install Volt Foundry","text":"<p>Starting from Volt MX Go v10, install the supported version of Volt Foundry using available installation mechanisms. The use of Helm charts and a single container solution are also supported for installing Volt Foundry.</p> <p>A Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#for-using-an-installer","title":"For using an installer","text":""},{"location":"tutorials/installupgrade/installserver/installv10.html#before-you-begin_1","title":"Before you begin","text":"<p>You have downloaded the Volt Foundry installer. The minimum supported version is v10.0.1.</p> <p>For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#procedure_1","title":"Procedure","text":"<p>For installing Volt Foundry, click the link to the installation guide corresponding to your installation platform and follow the installation steps.</p> <p>Important</p> <ul> <li> <p>Make sure to check all the details and complete all the applicable procedures indicated in the sections in the installation guides.</p> </li> <li> <p>After completing the installation, a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation. </p> </li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul>"},{"location":"tutorials/installupgrade/installserver/installv10.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using Helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/installserver/installv10.html#before-you-begin_2","title":"Before you begin","text":"<ul> <li> <p>You have downloaded the Volt Foundry Helm charts. The minimum supported version is v10.0.1.</p> <p>For more information, see Download HCL Volt MX Go installers.</p> <p>Note</p> <p>If you want VoltScript enabled for Volt Foundry, proceed to Enable VoltScript in Volt Foundry before proceeding with the following prerequisites and the installation procedure. </p> </li> <li> <p>You have obtained the authentication token from the HCL Container Repository.</p> </li> <li>You have completed all the installation prerequisites .</li> <li>You have reviewed the configuration parameters and identified their required values as you must provide them during the installation. For more information, see Configuration .</li> </ul>"},{"location":"tutorials/installupgrade/installserver/installv10.html#procedure_2","title":"Procedure","text":"<ol> <li> <p>Click the link to the installation guide and follow the installation steps.</p> <p>Volt Foundry Container Helm installation guide </p> <p>Note</p> <p>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</p> </li> <li> <p>After completing all applicable steps in the installation guide, update the <code>values.yaml</code> file.</p> <ol> <li>Locate the <code>values.yaml</code> file in the Volt Foundry directory.</li> <li>Open the <code>values.yaml</code> file with your preferred editor and locate the line containing the <code>imageRegistry:</code> key.</li> <li>Change the value of the <code>imageRegistry:</code> key to <code>\"hclcr.io/voltmxgo</code>.</li> <li>Save your changes and close the file.</li> </ol> </li> <li> <p>Execute the <code>helm upgrade foundry</code> command to upgrade the running images to use Volt MX Go.</p> </li> </ol> <p>Important</p> <p>After completing the installation, a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#for-single-container-solution","title":"For single container solution","text":"<p>For more information, see Volt Foundry Single Container Solution  in the Volt MX Documentation.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#before-you-begin_3","title":"Before you begin","text":"<ul> <li>You have obtained the authentication token from the HCL Container Repository.</li> <li>You have completed all the installation prerequisites .</li> <li>You have reviewed the configuration parameters and identified their required values as you must provide them during the installation. For more information, see Configuration .</li> <li> <p>You have downloaded the Volt Foundry Single Container install script. The minimum supported version is v10.0.1</p> <p>For more information, see Download HCL Volt MX Go installers.</p> </li> </ul>"},{"location":"tutorials/installupgrade/installserver/installv10.html#procedure_3","title":"Procedure","text":"<ol> <li> <p>Click the link to the installation guide and follow the installation steps.</p> <p>Volt Foundry Single Container Solution installation guide </p> <p>Note</p> <ul> <li>The installation guides indicate installation files and installation file download locations. You must use the installer you downloaded as indicated in the Before you begin section.</li> <li>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</li> </ul> </li> <li> <p>Update the <code>docker-compose.yml</code> file.</p> <ol> <li>Locate the <code>docker-compose.yml</code> file in the Volt Foundry directory.</li> <li>Open the <code>docker-compose.yml</code> file with your preferred editor and locate the line containing the <code>image:</code> key.</li> <li> <p>Change the value of the <code>image:</code> key from <code>\"hclcr.io/voltmx/voltmx-foundry-db:&lt;version&gt;_GA\"</code> to <code>\"hclcr.io/voltmxgo/voltmx-foundry-db:&lt;version&gt;_GA\"</code>, wherein &lt;version&gt; corresponds to the Volt Foundry release version. </p> <p>For example, <code>\"hclcr.io/voltmxgo/voltmx-foundry-db:10.0.0.1_GA\"</code>.</p> </li> <li> <p>Save your changes and close the file. </p> </li> </ol> </li> <li> <p>Stop the existing images by running the command <code>docker compose down</code>.</p> </li> <li>Restart the images by running the command <code>docker compose up -d</code>.</li> </ol> <p>Important</p> <p>After completing the installation, a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation.</p>"},{"location":"tutorials/installupgrade/installserver/installv10.html#next-step","title":"Next step","text":"<p>Before proceeding, make sure you have activated Volt Foundry using a Volt MX Go license in the My HCLSoftware Portal for the Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation.</p> <p>After completing the installation of Domino REST API and Volt Foundry, proceed to Install Volt Iris.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html","title":"Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#install-domino-rest-api","title":"Install Domino REST API","text":"<p>Guides you in installing Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the links to the installation procedure based on your preferred installation platform:</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> <li> <p>Complete all the post-installation tasks .</p> </li> </ol> <p>For more information, see the Installation and configuration  page in the HCL Domino REST API documentation .</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#install-volt-foundry","title":"Install Volt Foundry","text":"<p>Volt Foundry supports the following installation mechanisms:</p> <ul> <li>Use the Windows or Linux installers that use Install Anywhere to do the installation. It allows you to install a bundled Tomcat or JBoss app server or install it onto an existing app server (JBOSS single or multi-node, or WebLogic).</li> <li>Use the Command Line installer for advanced deployments.</li> <li>Use helm charts on one of the supported Kubernetes platforms, including OpenShift, AKS (Azure), EKS (AWS), and GKE (Google).</li> </ul>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#for-using-an-installer","title":"For using an installer","text":""},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#before-you-begin_1","title":"Before you begin","text":"<p>You have downloaded the latest version of Volt Foundry installer based on your preferred installation platform/option. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#procedure_1","title":"Procedure","text":"<p>For installing Volt Foundry, click the link to the installation guide corresponding to your installation platform and follow the installation steps.</p> <p>Important</p> <ul> <li>The installation guides indicate installation files and installation file download locations. You must use the installer you downloaded as indicated in the Before you begin section.</li> <li>Make sure to check all the details and complete all the applicable procedures indicated in the sections in the installation guides.</li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> <li> <p>For command line installer </p> </li> </ul>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#before-you-begin_2","title":"Before you begin","text":"<p>Prerequisite</p> <p>Obtain authentication token from HCL Container Repository before proceeding.</p>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#procedure_2","title":"Procedure","text":"<ol> <li> <p>Create a namespace and a temp directory for the charts.</p> <p>Run the following commands to create a namespace, set the current context to mxgo, create a temp directory for downloading the charts, and make it the current directory:</p> <pre><code>kubectl create namespace mxgo\nkubectl config set-context --current --namespace=mxgo\nmkdir ~/mxgo\ncd ~/mxgo\n</code></pre> <p>Note</p> <p>You must run the <code>kubectl config set-context --current --namespace=mxgo</code> command to set the current namespace context after each restart of Windows or Rancher Desktop.</p> </li> <li> <p>Configure Helm to pull from HCL Container Repository.</p> <p>The procedure sets up Helm with the details necessary to authenticate with the HCL Container Repository. You will need your email and authentication token used with the HCL Container Repository.</p> <ul> <li> <p>Run the following command to set up Helm:</p> <pre><code>helm repo add hclcr https://hclcr.io/chartrepo/voltmxgo --username &lt;your hclcr username&gt; --password &lt;your hclcr password&gt;\n</code></pre> <p>Example</p> <p><code>helm repo add hclcr https://hclcr.io/chartrepo/voltmxgo --username user.name@example.com --password xx3ds2w</code></p> <p>Note</p> <p>Use the CLI secret value you saved from obtaining authentication token from HCL Container Repository as your authentication token or password.</p> <p>If you get an error message similar to the following:</p> <pre><code>Error: looks like https://hclcr.io/chartrepo/voltmxgo is not a valid chart repository or cannot be reached: failed to fetch https://hclcr.io/chartrepo/voltmxgo/index.yaml : 401 Unauthorized\n</code></pre> <p>Most likely, you haven't specified your username or authentication token correctly. Make sure the case and content matches exactly what's listed on the HCL Container Repository site and retry.</p> </li> </ul> </li> <li> <p>Download Foundry charts.</p> <ol> <li> <p>Run the following command to make sure that the chart information for the repositories is up-to-date.</p> <pre><code>helm repo update\n</code></pre> <p>See Volt MX Go and Helm chart version compatibility to know the latest Helm chart version.</p> </li> <li> <p>Run the following commands to download the Foundry charts, unpack the files, and move the <code>values.yaml</code> file to the current directory:</p> <pre><code>mkdir foundry\ncd foundry\nhelm pull hclcr/voltmx-dbupdate\nhelm pull hclcr/voltmx-foundry\ntar -xzf voltmx-foundry-1.n.n.tgz\ntar -xzf voltmx-dbupdate-1.n.n.tgz\nmv voltmx-foundry/values.yaml  ./\nmv voltmx-foundry/init-guids.sh  ./\nchmod +x init-guids.sh\n</code></pre> <p>Note</p> <p>The foundry and dbupdate chart names have a version string in the filename. The <code>helm pull</code> command will pull down the latest version of the charts. Ensure your tar command uses the correct matching file names.</p> </li> <li> <p>Volt Foundry uses several Global Unique IDs to distinguish different installations of Volt Foundry. Invoke the init-guids script to generate the IDs using the following command:</p> <pre><code>./init-guids.sh --new\n</code></pre> </li> <li> <p>Edit the <code>values.yaml</code> file to update the <code>imageCredentials</code> by replacing <code>your-email</code> and <code>your-authentication-token</code> with your email and authentication token used with the HCL Container Repository.</p> <pre><code>imageCredentials:\nusername: your-email\npassword: your-authentication-token\n</code></pre> <p>Note</p> <p>Use the CLI secret value you saved from obtaining authentication token from HCL Container Repository as your authentication token or password.</p> </li> <li> <p>Locate the following line in the file and add your Volt Foundry server domain name setting:</p> <pre><code>serverDomainName:\n</code></pre> <p>Whatever server domain name you specify here, you need to ensure that it's resolvable. There is no additional work if you have already registered your server domain name in DNS. However, if you haven't registered it, you must add it to the server's <code>/etc/hosts</code> file, substituting your server domain name. Additionally, you must make the same updates in k3s's coredns config map and substituting your server domain name.</p> </li> <li> <p>Locate the following lines in the file and add your Volt Foundry database details:</p> <pre><code>### Database details ###\n\n# Database type which you want to use for Volt Foundry (String)\n# Possible values:\n#   \"mysql\" for MySQL DB server\n#   \"sqlserver\" for Azure MSSQL or SQLServer\n#   \"oracle\" for Oracle DB server\ndbType:\n\n# Database server hostname (String)\ndbHost:\n\n# Database server port number (Number). This can be empty for cloud managed service.\ndbPort:\n\n# Database User and password - you may set a single general userid/password here,\n# or you may set specific userid/password combinations below.  If set, the\n# specific values override the general dbUser/dbPass.\n\n# Database server user (String)\ndbUser:\n\n# Database server password (String) enclosed in quotes\ndbPass:\n</code></pre> </li> <li> <p>For more advanced configuration options, see Configuration  in the Installation Guide for Volt MX Foundry Containers Helm Installation.</p> </li> <li> <p>Save the file and exit.</p> </li> </ol> </li> <li> <p>(Optional) Perform advanced scenario procedures.</p> <p>Perform the procedures under Advanced Scenarios .</p> </li> <li> <p>Deploy Foundry's dbupdate to create the databases.</p> <ol> <li> <p>Run the following Helm install command to deploy Foundry's dbupdate:</p> <pre><code>helm install dbupdate voltmx-dbupdate -f values.yaml\n</code></pre> </li> <li> <p>Run the following command to verify deployment completion of Foundry's dbupdate:</p> <pre><code>kubectl get pods -o wide -w\n</code></pre> <p>The output should be similar to the following and will update over time:</p> <pre><code>NAME                            READY   STATUS      RESTARTS   AGE\ndomino-drapi-6d755b68df-2sfhb   3/3     Running     0          6m13s\nmysql-0                         1/1     Running     0          2m37s\nfoundry-db-update-dzdrx         1/1     Running     0          24s\nfoundry-db-update-dzdrx         0/1     Completed   0          65s\nfoundry-db-update-dzdrx         0/1     Completed   0          67s\nfoundry-db-update-dzdrx         0/1     Completed   0          68s\n</code></pre> </li> <li> <p>Once the foundry-db-update pod shows Completed in the STATUS column, the databases have been created. Press <code>Ctrl-c</code> to stop the kubectl command.</p> </li> </ol> </li> <li> <p>Install Volt Foundry.</p> <ol> <li> <p>Run the following Helm install command to deploy Volt Foundry:</p> <pre><code>helm install foundry voltmx-foundry -f values.yaml\n</code></pre> </li> <li> <p>Run the following command to verify when the Volt Foundry install is ready:</p> <pre><code>kubectl get pods -o wide -w\n</code></pre> <p>The output should be similar to the following and will update over time:</p> <p></p> </li> <li> <p>Monitor all the foundry pods except for the foundry-db-update pod as it has already been completed. Once the other foundry pods have a 1/1 state in the READY column, press <code>Ctrl-c</code> to stop the kubectl command.</p> </li> </ol> <p>Volt Foundry is now available at http://foundry.mymxgo.com/mfconsole/.</p> <p>Note</p> <ul> <li>If you defined a different Volt Foundry hostname, the Foundry URL would be the defined Foundry hostname concatenated with <code>/mfconsole/</code>.</li> <li> <p>If you want to access this deployment from a remote machine, you most likely need to update the <code>/etc/hosts</code> file on the remote machine as well.</p> </li> <li> <p>To create an account, see Create a Volt Foundry administrator account.</p> </li> <li> <p>To connect to Domino server from your Notes client, see Connect to Domino server from your Notes client.</p> </li> </ul> </li> <li> <p>(Optional) Perform monitoring procedures.</p> <p>Perform the procedures under Monitoring  in the HCL Volt MX documentation.</p> <p>Note</p> <p>The procedures are for enabling important monitoring features such as Metrics Server, Elastic Stack, Kuberhealthy.</p> </li> <li> <p>(Optional) Perform post installation tasks.</p> <p>Perform the procedures under the Post Installation Tasks  in the HCL Volt MX documentation.</p> </li> </ol>"},{"location":"tutorials/installupgrade/installserver/nativeinstallers.html#next-step","title":"Next step","text":"<p>After completing the installation of Domino REST API and Volt Foundry, proceed to Install Volt Iris.</p>"},{"location":"tutorials/installupgrade/sysreq/index.html","title":"System requirements","text":"<p>This section describes the minimum system requirements for deploying Volt MX Go.</p> <ul> <li>System requirements for Volt MX Go v10 or later</li> <li>System requirements for Volt MX Go v2.1 up to v2.1.2</li> <li>System requirements for Volt MX Go v2.0.4 or earlier - EOS</li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html","title":"System requirements for Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>This section describes the minimum system requirements for deploying Volt MX Go.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#for-installing-domino-rest-api","title":"For installing Domino REST API","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p> <p>Check the system requirements  for installing Domino REST API using the installer.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#for-installing-volt-foundry","title":"For installing Volt Foundry","text":"<p>Software requirements</p> <p>Check the Supported OS, Application Servers, and Database Guide  to know the software requirements for installing Volt Foundry using installers.</p> <p>Hardware requirements</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Network settings</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Supported browsers</p> <p>Check the supported browsers  for the Volt Foundry Console.</p> <p>Prerequisites for Volt Foundry command line installer</p> <p>Check the additional prerequisites  when using the Foundry command line installer.</p> <p>Prerequisites for Volt MX Foundry Containers Helm Installation</p> <p>Check the prerequisites  when using the Volt Foundry Containers Helm Installation.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#for-installing-volt-iris","title":"For installing Volt Iris","text":"On WindowsOn Mac <p>Operating System</p> <p>Windows 11, Windows 10, Windows 8.1 Update. Supports 64-bit Operating Systems</p> <p>Hardware</p> Component Requirement Processor and Architecture Dual Core processor, 64-bit RAM 8 GB Internal Storage 2 GB Network Ethernet Port <p>Operating System</p> <p>Supported macOS versions </p> <p>Hardware</p> Component Requirement Processor x86-64 CPU, M1/M2 CPU(64-bit Mac with an Intel Core i3, i5, i7, Intel Xeon processor or M1, M2 ARM processor) RAM 8 GB Internal Storage 24 GB Network Ethernet Port"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#for-deploying-volt-mx-go-using-k3s-on-an-ubuntu-rhel-sles-machine-or-vm","title":"For deploying Volt MX Go using K3s on an Ubuntu, RHEL, SLES machine, or VM","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul> <p>Operating System</p> <ul> <li>RHEL9</li> <li>Ubuntu</li> <li>SLES</li> </ul> <p>Hardware </p> Spec Minimum CPU 4 cores RAM 16 GB <p>Note</p> <ul> <li> <p>For more information on K3s, see K3s - Lightweight Kubernetes .</p> </li> <li> <p>For more information on the installation requirements for K3s, see K3s Installation Requirements .</p> </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#for-deploying-volt-mx-go-using-rancher-desktop-running-on-windows","title":"For deploying Volt MX Go using Rancher Desktop running on Windows","text":"<p>Important</p> <ul> <li>This applies only when you\u00a0install Volt MX Go in a development or test-only environment, which\u00a0was only available until Volt MX Go v2.0.4.</li> <li>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</li> </ul> <p>Operating System</p> <ul> <li>Windows 10 build 1909 or higher</li> <li>Windows 11</li> </ul> <p>Hardware</p> Spec Minimum CPU 4 cores RAM 32 GB <p>Additional requirements</p> <p>Rancher Desktop requires the following on Windows:</p> <ul> <li>Running on a machine with virtualization capabilities.</li> <li>Persistent internet connection.</li> <li>Windows Subsystem for Linux on Windows. This will automatically be installed as part of the Rancher Desktop setup. Manually downloading a distribution isn't necessary.</li> </ul> <p>Note</p> <ul> <li> <p>For more information on Rancher Desktop, see Introduction  in the Rancher Desktop documentation.</p> </li> <li> <p>For more information on Rancher Desktop installation requirements, see Installation  in the Rancher Desktop documentation.</p> </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq.html#next-step","title":"Next step","text":"<ul> <li> <p>To install the server components of Volt MX Go, proceed to Install Volt MX Go server components.</p> </li> <li> <p>To upgrade the server components of Volt MX Go, proceed to Upgrade Volt MX Go server components.</p> </li> <li> <p>To install and upgrade Volt Iris, proceed to Install and upgrade Volt Iris.</p> </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html","title":"System requirements for Volt MX Go v10","text":"<p>This section describes the minimum system requirements for deploying Volt MX Go.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html#for-domino-rest-api","title":"For Domino REST API","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p> <p>Check the system requirements  for installing Domino REST API using the installer.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html#for-voltscript-installation-tool","title":"For VoltScript Installation Tool","text":"<p>The VoltScript Installation Tool runs on any supported Volt Foundry server installation.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html#for-volt-foundry","title":"For Volt Foundry","text":"<p>Software requirements</p> <p>Check the Supported OS, Application Servers, and Database Guide  to know the software requirements for installing Volt Foundry using installers.</p> <p>Hardware requirements</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Network settings</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Supported browsers</p> <p>Check the supported browsers  for the Volt Foundry Console.</p> <p>Prerequisites for Volt Foundry Containers Helm Installation</p> <p>Check the prerequisites  when using the Volt Foundry Containers Helm Installation.</p> <p>Requirements for Volt Foundry Single Container Solution</p> <ul> <li>Prerequisites </li> <li>Software requirements </li> <li>Hardware requirements </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html#for-volt-iris","title":"For Volt Iris","text":"<ul> <li> <p>For Windows </p> </li> <li> <p>For Mac </p> </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq10.html#next-step","title":"Next step","text":"<ul> <li> <p>To install the server components of Volt MX Go, proceed to Install Volt MX Go server components.</p> </li> <li> <p>To upgrade the server components of Volt MX Go, proceed to Upgrade Volt MX Go server components.</p> </li> <li> <p>To install and upgrade Volt Iris, proceed to Install and upgrade Volt Iris.</p> </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html","title":"System requirements for Volt MX Go v2.1 to v2.1.2","text":"<p>This section describes the minimum system requirements for deploying Volt MX Go.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html#for-domino-rest-api","title":"For Domino REST API","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p> <p>Check the system requirements  for installing Domino REST API using the installer.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html#for-volt-mx-go-plugin-installer","title":"For Volt MX Go Plugin Installer","text":"<p>The Volt MX Go Plugin Installer runs on any supported Volt Foundry server installation or any supported Volt Iris client installation.\u00a0The installer requires less than 150 MB of internal storage.</p>"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html#for-volt-foundry","title":"For Volt Foundry","text":"<p>Software requirements</p> <p>Check the Supported OS, Application Servers, and Database Guide  to know the software requirements for installing Volt Foundry using installers.</p> <p>Hardware requirements</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Network settings</p> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> <p>Supported browsers</p> <p>Check the supported browsers  for the Volt Foundry Console.</p> <p>Prerequisites for Volt Foundry Containers Helm Installation</p> <p>Check the prerequisites  when using the Volt Foundry Containers Helm Installation.</p> <p>Requirements for Volt Foundry Single Container Solution</p> <ul> <li>Prerequisites </li> <li>Software requirements </li> <li>Hardware requirements </li> </ul>"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html#for-volt-iris","title":"For Volt Iris","text":"On WindowsOn Mac <p>Operating System</p> <p>Windows 11, Windows 10, Windows 8.1 Update. Supports 64-bit Operating Systems</p> <p>Hardware</p> Component Requirement Processor and Architecture Dual Core processor, 64-bit RAM 8 GB Internal Storage 2 GB Network Ethernet Port <p>Operating System</p> <p>Supported macOS versions </p> <p>Hardware</p> Component Requirement Processor x86-64 CPU, M1/M2 CPU(64-bit Mac with an Intel Core i3, i5, i7, Intel Xeon processor or M1, M2 ARM processor) RAM 8 GB Internal Storage 24 GB Network Ethernet Port"},{"location":"tutorials/installupgrade/sysreq/sysreq21.html#next-step","title":"Next step","text":"<ul> <li> <p>To install the server components of Volt MX Go, proceed to Install Volt MX Go server components.</p> </li> <li> <p>To upgrade the server components of Volt MX Go, proceed to Upgrade Volt MX Go server components.</p> </li> <li> <p>To install and upgrade Volt Iris, proceed to Install and upgrade Volt Iris.</p> </li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/index.html","title":"Upgrade Volt MX Go server components","text":"<p>The topic guides you in upgrading the following server components of Volt MX Go.</p> <ul> <li>Volt Foundry</li> <li>Domino REST API</li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/index.html#volt-mx-go-v100","title":"Volt MX Go v10.0","text":"<p>The upgrade process for Volt Foundry in Volt MX Go v10 differs from other releases. In Volt MX Go v10, the supported version of Volt Foundry is installed and then activated with a Volt MX Go license in My HCLSoftware Portal for the Volt MX Go features to work.</p> <p>Using this installation option would require you to use your own Domino server.</p> <p>Before starting the installation, ensure you meet the System requirements.  </p> <p>Proceed to the upgrade instructions.</p> Volt MX Go v2.1 up to 2.1.2 Volt MX Go v2.0.4 or earlier - EOS"},{"location":"tutorials/installupgrade/upgradeserver/index.html#volt-mx-go-v21-up-to-212","title":"Volt MX Go v2.1 up to 2.1.2","text":"<p>Important</p> <ul> <li> <p>The upgrade processes for Volt Foundry in the Volt MX Go v2.1 up to v2.1.2 differ from other releases:</p> <ul> <li> <p>Volt Foundry is first installed, followed by installing the necessary plugins using the Volt MX Go Plugin Installer. The plugins enable the capabilities unique to Volt MX Go. Additionally, the plugins must be reinstalled each time Volt Foundry is upgraded.</p> </li> <li> <p>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</p> </li> </ul> </li> <li> <p>Using this installation option would require you to use your own Domino server.</p> </li> <li> <p>Before starting the installation, make sure to verify that you meet the System requirements.</p> </li> </ul> <ul> <li>Proceed to the upgrade instructions</li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/index.html#volt-mx-go-v204-or-earlier-eos","title":"Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Proceed to the upgrade instructions</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html","title":"Volt MX Go v10","text":"<p>Guides you in upgrading Volt MX Go server components.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#upgrade-domino-rest-api","title":"Upgrade Domino REST API","text":""},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the required version of the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the relevant steps in the upgrade procedure  in the HCL Domino REST API documentation  based on your installation platform.</p> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#upgrade-volt-foundry","title":"Upgrade Volt Foundry","text":"<p>The following procedures guide you in upgrading Volt Foundry to the latest version. As Volt Foundry supports various installation mechanisms, refer to the relevant upgrade procedure.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#for-using-an-installer","title":"For using an installer","text":"<p>The upgrade process works by upgrading the existing database to the latest version, and installing fresh application server artifacts, such as data sources and WARs. For installation details such as hostname, database port, prefix, suffix, you must refer to the installation logs of your previous setup.</p> <p>The installer doesn't support automatic backups of database and other artifacts. You must clean up the existing application server artifacts and take a backup of the custom artifacts. The installer also doesn't support rollback in case of a failure during the upgrade. To roll back, restore the database and server artifacts you backed up before upgrading.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#before-you-begin_1","title":"Before you begin","text":"<ul> <li> <p>Back up your databases and server artifacts.</p> </li> <li> <p>Download the latest Volt Foundry installer based on your installation platform. The minimum supported version is v10.0.1. For more information, see Download HCL Volt MX Go installers.</p> </li> <li> <p>Ensure that the Volt Foundry installer has execute permission.</p> </li> <li>Ensure that you have the path of your previous installation directory.</li> <li>Ensure that you stop the application server of your existing Volt Foundry instance, which you want to upgrade.</li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#install-volt-foundry","title":"Install Volt Foundry","text":"<ul> <li> <p>Follow the link to the upgrade procedure based on your used installation platform. </p> <p>Important</p> <ul> <li>Volt Foundry must be licensed with a Volt MX Go entitlement for the Volt MX Go features to work.</li> <li>The upgrade procedure indicates installation files and installation file download locations. You must use the installer you downloaded in Before you begin.</li> <li>Check all the details and complete all the applicable steps indicated in the upgrade procedure.</li> <li> <p>Make sure to point to the same database you used for your previous Volt Foundry installation to access all the projects you worked on.</p> </li> <li> <p>After completing the installation, a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation. </p> </li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using Helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#before-you-begin_2","title":"Before you begin","text":"<p>You have downloaded the Volt Foundry Helm charts. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#procedure_1","title":"Procedure","text":"<ol> <li> <p>Click the link to the upgrade guide based on your requirement and follow the steps. </p> <ul> <li> <p>Upgrade Individual Foundry Components </p> </li> <li> <p>Upgrade All Foundry Components </p> </li> </ul> <p>Important</p> <p>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</p> </li> <li> <p>After completing all applicable steps in the installation guide, update the <code>values.yaml</code> file.</p> <ol> <li>Locate the <code>values.yaml</code> file in the Volt Foundry directory.</li> <li>Open the <code>values.yaml</code> file with your preferred editor and locate the line containing the <code>imageRegistry:</code> key.</li> <li>Change the value of the <code>imageRegistry:</code> key to <code>hclcr.io/voltmxgo</code>.</li> <li>Save your changes and close the file.</li> </ol> </li> <li> <p>Execute the <code>helm upgrade foundry</code> command to upgrade the running images to use Volt MX Go.</p> </li> </ol> <p>Important</p> <p>After completing the installation, a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation.</p>"},{"location":"tutorials/installupgrade/upgradeserver/upgradev10.html#next-step","title":"Next step","text":"<p>Before proceeding, make sure you have activated Volt Foundry using a Volt MX Go license in the My HCLSoftware Portal for the Volt MX Go features to work. For more information, see the license activation guide  on the Volt MX documentation.</p> <p>After completing the upgrade installation of Domino REST API and Volt Foundry, proceed to Install and upgrade Volt Iris.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html","title":"Volt MX Go v2.0.4 or earlier - EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Guides you in upgrading Volt MX Go server components.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#upgrade-domino-rest-api","title":"Upgrade Domino REST API","text":""},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the required version of the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the relevant steps in the upgrade procedure  in the HCL Domino REST API documentation  based on your installation platform.</p> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#upgrade-volt-foundry","title":"Upgrade Volt Foundry","text":"<p>The following procedures guide you in upgrading Volt Foundry to the latest version. As Volt Foundry supports various installation mechanisms, refer to the relevant upgrade procedure.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#for-using-an-installer","title":"For using an installer","text":"<p>Important</p> <p>The upgrade process works by upgrading the existing database to the latest version, and installing fresh application server artifacts, such as data sources and WARs. For installation details such as hostname, database port, prefix, suffix, you must refer to the installation logs of your previous setup.</p> <p>The installer does not support automatic backups of database and other artifacts. You must clean up the existing application server artifacts and take a backup of the custom artifacts. The installer also does not support rollback in case of a failure during the upgrade. To roll back, restore the database and server artifacts you backed up before upgrading.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#before-you-begin_1","title":"Before you begin","text":"<ul> <li>Back up your databases and server artifacts.</li> <li> <p>You have downloaded the latest Volt Foundry installer based on your used installation platform/option. For more information, see Download HCL Volt MX Go installers.</p> </li> <li> <p>Ensure that the Volt Foundry installer has execute permission.</p> </li> <li>Ensure that you have the path of your previous installation directory.</li> <li>Ensure that you stop the application server of your existing Volt Foundry instance, which you want to upgrade.</li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#procedure_1","title":"Procedure","text":"<ul> <li> <p>Follow the link to the upgrade procedure based on your used installation platform:</p> <p>Important</p> <ul> <li>The upgrade procedure will indicate installation files and installation file download locations. You must use the installer you downloaded in Before you begin.</li> <li>Check all the details and complete all the applicable steps indicated in the upgrade procedure.</li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using Helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#before-you-begin_2","title":"Before you begin","text":"<ol> <li> <p>Create a temp directory for the charts.</p> <p>Run the following to create a temp directory for downloading the charts, and make it the current directory:</p> <p>Command: <pre><code>mkdir ~/&lt;new directory name&gt;\ncd ~/&lt;new directory name&gt;\n</code></pre></p> <p>Example: <pre><code>mkdir ~/mxgo201\ncd ~/mxgo201\n</code></pre></p> <p>In the example, you create a new directory <code>mxgo201</code> that will contain the new Helm charts. Creating the new directory allows you to differentiate and compare the Helm charts from different MX Go versions.</p> </li> <li> <p>Configure Helm to pull from HCL Container Repository.</p> <p>You need your email and authentication token used with the HCL Container Repository.</p> <ol> <li> <p>Run the following command to check if <code>hclcr</code> is already defined:</p> <pre><code>helm repo list\n</code></pre> </li> <li> <p>If <code>hclcr</code> is already defined, proceed to Download Foundry charts step. Otherwise, execute the following step to set up Helm.</p> <p>Note</p> <p>If <code>hclcr</code> points to voltmxgo-ea, you should remove it and then proceed to the next step to set up Helm.</p> </li> <li> <p>Run the following command to set up Helm:</p> <pre><code>helm repo add hclcr https://hclcr.io/chartrepo/voltmxgo --username &lt;your hclcr username&gt; --password &lt;your hclcr password&gt;\n</code></pre> <p>Example</p> <p><code>helm repo add hclcr https://hclcr.io/chartrepo/voltmxgo --username user.name@example.com --password xx3ds2w</code></p> <p>Note</p> <p>Use the CLI secret value you saved from obtaining authentication token from HCL Container Repository as your authentication token or password.</p> <p>If you get an error message similar to the following:</p> <pre><code>Error: looks like https://hclcr.io/chartrepo/voltmxgo is not a valid chart repository or cannot be reached: failed to fetch https://hclcr.io/chartrepo/voltmxgo/index.yaml : 401 Unauthorized\n</code></pre> <p>Most likely, you haven't specified your username or authentication token correctly. Make sure the case and content matches exactly what's listed on the HCL Container Repository site and retry.</p> </li> </ol> </li> <li> <p>Download Foundry charts.</p> <ol> <li> <p>Run the following command to make sure that the chart information for the repositories is up-to-date.</p> <pre><code>helm repo update\n</code></pre> <p>See Volt MX Go and Helm chart version compatibility to know the latest Helm chart version.</p> </li> <li> <p>Run the following commands to download the Foundry charts, unpack the files, and move the <code>values.yaml</code> file to the current directory:</p> <pre><code>mkdir foundry\ncd foundry\nhelm pull hclcr/voltmx-dbupdate\nhelm pull hclcr/voltmx-foundry\ntar -xzf voltmx-foundry-1.n.n.tgz\ntar -xzf voltmx-dbupdate-1.n.n.tgz\nmv voltmx-foundry/values.yaml  ./\nmv voltmx-foundry/init-guids.sh  ./\nchmod +x init-guids.sh\n</code></pre> <p>Note</p> <p>The foundry and dbupdate chart names have a version string in the filename. The <code>helm pull</code> command will pull down the latest version of the charts. Ensure your tar command uses the correct matching file names.</p> </li> </ol> </li> <li> <p>Obtain the <code>upgrade.properties</code> file from your prior deployment and copy it into the same directory as your <code>values.yaml</code>.</p> </li> <li> <p>Invoke the init-guids script specifying the path of the prior deployment's <code>upgrade.properties</code> by running the following command:</p> <pre><code>./init-guids.sh --upgrade ./\n</code></pre> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#procedure_2","title":"Procedure","text":"<ol> <li>Update the <code>values.yaml</code> file of the target upgrade version with custom settings you want to apply from the <code>values.yaml</code> file of your current installation.</li> <li> <p>Remove the dbupdate deployment by running the following command:</p> <pre><code>helm uninstall dbupdate -n mxgo\n</code></pre> </li> <li> <p>Scale down existing Volt Foundry deployments to zero by running the following commands:</p> <pre><code>kubectl scale deployment --replicas=0 voltmx-foundry-console\nkubectl scale deployment --replicas=0 voltmx-foundry-apiportal\nkubectl scale deployment --replicas=0 voltmx-foundry-integration\nkubectl scale deployment --replicas=0 voltmx-foundry-identity\n</code></pre> </li> <li> <p>Confirm that the ready count has dropped to zero by running the following command:</p> <pre><code>kubectl get deployment\n</code></pre> <p>You should get an output similar to the following where the ready count has dropped to zero:</p> <pre><code>NAME                         READY   UP-TO-DATE   AVAILABLE   AGE\ndrapi                        1/1     1            1           5h40m\nvoltmx-foundry-console       0/0     0            0           51m\nvoltmx-foundry-identity      0/0     0            0           51m\nvoltmx-foundry-integration   0/0     0            0           51m\nvoltmx-foundry-apiportal     0/0     0            0           51m\n</code></pre> </li> <li> <p>Confirm the removal of the pods by running the following command:</p> <pre><code>kubectl get pods\n</code></pre> <p>You should get an output similar to the following where the Volt Foundry pods have been removed:</p> <pre><code>NAME                      READY   STATUS      RESTARTS   AGE\ndrapi-6949c45b8-wghbz     3/3     Running     0          5h40m\nmysql-0                   1/1     Running     0          5h36m\n</code></pre> </li> <li> <p>Within the directory containing the new Volt Foundry charts, upgrade the databases by running the following command:</p> <pre><code>helm install dbupdate voltmx-dbupdate -f values.yaml\n</code></pre> </li> <li> <p>After a successful database upgrade, upgrade the Volt Foundry applications by running the following command:</p> <pre><code>helm upgrade foundry voltmx-foundry -f values.yaml\n</code></pre> <p>This updates the deployment configuration and spins up new pods to run the latest version of the applications.</p> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/versionupgrade.html#next-step","title":"Next step","text":"<p>After completing the upgrade installation of Domino REST API and Volt Foundry, proceed to Install and upgrade Volt Iris.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html","title":"Volt MX Go v2.1 up to v2.1.2","text":"<p>Guides you in upgrading Volt MX Go server components.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#upgrade-domino-rest-api","title":"Upgrade Domino REST API","text":""},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#before-you-begin","title":"Before you begin","text":"<p>Important</p> <p>Make sure to check version compatibility between Volt MX Go and Domino REST API.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#procedure","title":"Procedure","text":"<ol> <li> <p>Download the required version of the Domino REST API installer. For more information, see Download the Domino REST API  in the HCL Domino REST API documentation.</p> </li> <li> <p>Follow the relevant steps in the upgrade procedure  in the HCL Domino REST API documentation  based on your installation platform.</p> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#upgrade-volt-foundry","title":"Upgrade Volt Foundry","text":"<p>The following procedures guide you in upgrading Volt Foundry to the latest version. As Volt Foundry supports various installation mechanisms, refer to the relevant upgrade procedure.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#for-using-an-installer","title":"For using an installer","text":"<p>The upgrade process works by upgrading the existing database to the latest version, and installing fresh application server artifacts, such as data sources and WARs. For installation details such as hostname, database port, prefix, suffix, you must refer to the installation logs of your previous setup.</p> <p>The installer doesn't support automatic backups of database and other artifacts. You must clean up the existing application server artifacts and take a backup of the custom artifacts. The installer also doesn't support rollback in case of a failure during the upgrade. To roll back, restore the database and server artifacts you backed up before upgrading.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#before-you-begin_1","title":"Before you begin","text":"<ul> <li> <p>Back up your databases and server artifacts.</p> </li> <li> <p>Download the latest Volt Foundry installer based on your installation platform. The minimum supported version is v9.5.18.0. For more information, see Download HCL Volt MX Go installers.</p> <p>Note</p> <p>If you wish to upgrade to Volt Foundry v10.0.0.0, read and understand the knowledge base article .</p> </li> <li> <p>Download and install the latest Volt MX Go Plugin Installer. For more information, see Install Volt MX Go Plugin Installer.</p> </li> <li> <p>Ensure that the Volt Foundry installer has execute permission.</p> </li> <li>Ensure that you have the path of your previous installation directory.</li> <li>Ensure that you stop the application server of your existing Volt Foundry instance, which you want to upgrade.</li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#install-volt-foundry","title":"Install Volt Foundry","text":"<ul> <li> <p>Follow the link to the upgrade procedure based on your used installation platform. </p> <p>Important</p> <ul> <li>For Volt MX Go v2.1 up to the latest release, only Volt Foundry using a Tomcat non-clustered application server is supported.</li> <li>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</li> <li>The upgrade procedure indicates installation files and installation file download locations. You must use the installer you downloaded in Before you begin.</li> <li>Check all the details and complete all the applicable steps indicated in the upgrade procedure.</li> <li> <p>Make sure to point to the same database you used for your previous Volt Foundry installation to access all the projects you worked on.</p> </li> <li> <p>After completing the installation, activate the Volt MX Go license on Volt Foundry and then shut it down before proceeding to the installation of the Volt MX Go plugins. For more information, see the following license activation guides on the Volt MX documentation:</p> <p>For Volt Foundry version 9.5.20.0 and onwards </p> <p>For Volt Foundry versions earlier than 9.5.20.0 </p> </li> </ul> <ul> <li> <p>For Windows </p> </li> <li> <p>For Linux </p> </li> </ul> </li> </ul>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#install-volt-mx-go-plugins","title":"Install Volt MX Go plugins","text":"<p>The procedure enables the installation of Volt MX Go plugins to Volt Foundry to enable Volt MX Go features.</p> <p>Important</p> <ul> <li>For Volt MX Go v2.1 up to the latest release, you can only install Volt MX Go plugins to Volt Foundry that uses a Tomcat non-clustered application server.</li> <li>Volt Foundry must be licensed with a Volt MX Go entitlement for the plugins to be enabled and for the Volt MX Go features to work.</li> </ul> on Linuxon Windows <ol> <li>Open Terminal.</li> <li>Go to the directory where you installed the Volt MX Go Plugin Installer.</li> <li> <p>Run the Volt MX Go Plugin Installer by entering the following command and press Enter</p> <p><code>./VoltMXGoPluginInstaller</code></p> <p>The installation tool opens on the Terminal showing the available options.</p> <p></p> </li> <li> <p>Enter 1 to install Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation or enter the full path to your Tomcat WebApps directory, and then press Enter.</p> <p>You get a confirmation statement that the plugins have been installed.</p> </li> <li> <p>Enter 7 and press Enter to exit the installation tool. </p> </li> </ol> <ol> <li> <p>Select\u00a0Start, scroll through the alphabetical list, and select Volt MX Go Plugin Installer. Depending on your OS, you might need to select All apps, scroll through the alphabetical list, and click Volt MX Go Plugin Installer.</p> <p>OR</p> <p>Double-click the Volt MX Go Plugin Installer shortcut on your desktop if available. </p> <p>A Command Prompt window opens showing the available options.</p> <p></p> </li> <li> <p>Enter 1 to install Volt MX Go plugins and press Enter.</p> </li> <li> <p>Specify the Tomcat WebApps directory by entering the number corresponding to your installation, or enter the full path to your Tomcat WebApps directory, then press Enter. </p> <p>You get a confirmation statement that the plugins have been installed. </p> </li> <li> <p>Press Enter to close the Command Prompt window.</p> </li> </ol> <p>Note</p> <p>After installing the Volt MX Go plugins, open Volt Foundry to verify you see the Volt MX GO/First Touch banner.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#important-consideration","title":"Important consideration","text":"<p>There are regular updates for Volt Foundry. These updates are major release versions, service packs, and fix packs.</p> <p>You must reinstall the Volt MX Go plugins every time you update Volt Foundry.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#for-using-helm-charts-on-a-supported-kubernetes-platform","title":"For using Helm charts on a supported Kubernetes platform","text":""},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#before-you-begin_2","title":"Before you begin","text":"<p>You have downloaded the Volt Foundry Helm charts. For more information, see Download HCL Volt MX Go installers.</p>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#procedure_1","title":"Procedure","text":"<ol> <li> <p>Click the link to the upgrade guide based on your requirement and follow the steps. </p> <ul> <li> <p>Upgrade Individual Foundry Components </p> </li> <li> <p>Upgrade All Foundry Components </p> </li> </ul> <p>Important</p> <p>Make sure to check all the details and complete all the applicable steps indicated in the installation guide.</p> </li> <li> <p>After completing all applicable steps in the installation guide, update the <code>values.yaml</code> file.</p> <ol> <li>Locate the <code>values.yaml</code> file in the Volt Foundry directory.</li> <li>Open the <code>values.yaml</code> file with your preferred editor and locate the line containing the <code>imageRegistry:</code> key.</li> <li>Change the value of the <code>imageRegistry:</code> key to <code>hclcr.io/voltmxgo</code>.</li> <li>Save your changes and close the file.</li> </ol> </li> <li> <p>Execute the <code>helm upgrade foundry</code> command to upgrade the running images to use Volt MX Go.</p> </li> </ol>"},{"location":"tutorials/installupgrade/upgradeserver/versupgradedrapi.html#next-step","title":"Next step","text":"<p>After completing the upgrade installation of Domino REST API and Volt Foundry, proceed to Install and upgrade Volt Iris.</p>"},{"location":"whatsnew/index.html","title":"What's new","text":"<p>The section provides information on the latest features, improvements, and resolved issues related to Volt MX Go.</p> <ul> <li> <p>Volt MX Go v10.0</p> </li> <li> <p>Volt MX Go v2.1.2</p> </li> <li> <p>Volt MX Go v2.1.1</p> </li> <li> <p>Volt MX Go v2.1</p> </li> </ul> <p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <ul> <li> <p>Volt MX Go v2.0.4 EOS</p> </li> <li> <p>Volt MX Go v2.0.3 EOS</p> </li> <li> <p>Volt MX Go v2.0.2 EOS</p> </li> <li> <p>Volt MX Go v2.0.1 EOS</p> </li> <li> <p>Volt MX Go v2.0 EOS</p> </li> </ul>"},{"location":"whatsnew/v100.html","title":"What's new in Volt MX Go v10.0","text":"<p>Release date - September 22, 2025</p>"},{"location":"whatsnew/v100.html#new-features","title":"New features","text":"<ul> <li> <p>Volt MX Go components are now pre-installed with Volt Foundry v10.0.1 and Volt Iris v10.0.1 and higher, allowing users to access Volt MX Go features while benefiting from enhancements to Volt Foundry and Volt Iris. A separate installer is no longer needed to enable the Volt MX Go components in Volt Foundry and Volt Iris.</p> <p>It's important to note that a Volt MX Go license must be used to activate Volt Foundry in the My HCLSoftware Portal for Volt MX Go features to work.</p> </li> <li> <p>VoltScript is now available as a custom code technology adapter for Volt Foundry Integration Service.</p> <ul> <li>For more information on enabling VoltScript, see Enable VoltScript in Volt Foundry.</li> <li>To learn more about VoltScript, see the VoltScript Documentation .</li> </ul> </li> <li> <p>The Apache CouchDB<sup>1</sup> adapter is now available as a business adapter for the Volt Foundry Object Service, enabling seamless integration between Volt Foundry applications and Apache CouchDB databases.</p> <p>To learn more about the Apache CouchDB adapter, refer to the related topic guide and complete the tutorial.</p> </li> </ul>"},{"location":"whatsnew/v100.html#design-import","title":"Design Import","text":"<ul> <li> <p>The Designer Profile feature stores the information you enter in the Design Import Wizard when creating an Identity Service in a profile. This profile can be reused the next time you start Design Import to allow you to go directly to the Scope and Forms page. This streamlines the import process, which enables quicker access to the design elements to be imported.</p> <p>For more information, see Import a Domino application.</p> </li> <li> <p>Implemented the <code>GroupByList</code> component for imported views in Volt Iris, enabling users to customize data display and grouping for improved data organization and user experience in Volt Iris-published Domino applications.</p> </li> <li> <p>The logout action is now supported from the logout button in the header of all forms within the Volt Iris-published Domino application.  </p> </li> </ul>"},{"location":"whatsnew/v100.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li>Added support for the view column <code>isHidden</code> property. For more information, see Column characteristics.</li> </ul>"},{"location":"whatsnew/v100.html#voltformula","title":"VoltFormula","text":""},{"location":"whatsnew/v100.html#volt-iris","title":"Volt Iris","text":"<ul> <li> <p>Users can now use formula language to define the following UI widget properties:</p> <ul> <li>Visible</li> <li>Text</li> <li>ToolTip</li> <li>Enable Blur</li> <li>Mask Text</li> <li>Max Characters</li> <li>Sensitive Text</li> </ul> <p>For more information, see Define widget properties using formula language.</p> </li> <li> <p>Added a new Converter Configuration option that enables a user to specify how to handle unknown or undefined variables in formula parameters. For more information see Configure VoltFormula.</p> </li> </ul>"},{"location":"whatsnew/v100.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v100.html#design-import_1","title":"Design Import","text":"<ul> <li> <p>Enhances the user experience when creating a new identity service using the Design Import Wizard, as users can now verify the entered value in the App Secret field on the Create New Identity Service page by clicking and holding the eye icon to display the masked value.</p> </li> <li> <p>Added a tooltip on the Create New Identity Service page in the Design Import Wizard to inform users that an MXGO prefix will be added to their input in the Service Name field.</p> </li> </ul>"},{"location":"whatsnew/v100.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li>Improved user experience when using the configured Object Service in Volt Foundry, as the connection timeout to the Domino REST API has been extended, resulting in fewer login prompts.</li> </ul>"},{"location":"whatsnew/v100.html#voltformula_1","title":"VoltFormula","text":""},{"location":"whatsnew/v100.html#rosetta-api","title":"Rosetta API","text":"<ul> <li> <p>The Rosetta-only specific functions are now classified under a new Custom category, making it easier to identify those functions exclusive to the Rosetta formula language.</p> </li> <li> <p>The Rosetta-only specific functions <code>debug()</code>, <code>context()</code>, and <code>restfulAPI()</code> are now usable from OpenFormula as <code>=DEBUG</code>, <code>=CONTEXT</code>, and <code>=RESTFULAPI</code>, respectively.</p> </li> <li> <p>Updated the Rosetta API reference documentation.</p> </li> </ul>"},{"location":"whatsnew/v100.html#volt-iris_1","title":"Volt Iris","text":"<ul> <li>Updated formula samples for <code>@Debug</code>,\u00a0<code>@Context</code>, and\u00a0<code>@RestfulAPI</code> Rosetta-only specific functions.</li> </ul>"},{"location":"whatsnew/v100.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v100.html#design-import_2","title":"Design Import","text":"<ul> <li> <p>Fixed issue with form generation if the <code>@Prompt</code> Formula Language component was added to a project. Also addressed the issue where the Update form mappings malfunctioned after saving or reloading when the <code>@Prompt</code> Formula Language component was added to a project.</p> </li> <li> <p>Resolved the issue with field selection in the Design Import Wizard, ensuring that only the chosen fields appear in the generated application.</p> </li> <li> <p>Fixed the issue that generated an error when clicking the Refresh icon on the Scope and Forms page of the Design Import Wizard. </p> </li> </ul>"},{"location":"whatsnew/v100.html#domino-adapter_2","title":"Domino Adapter","text":"<ul> <li>Fixed the issue related to invalid mapping for the delete object when generating forms for an object service that has both Form and View data models.</li> </ul>"},{"location":"whatsnew/v100.html#voltformula_2","title":"VoltFormula","text":"<ul> <li> <p>Fixed the issue in the conversion mechanism that removed the <code>@</code> character from all Notes @functions that use no parentheses, such as <code>@True</code>.</p> </li> <li> <p>Fixed the CORS issue related to Domino REST API.</p> </li> </ul>"},{"location":"whatsnew/v100.html#volt-iris_2","title":"Volt Iris","text":"<ul> <li> <p>Fixed the issue with the incorrect rendering of checkboxes and radio buttons in a Volt Iris-published Domino application.</p> </li> <li> <p>Fixed the issue where a user was unable to click the last item in an Agent list in a Volt Iris-published Domino application.</p> </li> </ul>"},{"location":"whatsnew/v100.html#others","title":"Others","text":""},{"location":"whatsnew/v100.html#domino-adapter_3","title":"Domino Adapter","text":"<ul> <li>Added examples for querying date ranges. For details, see the examples table in Supported OData query parameters for form-based GET method.</li> </ul> <ol> <li> <p>Apache CouchDB and CouchDB are trademarks of The Apache Software Foundation.\u00a0\u21a9</p> </li> </ol>"},{"location":"whatsnew/v200.html","title":"Volt MX Go v2.0 EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>HCL Volt MX Go v2.0 allows you to extend the value of your Domino applications using the industry-leading, multi-experience platform Volt MX. The innovative features of Volt MX Go include:</p> <ul> <li>VoltFormula for expanding who can code applications built in Domino and allowing app modernization without a complete code rewrite </li> <li>Design Import for importing existing Domino views, forms, and fields into Volt Foundry, giving you a head start on modernizing or creating new multi-experience applications in Volt Iris that are connected to your Domino back-end data and applications</li> <li>Domino Adapter and Domino REST API for connecting Volt Foundry to your Domino applications</li> <li>First Touch for guiding users in establishing connections and importing sample apps into Volt Foundry</li> </ul>"},{"location":"whatsnew/v201.html","title":"What's new in Volt MX Go v2.0.1 EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Release date - October 2, 2023</p>"},{"location":"whatsnew/v201.html#new-features","title":"New features","text":""},{"location":"whatsnew/v201.html#design-import","title":"Design Import","text":"<ul> <li>Rich text support: Added Summernote Editor component in the Design Import wizard; will recognize a rich text field and present Summernote Editor to work with the rich text.</li> </ul>"},{"location":"whatsnew/v201.html#voltformula","title":"VoltFormula","text":"<ul> <li>Added new API implementation in Date-Time category, List category, and User environment category on the Notes Formula.</li> </ul>"},{"location":"whatsnew/v201.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v201.html#design-import_1","title":"Design Import","text":"<ul> <li>Single scope support is now available and is compatible with Domino REST API v1.0.7.</li> <li>When a pre-existing Domino REST API service is used, the wizard can now manage multiple services in addition to the one generated by the wizard.</li> <li>Multivalue fields are now presented as a scrollable bulleted list rather than a comma separated list.</li> <li>Sort the scope list alphabetically in the view form.</li> <li>Optimized design workflow - unavailable fields are hidden in unconfigured forms.</li> </ul>"},{"location":"whatsnew/v201.html#voltformula_1","title":"VoltFormula","text":"<ul> <li> <p>API</p> <ul> <li>Document Category<ul> <li>Change <code>SetField</code> to Commit DB changes to the server.</li> <li>New default for API Context: <code>'all'</code>; for use by <code>GetField</code>/<code>SetField</code></li> <li><code>FileSave</code> enhancements</li> </ul> </li> <li> <p>Exposed Volt MX-specific functions in API.</p> </li> <li> <p>Updates to API Reference Documentation </p> </li> </ul> </li> <li> <p>Volt Iris</p> <ul> <li>IntelliSense:<ul> <li>Allow lookups for multiple levels in OpenFormula.</li> <li>Support wildcard category search by using an asterisk.</li> <li>Type-ahead is now a function argument for formula language and JavaScript.</li> <li>Find the component body for a module.</li> </ul> </li> <li>Code Editors:<ul> <li>Action editor improvements for formula snippet</li> <li>Delay formula conversion call with configurable milliseconds timer</li> <li>Show formula results on-demand</li> </ul> </li> <li>Added log information about VoltFormula download and initialization status.</li> <li>Added configuration settings and statics in the project configuration.</li> </ul> </li> </ul>"},{"location":"whatsnew/v201.html#first-touch","title":"First Touch","text":"<ul> <li>First Touch Recipes Catalog app includes additional functionality to bring up a list of related recipes from the same cuisine when checking a recipe.</li> <li>Implemented general improvements to the mobile version.</li> </ul>"},{"location":"whatsnew/v201.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v201.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li>Using special characters as part of the search parameter for the <code>$filter</code> in the <code>GET</code> method returned errors. An example is the <code>=</code> sign in the search parameter value <code>col1 eq B=S</code>. Performing GET method with <code>$filter=col1 eq B=S</code> would return an error. You have to enter it as <code>$filter=col1 eq Bx_003dS</code>.</li> <li>The <code>$FILES</code> field wasn't usable for the <code>$filter</code> query parameter to find documents with a specified attachment, for example, <code>$filter=x_0024FILES eq attName.txt</code>. </li> <li>An incorrect access token was used for an operation when multiple users performed operations simultaneously while using a shared connection instance to a Domino REST API server.  </li> <li>Volt Iris threw an exception on a <code>GET</code> operation on view data models when the maximum depth of the view hierarchy is more than two hierarchy levels. An example of a view hierarchy with more than two hierarchy levels is a document with a response and a response to that response.</li> </ul>"},{"location":"whatsnew/v201.html#voltformula_2","title":"VoltFormula","text":"<ul> <li>API Fixes<ul> <li>Fixed the 0 second or minute in @Date function.</li> <li>Fixed documentation of arrays.</li> <li>Removed <code>Compatibility</code> category in the API Reference.</li> <li>Fixed use of the function MROUND instead of ROUND.</li> <li>Fixed the Notes <code>@ReplaceSubstring</code> bug.</li> <li>Fixed the API reference for Note <code>businessDays</code>.</li> </ul> </li> </ul>"},{"location":"whatsnew/v201.html#others","title":"Others","text":"<ul> <li> <p>Added details related to kubectl commands failing in Troubleshooting.</p> </li> <li> <p>Added details related to using helm charts on supported Kubernetes platform in Known limitations.</p> </li> <li> <p>Added upgrade procedures in Installation and upgrade. </p> </li> </ul>"},{"location":"whatsnew/v201.html#first-touch_1","title":"First Touch","text":"<ul> <li>Added procedure for importing First Touch into Volt Iris.</li> </ul>"},{"location":"whatsnew/v201.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li> <p>Added procedure for generating CRUD forms for an Object Service.</p> </li> <li> <p>Added details related to deleting offline documents in Known limitations.</p> </li> <li> <p>Added known limitation related to deleting offline documents.</p> </li> </ul>"},{"location":"whatsnew/v201.html#voltscript-early-access","title":"VoltScript Early Access","text":"<p>VoltScript is a BASIC  scripting language for use with HCL Volt MX Go as a server-side scripting language running within the Foundry middleware layer. VoltScript includes:</p> <ul> <li>Visual Studio Code extension for allowing developers to write code in VS Code</li> <li>Linux Docker image for allowing Mac developers to use the VS Code extension</li> <li>Language enhancements for improving consistency and ease of use</li> <li>Open-source helpers, such as a library with advanced collection and map collections, a unit testing framework, and a serializer and deserializer for JSON-based object persistence</li> <li>A toolkit for scaffolding the various VoltScript extensions and script code and autogenerating starter code and related documentation</li> <li>Various VoltScript Extensions for supporting various processes, such as data access over HTTP to specific or generic REST services, handling JSON data, interacting with the operating system and files, managing input parameters</li> </ul> <p>To learn more about VoltScript and related components, see VoltScript Documentation .</p>"},{"location":"whatsnew/v202.html","title":"What's new in Volt MX Go v2.0.2 EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Release date - November 16, 2023</p>"},{"location":"whatsnew/v202.html#new-features","title":"New features","text":""},{"location":"whatsnew/v202.html#design-import","title":"Design Import","text":"<ul> <li>Uploading and downloading attachments in Domino applications are now enabled through Design Import as Domino REST API allows configuration of the <code>$FILES</code> field.  </li> <li>Domino applications can now be imported into Native Mobile and Tablet applications. </li> <li>The configuration of a single scope is now possible in the Identity Service of the Design Import wizard.</li> </ul>"},{"location":"whatsnew/v202.html#voltformula","title":"VoltFormula","text":"<ul> <li> <p>Added feature to register and unregister custom Rosetta APIs.</p> </li> <li> <p>Displays filename of custom formula extension in VoltFormula settings.</p> </li> </ul>"},{"location":"whatsnew/v202.html#improvements","title":"Improvements","text":"<ul> <li> <p>Volt IQ capabilities are now functional in Volt MX Go. For more information, see Volt IQ  in the HCL Volt MX documentation.</p> </li> <li> <p>You can now build Windows and macOS Desktop applications with the latest release of Volt MX Go.</p> </li> </ul>"},{"location":"whatsnew/v202.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li>Summernote Editor is automatically applied on Rich Text fields of CREATE and UPDATE forms when generating CRUD forms for Object Service.</li> </ul>"},{"location":"whatsnew/v202.html#voltformula_1","title":"VoltFormula","text":"<ul> <li> <p>Implemented the following updates to the Rosetta API Reference Documentation :</p> <ul> <li>Updated list category.</li> <li>Updated text category.</li> <li>Updated date-time category.</li> <li>Updated user-environment category.</li> <li>Updated Object object support for VoltMx framework.</li> <li>Added documentation for database and service methods under the API category for Volt MX Go-based APIs.</li> <li>Implemented updates on <code>package-lock.json</code> to include the new converter.</li> <li>Added documentation for the compatibility methods layer.</li> <li>Implemented use of latest converters that have a restructured usage of JS Native.</li> <li>Implemented offline object support for VoltMX framework.</li> </ul> </li> <li> <p>Supports native JavaScript when using OpenFormula.</p> </li> </ul>"},{"location":"whatsnew/v202.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v202.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li>An updated document wasn't displayed on the Details form, and updates were reflected on the first document of the NSF file due to the empty filter query parameter on one of the Service Action objects on the Details form. The issue was encountered for forms without the <code>$FILES</code> Domino field.</li> </ul>"},{"location":"whatsnew/v202.html#design-import_1","title":"Design Import","text":"<ul> <li>There was an unnecessary <code>Form1</code> after import completion.</li> <li>The scope can't be reloaded after performing Domino REST API modifications.</li> <li>Import crashed or stopped responding when there were duplicate form and field names, or there was a lack of array for forms, fields, views, and agents.</li> </ul>"},{"location":"whatsnew/v202.html#voltformula_2","title":"VoltFormula","text":""},{"location":"whatsnew/v202.html#rosetta-api","title":"Rosetta API","text":"<ul> <li>An issue occurred when generating definitions for custom API extensions.</li> <li>Replace Notes function wasn't providing accurate results when multiple instances used the same replacement values.</li> </ul>"},{"location":"whatsnew/v202.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Issues occurred with date-time conversion parameters when using the <code>@Explode</code> formula function.\u00a0</li> <li>The <code>=</code> sign was removed during OpenFormula conversion.</li> <li>An issue occurred with the SELECT conversion.</li> </ul>"},{"location":"whatsnew/v202.html#others","title":"Others","text":"<ul> <li>Updated Compatibility matrix.</li> </ul>"},{"location":"whatsnew/v202.html#voltformula_3","title":"VoltFormula","text":"<ul> <li>Removed the App Dev API Framework and App Dev Target Context from the Rosetta configuration file.</li> <li>Removed the Rosetta event.</li> <li>Removed the SelectDocuments API from the Rosetta and Notes functions.</li> <li>Notes formula functions <code>@Transform()</code> and <code>@Sort()</code> undergo additional processing during conversion in Rosetta Converters.</li> </ul>"},{"location":"whatsnew/v203.html","title":"What's new in Volt MX Go v2.0.3 EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Release date - May 2, 2024</p>"},{"location":"whatsnew/v203.html#new-features","title":"New features","text":""},{"location":"whatsnew/v203.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li> <p>Added BULK UPDATE method that enables updating an existing collection of documents by replacing only the specified fields in those documents.</p> <p>For more information, see Methods (Verbs).</p> </li> </ul>"},{"location":"whatsnew/v203.html#design-import","title":"Design Import","text":"<ul> <li>Supports importing Formula Language and bringing it into VoltFormula (client side).</li> <li>Validates forms and fields to be imported and informs the user of possible reasons why the forms and fields might not work as expected in the generated application and what actions to take.</li> <li>Provides users with access to reports related to validation issues to give them more detailed information. </li> <li>Imports Agents (server side) and Actions (client side) for use inside of a Volt Iris generated app.</li> <li>Supports importing Domino applications into tablet native applications.</li> </ul>"},{"location":"whatsnew/v203.html#voltformula","title":"VoltFormula","text":"<ul> <li> <p>Implemented new APIs for the text, date-time, formula, document, user-environment, logical, and information categories. </p> <p>For more details, see the Rosetta API reference documentation .</p> </li> <li> <p>Implemented Notes math operators as callable APIs.</p> </li> <li>Added a new formula evaluation results tab panel that displays formula outputs.</li> </ul>"},{"location":"whatsnew/v203.html#volt-iris","title":"Volt Iris","text":"<ul> <li>Supports integration of VoltFormula in imported Domino application views.</li> <li>Disabled VoltFormula for non-JavaScript code.</li> </ul>"},{"location":"whatsnew/v203.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v203.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li> <p>Supports uploading and downloading of attachments up to 1 GB in size via Volt Foundry binary APIs.</p> <p>For more information, see Attachments.</p> </li> <li> <p>Summernote Editor, which is automatically applied on Rich Text fields of CREATE and UPDATE forms when generating CRUD forms for Object Service, now supports inserting attachments.</p> <p>For more information, see Insert attachments via Summernote Editor.</p> </li> </ul>"},{"location":"whatsnew/v203.html#design-import_1","title":"Design Import","text":"<ul> <li>Enhances user experience by providing more information related to the import process at different steps of the Design Import Wizard.</li> <li>Supports Hierarchical View in imported Domino applications.</li> <li>Improvements in Rich Text import introduced with Domino Adapter enhancements.</li> <li>Added an option in the Design Import Wizard for deleting existing forms. </li> <li>Added a refresh feature in the Design Import Wizard to update the scope in case there are changes in the Domino REST API schema without exiting the wizard.</li> </ul>"},{"location":"whatsnew/v203.html#voltformula_1","title":"VoltFormula","text":""},{"location":"whatsnew/v203.html#rosetta-api","title":"Rosetta API","text":"<ul> <li>Simplified use of different Date types and provides <code>dateOrDateList</code> support for date, string, number, error, and arrays. </li> <li>Added Intellisense definitions for the <code>Set</code> Notes function for formula category APIs.</li> <li>Updated operation APIs to accept infinite operands.</li> <li>Updated math operation to adjust Dates during math operations from milliseconds to seconds.</li> <li> <p>Implemented the following improvement modifications:</p> Category Description date-time - Supports Domino time zones for <code>timeMerge()</code> API. - Updated <code>yesterday()</code> and <code>tomorrow()</code> to return date only.- Updated <code>date()</code> to accept milliseconds for internal call. text - Updated <code>abstract()</code> to throw NPTI.- Added format support for <code>text()</code>. document - Supported NOSORT option for <code>prompt()</code>.- Added <code>excludeMIMEBody</code> parameter for <code>attachments()</code> and <code>attachmentNames()</code>. formula - Updated <code>eval()</code> to detect valid return position both for async function. </li> <li> <p>Implemented improvements in error handling and fixes in the formula API implementations.</p> </li> </ul>"},{"location":"whatsnew/v203.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Implemented Formula to JavaScript conversion improvements in the areas of async usage, anonymous functions, parameter groupings, and variable definitions.</li> <li> <p>Implemented improvements in the conversion handling definition rules for converting formula functions into native JavaScript versus API calls. </p> <p>For more information, see VoltFormula options in the Volt Iris Project Settings dialog.</p> </li> <li> <p>Rosetta sample formulas are now part of the converters.</p> </li> <li>Supports passthrough setting in OpenFormula.</li> <li>Supports OpenFormula parameter separator semicolon.</li> <li>Supports Notes Formula date format having colon or dash.</li> <li>Supports Notes Formula time format having milliseconds.</li> <li>Supports chained assignments.</li> <li>Validates formula name existence. </li> <li>Converts Notes formula <code>@Set</code> and <code>@Length</code>, and Open formula <code>=LET</code> to JavaScript statement.</li> <li>Passed param for <code>@IsAvailable</code> and <code>@IsUnavailable</code> as string.</li> <li>Converts Notes operators to Rosetta APIs.</li> <li>Moved variable definition inside Notes formula to function scope.</li> <li>Made native js to anonymous function by condition and removed nativeness check for <code>do</code>, <code>while</code>, <code>doWhile</code>, and <code>for</code>.</li> <li>Cleanup variable definition conversion mixed with var and let to var.</li> <li>Converts openformula specific operators such as <code>&amp;</code>,<code>^</code>,<code>&lt;&gt;</code>.</li> <li>Converts the same operations to one api call with multiple parameters</li> <li><code>@DocChildren</code>, <code>@DocDescendants</code>, <code>@Eval</code>, <code>@Name</code>, <code>@Responses</code> to async list.</li> </ul>"},{"location":"whatsnew/v203.html#plugin","title":"Plugin","text":"<ul> <li>Provides sample formulas for Volt Iris using formulas from the converters.</li> <li>Improved Volt Iris VoltFormula plugin (mbaas_sdk_rosetta) loading and logging process.</li> </ul>"},{"location":"whatsnew/v203.html#volt-iris_1","title":"Volt Iris","text":"<ul> <li>Logs more details using Debug and Info log channels that focus on plugin inspection and download processes, resulting in improved plugin download logging and recovery.</li> <li>Enhanced the formula and JavaScript type-ahead (IntelliSense) capabilities within Volt Iris IDE.</li> <li>Updated VoltPrompt components with ability to bypass user interaction notification dialogs.</li> </ul>"},{"location":"whatsnew/v203.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v203.html#design-import_2","title":"Design Import","text":"<ul> <li>The UNID field was shown in the Update form after import.</li> <li>Some fields in the Update form had missing data after import. </li> <li>An issue occurred in the Design Import Wizard since the number of characters in the Object Service name exceeded the limitation.</li> </ul>"},{"location":"whatsnew/v203.html#voltformula_2","title":"VoltFormula","text":"<ul> <li>On the Action Editor in Volt Iris, the Add Formula action was shown for the Apple Watch channel even though JavaScript wasn't supported.</li> </ul>"},{"location":"whatsnew/v203.html#rosetta-api_1","title":"Rosetta API","text":"<ul> <li>Fixed examples in Notes formula documentation.</li> <li>Fixed Tern definition for Notes Date function.</li> <li>Fixed <code>Adjust()</code> to calculate date adjustments the way Notes does adjustments, that's right to left adjustments.</li> <li>Fixed TimeMerge API time portion parsing.</li> <li>For date-time category, fixed  how <code>Adjust</code> was handling leap years</li> <li>For text category, fixed <code>AbstractSimple</code> support for RichText fields.</li> <li>For text category, fixed how <code>TimeToTextInZone</code> determines yesterday.</li> <li>For date-time category, fixed how <code>Zone</code> handles no arguments.</li> <li>For miscellaneous category, fixed <code>SetEnvironment</code> to return void.</li> <li>For database utilities category, implemented fix to fetch the view documents when <code>setCurrentDocument</code> is called.</li> </ul>"},{"location":"whatsnew/v203.html#rosetta-converter_1","title":"Rosetta Converter","text":"<ul> <li>Fixed <code>@Environment</code> bug for having one parameter.</li> <li>Fixed curly bracket comment and return statement.</li> <li>Fixed Notes formula token rule for square bracket.</li> <li>Fixed <code>OpenInNewWindow</code> Command category.</li> <li>Fixed <code>@Eval</code> conversion having space in parenthesis.</li> </ul>"},{"location":"whatsnew/v203.html#others","title":"Others","text":"<ul> <li> <p>Updated Compatibility matrix.</p> </li> <li> <p>Updated Summernote Editor to include more information about its usage and how to configure its methods and properties.</p> </li> <li> <p>Updated Install Rancher Desktop to recommend installing the latest Rancher Desktop version and remove the port forwarding enabling procedure.</p> </li> </ul>"},{"location":"whatsnew/v203.html#domino-adapter_2","title":"Domino Adapter","text":"<ul> <li> <p>Updated Configure an object service for Domino procedure to include a step for completing the Return documents from Bulk Update text field.</p> </li> <li> <p>Added the Test the BULK UPDATE method for updating a collection of records procedure in the Domino Adapter tutorial.</p> </li> </ul>"},{"location":"whatsnew/v203.html#design-import_3","title":"Design Import","text":"<ul> <li> <p>Updated the Design Import tutorial to incorporate enhancements in the Design Import Wizard.</p> </li> <li> <p>Updated Troubleshooting to include Domino REST API schema issues and resolutions related to validating forms and fields to be imported using Design Import Wizard.</p> </li> </ul>"},{"location":"whatsnew/v203.html#voltformula_3","title":"VoltFormula","text":"<ul> <li> <p>Updated the Rosetta API reference documentation. Documentation links use the latest Domino Design docs.</p> </li> <li> <p>Added an API Implementation Status Table button on Rosetta API reference documentation  for tracking the implementation status of Notes and OpenFormula.</p> </li> </ul>"},{"location":"whatsnew/v203.html#voltscript-early-access","title":"VoltScript Early Access","text":"<p>The Early Access v2 release of VoltScript is now available and features a new VoltScript Extension for manipulating XML documents, XMLVSE, many improvements for existing VSEs and VSCode extensions, and a preview of an interactive debugger for VoltScript.</p> <p>To learn more about VoltScript and related components, see VoltScript Documentation .</p>"},{"location":"whatsnew/v204.html","title":"What's new in Volt MX Go v2.0.4 EOS","text":"<p>End of Support (EOS)</p> <p>HCL Volt MX Go v2.0.4 and earlier versions have reached End of Support (EOS) effective June 30, 2025. Kindly upgrade to HCL Volt MX Go v2.1 or later versions for continued support.</p> <p>Release date - July 8, 2024</p>"},{"location":"whatsnew/v204.html#new-features","title":"New features","text":""},{"location":"whatsnew/v204.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li> <p>Added <code>Other Metadata</code> entity type that enables a user to access additional Domino information not included in Domino data documents. The <code>Other Metadata</code> entity type currently supports an endpoint for getting Domino user information. </p> <p>For more information, see Other Metadata.</p> </li> <li> <p>Added capability for checking duplicate fields when generating a data model from a Domino view, and returning an error message to warn a user that there are duplicate fields.</p> </li> </ul>"},{"location":"whatsnew/v204.html#voltformula","title":"VoltFormula","text":""},{"location":"whatsnew/v204.html#rosetta-api","title":"Rosetta API","text":"<ul> <li> <p>Implemented new APIs:</p> Category API document <code>isCategory()</code><code>isResponseDoc()</code> file <code>fileCloseWindow()</code><code>filePrint()</code> formula <code>updateFormulaContext()</code> miscellaneous <code>hashPassword()</code> window <code>closeWindow()</code><code>reloadWindow()</code><code>windowMaximize()</code><code>windowMinimize()</code> <p>For more information, see the Rosetta API reference documentation .</p> </li> </ul>"},{"location":"whatsnew/v204.html#volt-iris","title":"Volt Iris","text":"<ul> <li> <p>Added a Clear button to the Formula Editor to enable a user to delete the shown formula, and a context menu option to delete a formula when right-clicking the formula in JavaScript code in the Formula Editor.</p> <p>For more information, see Clear formulas in controller and Action Editor.</p> </li> <li> <p>Added support for overriding download site and plugin feature site URLs via environment variables. Contact Customer Support for assistance.</p> </li> </ul>"},{"location":"whatsnew/v204.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v204.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li>Enhances readability and functionality of generated Domino forms and views containing DBCS characters in their names.</li> <li>Enables Details form, generated in Volt Iris based on Domino Object, to display images embedded in the Rich Text field in Domino.</li> <li>Removes the Rich Text fields from the generated Grid form in Volt Iris to enhance performance and match the behavior in Domino.  </li> </ul>"},{"location":"whatsnew/v204.html#design-import","title":"Design Import","text":"<ul> <li>Improved duplicate detection of forms, fields, and actions.</li> <li>Enhanced user experience by implementing UI improvements on the Forms and Views tabs on the Result page of the Design Import Wizard.</li> <li>Added a dialog to provide a visual cue that the import process is ongoing when clicking Use Existing on the Associate Foundry App page of the Design Import Wizard.</li> <li>Files can now be added in each field and downloaded per field, and multiple files can also be updated for each field.</li> </ul>"},{"location":"whatsnew/v204.html#voltformula_1","title":"VoltFormula","text":""},{"location":"whatsnew/v204.html#rosetta-api_1","title":"Rosetta API","text":"<ul> <li> <p>Implemented the following improvement modifications:</p> Category Description database Implemented enhancements to the <code>getDocField()</code> and <code>setDocField()</code> APIs. document Implemented enhancements to the <code>getField()</code> and <code>setField()</code> APIs. text Improved detection of Rich Text in Text functions. <p>For more information, see the Rosetta API reference documentation .</p> </li> </ul>"},{"location":"whatsnew/v204.html#volt-iris_1","title":"Volt Iris","text":"<ul> <li>VoltPrompt library now supports the dynamic size of the dialog based on the content size.</li> <li>Executes a Rosetta plugin download check whenever a Volt Iris user logs in to a Volt Foundry server or switches to another Volt Foundry server.</li> </ul>"},{"location":"whatsnew/v204.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v204.html#design-import_1","title":"Design Import","text":"<ul> <li>Fixed the UI issue where the Agents button isn't visible in the generated web app.</li> <li>Fixed the response mapping issue in the Object Services due to improper naming of the data model.</li> <li>Corrected the error description for fetching a single document if no records are found.</li> <li>Fixed errors on the Forms and Views tabs on the Result page of the Design Import Wizard when clicking the Show only with errors toggle to the on position.</li> <li>Fixed the issue where unsupported or unselected agents are showing on the Agents tab on the Result page of the Design Import Wizard.</li> </ul>"},{"location":"whatsnew/v204.html#voltformula_2","title":"VoltFormula","text":""},{"location":"whatsnew/v204.html#rosetta-api_2","title":"Rosetta API","text":"<ul> <li>Fixed DateTime functions in the date-time category to return strings instead of JavaScript date objects.</li> <li>Fixed issues related to the <code>adjust()</code> API under the date-time category for edge of month cases.</li> <li>Fixed the \"add\" bug to enable concatenation of strings.  </li> </ul>"},{"location":"whatsnew/v204.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Fixed definitions of relational operators and booleans for OpenFormula formula conversion.</li> <li>Fixed regression when using relational operators having equal (=) sign for OpenFormula formula conversion.</li> </ul>"},{"location":"whatsnew/v204.html#volt-iris_2","title":"Volt Iris","text":"<ul> <li>Fixed an issue where a previously converted JavaScript code isn't cleared when an invalid formula is entered in the Formula Editor.</li> <li>Fixed an issue where the Formula Results header isn't hidden when the Formula Editor is dismissed.</li> <li>Fixed an issue, encountered when updating an existing formula, to reset the formula location when deleting the formula and prevent converted JavaScript code from being added back to the code editor.</li> <li>Fixed an issue to validate the formula context owner to capture the right formula and prevent the processing of unnecessary tasks. \u00a0</li> </ul>"},{"location":"whatsnew/v204.html#others","title":"Others","text":""},{"location":"whatsnew/v204.html#domino-adapter_2","title":"Domino Adapter","text":"<ul> <li> <p>Added details for handling offline objects for views. </p> <p>For more information, see the note in Meta Fields.</p> </li> </ul>"},{"location":"whatsnew/v204.html#voltformula_3","title":"VoltFormula","text":""},{"location":"whatsnew/v204.html#rosetta-api_3","title":"Rosetta API","text":"<ul> <li>The <code>setHTTPHeader()</code> API has been moved from the miscellaneous category to the network category.</li> <li>There is no plan to implement the <code>password()</code> API under the user-environment category.  </li> </ul>"},{"location":"whatsnew/v210.html","title":"What's new in Volt MX Go v2.1","text":"<p>Release date - February 17, 2025</p>"},{"location":"whatsnew/v210.html#new-features","title":"New features","text":"<ul> <li> <p>Volt MX Go components are now provided as plugins for installation on Volt Foundry and Volt Iris using the Volt MX Go Plugin Installer. This setup enables users to access the features of Volt MX Go while benefiting from regular updates to Volt Foundry and Volt Iris, including release versions, service packs, and fix packs.</p> <p>It's important to note that Volt Foundry must be properly licensed with a Volt MX Go entitlement for the installed plugins to be enabled.</p> </li> <li> <p>Added support for Volt Foundry Single Container Solution.</p> </li> </ul>"},{"location":"whatsnew/v210.html#design-import","title":"Design Import","text":"<ul> <li> <p>Generates Object Service from Volt Iris to Volt Foundry via API call instead of using a ZIP file, reducing potential import timeout and ensuring consistency with enhancements in the Domino Adapter.</p> </li> <li> <p>Added support for form fields configured as read-only so that they're visible in the Details form and the Update form of the published app. Read-only fields visible in the Update form are uneditable.  </p> </li> </ul>"},{"location":"whatsnew/v210.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li> <p>Added ServerInfo endpoint for getting Domino and Domino REST API version information, and AttachmentsInfo endpoint for getting information of document attachments. For more information, see Other Metadata.</p> </li> <li> <p>The scope name can now be exposed from the Metadata attribute of the <code>x_0040unid</code> field of a form or a view of a generated data model in an Object Service.</p> </li> <li> <p>Added support for retrieving view documents using the query parameter <code>$filter=documentsOnly eq true</code> and retrieving distinct view documents using the query parameter <code>$filter=distinctDocuments eq true</code> when performing the view-based GET method. For more information, see Supported OData query parameters for view-based GET method.</p> </li> </ul>"},{"location":"whatsnew/v210.html#voltformula","title":"VoltFormula","text":""},{"location":"whatsnew/v210.html#rosetta-api","title":"Rosetta API","text":"<ul> <li> <p>Implemented new APIs:</p> Category API document <code>dialogBox()</code><code>openInNewWindow()</code> user-environment <code>platform()</code> <p>For more information, see the Rosetta API reference documentation .</p> </li> </ul>"},{"location":"whatsnew/v210.html#volt-iris","title":"Volt Iris","text":"<ul> <li>Added Hikes that can be used to learn concepts related to VoltFormula. For more information, see Access VoltFormula Hikes.</li> </ul>"},{"location":"whatsnew/v210.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v210.html#design-import_1","title":"Design Import","text":"<ul> <li>Implemented the following UI enhancements to the Design Import Wizard for a better user experience:<ul> <li>Added filter buttons on the Scope and Forms page to easily filter the active, inactive, and unsupported forms, views, and agents.</li> <li>Added an expander arrow on the Summary page to simultaneously show or hide the details of the imported forms, views, or agents.</li> <li>Added the Show failed imports toggle on the Agents tab to easily identify imported agents with errors.</li> </ul> </li> <li>Implemented improvements in the design import process to improve the handling of large databases and to enhance the user experience when interacting with the published app.</li> </ul>"},{"location":"whatsnew/v210.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li>Implemented UTF-8 encoding and decoding for all Rich Text content to ensure correct processing and display of DBCS characters.</li> </ul>"},{"location":"whatsnew/v210.html#voltformula_1","title":"VoltFormula","text":""},{"location":"whatsnew/v210.html#rosetta-api_1","title":"Rosetta API","text":"<ul> <li> <p>Implemented the following improvement modifications:</p> Category Description document Implemented enhancements to the <code>getField()</code> and <code>setField()</code> APIs to work with the browser document object model as the default framework. <p>For more information, see the Rosetta API reference documentation .</p> </li> <li> <p>Implemented the <code>@SelectDocuments</code> Notes Formula language function with improved API performance. It was also reconfigured to return the list of documents selected instead of the list of view records.</p> </li> </ul>"},{"location":"whatsnew/v210.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Converts <code>@If</code> Notes Formula language function to Native JavaScript.</li> <li>Returns async anonymous function by setting.</li> <li>Returns last valid statement by setting.</li> <li>Redefined string literals and escape sequences.</li> </ul>"},{"location":"whatsnew/v210.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v210.html#design-import_2","title":"Design Import","text":"<ul> <li>Fixed the issue related to long scope name that prevented the importation of the Domino application.</li> </ul>"},{"location":"whatsnew/v210.html#voltformula_2","title":"VoltFormula","text":""},{"location":"whatsnew/v210.html#volt-iris_1","title":"Volt Iris","text":"<ul> <li>Fixed the issue where the Rosetta Plugin was keeping the Live Preview feature of Volt Iris from working as expected.</li> <li>Fixed the issue where the Formula Results tab in the Formula Editor showed an error related to the evaluation of a converted code outside a function.</li> </ul>"},{"location":"whatsnew/v210.html#rosetta-api_2","title":"Rosetta API","text":"<ul> <li>Fixed the issue where the Rosetta SDK prevented the Live Preview feature of Volt Iris from working as expected.</li> <li>Fixed the issue where the <code>@Right</code> Notes Formula language function returned incorrect results.</li> <li>Fixed the issue that occurred when passing a function on the Rosetta <code>@If</code> API.</li> <li>Fixed the issue where the user-environment category was missing the <code>_notes</code> exported value.</li> </ul>"},{"location":"whatsnew/v210.html#rosetta-converter_1","title":"Rosetta Converter","text":"<ul> <li>Fixed the formula parameter having variable definition.</li> </ul>"},{"location":"whatsnew/v210.html#rosetta-plugin","title":"Rosetta Plugin","text":"<ul> <li>Fixed the issue of preventing the Live Preview feature of Volt Iris from working as expected.</li> </ul>"},{"location":"whatsnew/v210.html#volt-iris_2","title":"Volt Iris","text":"<ul> <li> <p>Fixed the issue where building the web app fails when executing Build and Publish Web and selecting Release as the Build Mode.</p> </li> <li> <p>Fixed the issue where an imported Domino application, published via Build and Publish Web, didn't function as expected. Specifically, the selected data by a view wasn't showing correctly, and a user couldn't add data to forms.</p> </li> <li> <p>Fixed the issue where a Base64 encoded string was displayed instead of the Rich Text content when accessing a web app published via\u00a0Build and Publish Web.</p> </li> </ul>"},{"location":"whatsnew/v210.html#volt-foundry","title":"Volt Foundry","text":"<ul> <li>Fixed the issue where a user can't edit an Active Directory Identity Provider configuration as the Active Directory configuration information was missing.</li> </ul>"},{"location":"whatsnew/v210.html#others","title":"Others","text":"<ul> <li> <p>Added details on requiring the Volt Iris workspace to contain a\u00a0<code>pluginsInfo.json</code>\u00a0file in the\u00a0<code>.plugins</code>\u00a0directory for the new installation of Volt MX Go plugins to Volt Iris. For more information, see Known limitations.  </p> </li> <li> <p>Added option for allowing users to configure Kubernetes Ingress for Domino REST API using their custom SSL certificate. For more information, see Configure Kubernetes Ingress for Domino REST API.  </p> </li> </ul>"},{"location":"whatsnew/v210.html#design-import_3","title":"Design Import","text":"<ul> <li> <p>Added details on how Design Import handles forms and views having DBCS character names or duplicate names, and also custom forms created in Domino REST API. For more information, see Known limitations.</p> </li> <li> <p>Added details on how Design Import handles Domino database views with columns having the same name. For more information, see Known limitations.</p> </li> </ul>"},{"location":"whatsnew/v210.html#domino-adapter_2","title":"Domino Adapter","text":"<ul> <li> <p>Added details on how Domino Adapter handles Domino database views with columns having the same name.</p> <p>For more information, see Known limitations.</p> </li> </ul>"},{"location":"whatsnew/v210.html#voltformula_3","title":"VoltFormula","text":"<ul> <li> <p>Added details on how to represent view selection formulas in API.</p> <p>For more information, see Representing view selection formulas in API.</p> </li> </ul>"},{"location":"whatsnew/v210.html#rosetta-api_3","title":"Rosetta API","text":"<ul> <li>There is no plan to implement the <code>windowTile()</code> API under the window category.</li> <li>Updated the implementation status of the <code>@If</code> Notes Formula language function to no plans to implement.</li> <li>The <code>context()</code> API has been moved from the volt-formula category to the document category.</li> <li>The <code>debug()</code> API has been moved from the volt-formula category to the information category.</li> <li>Removed the database.utils and volt-formula categories from the Rosetta API reference documentation .</li> </ul>"},{"location":"whatsnew/v210.html#volt-iris_3","title":"Volt Iris","text":"<ul> <li>Removed the @If, IF option in the Converter Configuration of the VoltFormula tab in the Project Settings.</li> </ul>"},{"location":"whatsnew/v210.html#voltscript-early-access","title":"VoltScript Early Access","text":"<p>The Early Access v3 release of VoltScript is now available and features a Volt Foundry image that allows you to write and test VoltScript integration services and VoltScript preprocessors / postprocessors. It also includes improvements for VoltScript Runtime, VoltScript Archipelago Dependency Management, and VoltScript Build Management VS Code Extension.</p> <p>To learn more about VoltScript and related components, see VoltScript Documentation .</p>"},{"location":"whatsnew/v211.html","title":"What's new in Volt MX Go v2.1.1","text":"<p>Release date - April 28, 2025</p>"},{"location":"whatsnew/v211.html#new-features","title":"New features","text":""},{"location":"whatsnew/v211.html#design-import","title":"Design Import","text":"<ul> <li>A new search feature has been added to the Forms, Views, and Agents tabs on the Scope and Forms page of the Design Import Wizard. It enables users to quickly find forms, fields, actions, views, and agents, with results updating automatically as they type. It also displays the number of search results for better user experience, particularly for applications that contain many forms, fields, actions, views, and agents.</li> </ul>"},{"location":"whatsnew/v211.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li> <p>The maximum number of documents in the view of a generated data model in an Object Service can now be exposed via the <code>x_0040totalCount</code> meta field. For more information, see Meta Fields.</p> </li> <li> <p>The original Domino object model names, even those containing special characters, can now be exposed from the Metadata attribute of the <code>x_0040unid</code> field of a form or a view of a generated data model in an Object Service.</p> </li> <li>Checks the Domino REST API version when generating an Object Service data model to ensure that the version of Domino REST API is compatible with and supports the latest features of the Domino Adapter. Users are advised to upgrade Domino REST API to the compatible version when the check fails.</li> </ul>"},{"location":"whatsnew/v211.html#improvements","title":"Improvements","text":"<ul> <li>To ensure proper operation, the installed versions of Volt Foundry and Volt Iris are now checked for compatibility when installing the Volt MX Go plugins. If incompatible, the plugin installation stops, and users are informed of their current and required minimum Volt Foundry and Volt Iris versions.</li> </ul>"},{"location":"whatsnew/v211.html#design-import_1","title":"Design Import","text":"<ul> <li>Added the following operations to the Design Import integration service:<ul> <li><code>runFormula</code> for executing a formula and returning the results.</li> <li><code>getScope</code> for retrieving the configuration for a scope mapped to a database schema.</li> <li><code>bulkGetDocumentByUnid</code> for retrieving documents in a single call by UNID.</li> </ul> </li> </ul>"},{"location":"whatsnew/v211.html#domino-adapter_1","title":"Domino Adapter","text":"<ul> <li>Users can now see the updated documents in the Response after performing a BULK UPDATE, as their UNIDs are mapped to the <code>x_0040unid</code> field in Volt Foundry, even with the Return Documents from Bulk Update parameter set to false.</li> <li>Domino icons indicating links to Domino attachments are now supported and viewable on the built and published Domino application.</li> <li>The columns in the generated Grid form are now displayed similarly to the column arrangement in Domino, resulting in a better user experience.</li> <li>Added <code>x_0040warnings</code> meta-field for form-based data models. The <code>x_0040warnings</code> meta-field contains notifications, messages, or other relevant information that indicates potential issues that might need attention, providing users with a way to track and manage those issues. For more information, see Meta fields.</li> </ul>"},{"location":"whatsnew/v211.html#voltformula","title":"VoltFormula","text":""},{"location":"whatsnew/v211.html#volt-iris","title":"Volt Iris","text":"<ul> <li>Obtain smarter results from the Rosetta Converter when generating return statements from a formula.</li> <li>Fixed the icon and the title for the\u00a0Add Formula\u00a0action button in the\u00a0Action Editor.</li> </ul>"},{"location":"whatsnew/v211.html#rosetta-api","title":"Rosetta API","text":"<ul> <li>Added support for using Domino View and Form names with special characters.</li> <li>Implemented Rosetta API for Volt Formula function <code>getViewEntriesCount</code>.  </li> <li>Added implementation details related to MailSend() and Compose().</li> <li>Updated the Rosetta API reference documentation.</li> </ul>"},{"location":"whatsnew/v211.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Defined conversion mechanism for\u00a0<code>@Return</code> Notes formula statement.</li> </ul>"},{"location":"whatsnew/v211.html#others","title":"Others","text":"<ul> <li>Added details of what users must be aware of and what related actions to take when using Volt MX Go. For more information, see Additional considerations.</li> </ul>"},{"location":"whatsnew/v212.html","title":"What's new in Volt MX Go v2.1.2","text":"<p>Release date - June 16, 2025</p>"},{"location":"whatsnew/v212.html#new-features","title":"New features","text":""},{"location":"whatsnew/v212.html#design-import","title":"Design Import","text":"<ul> <li> <p>The import of checkbox and radio button fields in a Domino application is now supported, along with their generation in the Volt Iris-published Domino application. This feature simplifies the selection of available options within the Volt Iris-published Domino application, resulting in a better user experience.</p> </li> <li> <p>The logout action is now supported from the logout button in the header of the Dashboard form within the Volt Iris-published Domino application.  </p> </li> </ul>"},{"location":"whatsnew/v212.html#voltformula","title":"VoltFormula","text":""},{"location":"whatsnew/v212.html#rosetta-api","title":"Rosetta API","text":"<ul> <li> <p>Implemented a new API:</p> Category API network <code>restfulAPI()</code> <p>For more information, see RestfulAPI() and the Rosetta API reference documentation .</p> </li> </ul>"},{"location":"whatsnew/v212.html#improvements","title":"Improvements","text":""},{"location":"whatsnew/v212.html#design-import_1","title":"Design Import","text":"<ul> <li> <p>A user can now readily correct entries on the Create New Identity Service page of the Design Import Wizard in case of an error connecting to Domino REST API during the Identity Service step of the Design Import workflow. When the error occurs, the user is informed of the details and how to address it. The user is redirected to the Create New Identity Service page, where previously entered information is saved, simplifying the correction process since only the necessary details need to be updated.</p> <p>In case of an error connecting to Domino REST API using an existing identity service during the Identity Service step, the user is informed of the details and how to address it. This enables the user to easily update the existing identity service in Volt Foundry based on the received information.</p> </li> </ul>"},{"location":"whatsnew/v212.html#domino-adapter","title":"Domino Adapter","text":"<ul> <li> <p>Improved the Domino Adapter function for displaying date values in label widgets by allowing it to show the received invalid date values as raw string values. Additionally, when the function encounters an invalid date value, a console log is generated to inform users that the raw string representation of the invalid date is displayed.</p> </li> <li> <p>Improved the Domino Adapter function for displaying date values in calendar widgets by allowing it to show a null value when it receives an invalid date value. This change prevents errors that could impact other fields on the page of a Volt Iris-published application. Additionally, a console log is generated when the function receives an invalid date value, informing users that it encountered an error while converting the invalid date value into the required format for the calendar widget.</p> </li> </ul>"},{"location":"whatsnew/v212.html#voltformula_1","title":"VoltFormula","text":""},{"location":"whatsnew/v212.html#volt-iris","title":"Volt Iris","text":"<ul> <li>Added definitions and sample snippets for <code>@Debug</code>, <code>@Context</code>, and <code>@RestfulAPI</code> Rosetta-only specific functions under the Custom category in the Formula Samples dialog.</li> </ul>"},{"location":"whatsnew/v212.html#rosetta-converter","title":"Rosetta Converter","text":"<ul> <li>Added definitions and formula samples for <code>@Debug</code>, <code>@Context</code>, and <code>@RestfulAPI</code> Rosetta-only specific functions.</li> <li>Updated the conversion mechanism for <code>ENVIRONMENT</code> and <code>@Environment</code> to accept formula expressions as params.</li> </ul>"},{"location":"whatsnew/v212.html#volt-iris_1","title":"Volt Iris","text":"<ul> <li>Improved form generation by skipping form generation for methods of data models not used to display Domino data, such as the Other Metadata data models. This enhancement streamlines form generation and avoids erroneous warnings in the Volt Iris log when generating forms.</li> </ul>"},{"location":"whatsnew/v212.html#resolved-issues","title":"Resolved issues","text":""},{"location":"whatsnew/v212.html#volt-iris_2","title":"Volt Iris","text":"<ul> <li>Fixed the issue with the improper rendering of the Details form in a Volt Iris-published Domino application.</li> </ul>"},{"location":"whatsnew/v212.html#others","title":"Others","text":""},{"location":"whatsnew/v212.html#domino-adapter_1","title":"Domino Adapter","text":"<p>Added details related to special characters that you can't use as string values when performing the methods for interacting with the data models. For more information, see Special characters.</p>"},{"location":"whatsnew/v212.html#voltscript-early-access","title":"VoltScript Early Access","text":"<p>The Early Access v4 release of VoltScript is now available and provides new features and enhancements for VoltScript Runtime, VoltScript Archipelago Dependency Management, VoltScript Build Management VS Code Extension, and other VoltScript Extensions.</p> <p>To learn more about VoltScript and related components, see VoltScript Documentation .</p>"}]}